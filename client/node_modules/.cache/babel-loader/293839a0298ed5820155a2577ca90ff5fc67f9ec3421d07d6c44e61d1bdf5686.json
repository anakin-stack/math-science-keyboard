{"ast":null,"code":"\"use strict\";\n\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\nconst {\n  isConnected,\n  descendantsByHTMLLocalNames\n} = require(\"../helpers/traversal\");\nconst {\n  domSymbolTree\n} = require(\"../helpers/internal-constants\");\nconst HTMLCollection = require(\"../generated/HTMLCollection\");\nconst notImplemented = require(\"../../browser/not-implemented\");\nconst {\n  reflectURLAttribute\n} = require(\"../../utils\");\nconst Event = require(\"../generated/Event\");\n\n// http://www.whatwg.org/specs/web-apps/current-work/#category-listed\nconst listedElements = new Set([\"button\", \"fieldset\", \"input\", \"keygen\", \"object\", \"select\", \"textarea\"]);\n\n// https://html.spec.whatwg.org/multipage/forms.html#category-submit\nconst submittableElements = new Set([\"button\", \"input\", \"object\", \"select\", \"textarea\"]);\nconst encTypes = new Set([\"application/x-www-form-urlencoded\", \"multipart/form-data\", \"text/plain\"]);\nconst methods = new Set([\"get\", \"post\", \"dialog\"]);\nconst constraintValidationPositiveResult = Symbol(\"positive\");\nconst constraintValidationNegativeResult = Symbol(\"negative\");\nclass HTMLFormElementImpl extends HTMLElementImpl {\n  _descendantAdded(parent, child) {\n    const form = this;\n    for (const el of domSymbolTree.treeIterator(child)) {\n      if (typeof el._changedFormOwner === \"function\") {\n        el._changedFormOwner(form);\n      }\n    }\n    super._descendantAdded.apply(this, arguments);\n  }\n  _descendantRemoved(parent, child) {\n    for (const el of domSymbolTree.treeIterator(child)) {\n      if (typeof el._changedFormOwner === \"function\") {\n        el._changedFormOwner(null);\n      }\n    }\n    super._descendantRemoved.apply(this, arguments);\n  }\n  get elements() {\n    return HTMLCollection.createImpl([], {\n      element: this,\n      query: () => descendantsByHTMLLocalNames(this, listedElements)\n    });\n  }\n  get length() {\n    return this.elements.length;\n  }\n  _doSubmit() {\n    if (!isConnected(this)) {\n      return;\n    }\n    const ev = this._ownerDocument.createEvent(\"HTMLEvents\");\n    ev.initEvent(\"submit\", true, true);\n    if (this.dispatchEvent(ev)) {\n      this.submit();\n    }\n  }\n  submit() {\n    notImplemented(\"HTMLFormElement.prototype.submit\", this._ownerDocument._defaultView);\n  }\n  reset() {\n    for (const el of this.elements) {\n      if (typeof el._formReset === \"function\") {\n        el._formReset();\n      }\n    }\n  }\n  get method() {\n    let method = this.getAttribute(\"method\");\n    if (method) {\n      method = method.toLowerCase();\n    }\n    if (methods.has(method)) {\n      return method;\n    }\n    return \"get\";\n  }\n  set method(V) {\n    this.setAttribute(\"method\", V);\n  }\n  get enctype() {\n    let type = this.getAttribute(\"enctype\");\n    if (type) {\n      type = type.toLowerCase();\n    }\n    if (encTypes.has(type)) {\n      return type;\n    }\n    return \"application/x-www-form-urlencoded\";\n  }\n  set enctype(V) {\n    this.setAttribute(\"enctype\", V);\n  }\n  get action() {\n    const attributeValue = this.getAttribute(\"action\");\n    if (attributeValue === null || attributeValue === \"\") {\n      return this._ownerDocument.URL;\n    }\n    return reflectURLAttribute(this, \"action\");\n  }\n  set action(V) {\n    this.setAttribute(\"action\", V);\n  }\n\n  // If the checkValidity() method is invoked, the user agent must statically validate the\n  // constraints of the form element, and return true if the constraint validation returned\n  // a positive result, and false if it returned a negative result.\n  checkValidity() {\n    return this._staticallyValidateConstraints().result === constraintValidationPositiveResult;\n  }\n\n  // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#interactively-validate-the-constraints\n  reportValidity() {\n    return this.checkValidity();\n  }\n\n  // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#statically-validate-the-constraints\n  _staticallyValidateConstraints() {\n    const controls = [];\n    for (const el of domSymbolTree.treeIterator(this)) {\n      if (el.form === this && submittableElements.has(el.nodeName.toLowerCase())) {\n        controls.push(el);\n      }\n    }\n    const invalidControls = [];\n    for (const control of controls) {\n      if (control._isCandidateForConstraintValidation() && !control._satisfiesConstraints()) {\n        invalidControls.push(control);\n      }\n    }\n    if (invalidControls.length === 0) {\n      return {\n        result: constraintValidationPositiveResult\n      };\n    }\n    const unhandledInvalidControls = [];\n    for (const invalidControl of invalidControls) {\n      const notCancelled = invalidControl.dispatchEvent(Event.createImpl([\"invalid\", {\n        cancelable: true\n      }]));\n      if (notCancelled) {\n        unhandledInvalidControls.push(invalidControl);\n      }\n    }\n    return {\n      result: constraintValidationNegativeResult,\n      unhandledInvalidControls\n    };\n  }\n}\nmodule.exports = {\n  implementation: HTMLFormElementImpl\n};","map":{"version":3,"names":["HTMLElementImpl","require","implementation","isConnected","descendantsByHTMLLocalNames","domSymbolTree","HTMLCollection","notImplemented","reflectURLAttribute","Event","listedElements","Set","submittableElements","encTypes","methods","constraintValidationPositiveResult","Symbol","constraintValidationNegativeResult","HTMLFormElementImpl","_descendantAdded","parent","child","form","el","treeIterator","_changedFormOwner","apply","arguments","_descendantRemoved","elements","createImpl","element","query","length","_doSubmit","ev","_ownerDocument","createEvent","initEvent","dispatchEvent","submit","_defaultView","reset","_formReset","method","getAttribute","toLowerCase","has","V","setAttribute","enctype","type","action","attributeValue","URL","checkValidity","_staticallyValidateConstraints","result","reportValidity","controls","nodeName","push","invalidControls","control","_isCandidateForConstraintValidation","_satisfiesConstraints","unhandledInvalidControls","invalidControl","notCancelled","cancelable","module","exports"],"sources":["G:/scientificKeyboard/keyboard/node_modules/mathjax-node/node_modules/jsdom/lib/jsdom/living/nodes/HTMLFormElement-impl.js"],"sourcesContent":["\"use strict\";\n\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\nconst { isConnected, descendantsByHTMLLocalNames } = require(\"../helpers/traversal\");\nconst { domSymbolTree } = require(\"../helpers/internal-constants\");\nconst HTMLCollection = require(\"../generated/HTMLCollection\");\nconst notImplemented = require(\"../../browser/not-implemented\");\nconst { reflectURLAttribute } = require(\"../../utils\");\nconst Event = require(\"../generated/Event\");\n\n// http://www.whatwg.org/specs/web-apps/current-work/#category-listed\nconst listedElements = new Set([\"button\", \"fieldset\", \"input\", \"keygen\", \"object\", \"select\", \"textarea\"]);\n\n// https://html.spec.whatwg.org/multipage/forms.html#category-submit\nconst submittableElements = new Set([\"button\", \"input\", \"object\", \"select\", \"textarea\"]);\n\nconst encTypes = new Set([\n  \"application/x-www-form-urlencoded\",\n  \"multipart/form-data\",\n  \"text/plain\"\n]);\n\nconst methods = new Set([\n  \"get\",\n  \"post\",\n  \"dialog\"\n]);\n\nconst constraintValidationPositiveResult = Symbol(\"positive\");\nconst constraintValidationNegativeResult = Symbol(\"negative\");\n\nclass HTMLFormElementImpl extends HTMLElementImpl {\n  _descendantAdded(parent, child) {\n    const form = this;\n    for (const el of domSymbolTree.treeIterator(child)) {\n      if (typeof el._changedFormOwner === \"function\") {\n        el._changedFormOwner(form);\n      }\n    }\n\n    super._descendantAdded.apply(this, arguments);\n  }\n\n  _descendantRemoved(parent, child) {\n    for (const el of domSymbolTree.treeIterator(child)) {\n      if (typeof el._changedFormOwner === \"function\") {\n        el._changedFormOwner(null);\n      }\n    }\n\n    super._descendantRemoved.apply(this, arguments);\n  }\n\n  get elements() {\n    return HTMLCollection.createImpl([], {\n      element: this,\n      query: () => descendantsByHTMLLocalNames(this, listedElements)\n    });\n  }\n\n  get length() {\n    return this.elements.length;\n  }\n\n  _doSubmit() {\n    if (!isConnected(this)) {\n      return;\n    }\n    const ev = this._ownerDocument.createEvent(\"HTMLEvents\");\n    ev.initEvent(\"submit\", true, true);\n    if (this.dispatchEvent(ev)) {\n      this.submit();\n    }\n  }\n\n  submit() {\n    notImplemented(\"HTMLFormElement.prototype.submit\", this._ownerDocument._defaultView);\n  }\n\n  reset() {\n    for (const el of this.elements) {\n      if (typeof el._formReset === \"function\") {\n        el._formReset();\n      }\n    }\n  }\n\n  get method() {\n    let method = this.getAttribute(\"method\");\n    if (method) {\n      method = method.toLowerCase();\n    }\n\n    if (methods.has(method)) {\n      return method;\n    }\n    return \"get\";\n  }\n\n  set method(V) {\n    this.setAttribute(\"method\", V);\n  }\n\n  get enctype() {\n    let type = this.getAttribute(\"enctype\");\n    if (type) {\n      type = type.toLowerCase();\n    }\n\n    if (encTypes.has(type)) {\n      return type;\n    }\n    return \"application/x-www-form-urlencoded\";\n  }\n\n  set enctype(V) {\n    this.setAttribute(\"enctype\", V);\n  }\n\n  get action() {\n    const attributeValue = this.getAttribute(\"action\");\n    if (attributeValue === null || attributeValue === \"\") {\n      return this._ownerDocument.URL;\n    }\n\n    return reflectURLAttribute(this, \"action\");\n  }\n\n  set action(V) {\n    this.setAttribute(\"action\", V);\n  }\n\n  // If the checkValidity() method is invoked, the user agent must statically validate the\n  // constraints of the form element, and return true if the constraint validation returned\n  // a positive result, and false if it returned a negative result.\n  checkValidity() {\n    return this._staticallyValidateConstraints().result === constraintValidationPositiveResult;\n  }\n\n  // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#interactively-validate-the-constraints\n  reportValidity() {\n    return this.checkValidity();\n  }\n\n  // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#statically-validate-the-constraints\n  _staticallyValidateConstraints() {\n    const controls = [];\n    for (const el of domSymbolTree.treeIterator(this)) {\n      if (el.form === this && submittableElements.has(el.nodeName.toLowerCase())) {\n        controls.push(el);\n      }\n    }\n\n    const invalidControls = [];\n\n    for (const control of controls) {\n      if (control._isCandidateForConstraintValidation() && !control._satisfiesConstraints()) {\n        invalidControls.push(control);\n      }\n    }\n\n    if (invalidControls.length === 0) {\n      return { result: constraintValidationPositiveResult };\n    }\n\n    const unhandledInvalidControls = [];\n    for (const invalidControl of invalidControls) {\n      const notCancelled = invalidControl.dispatchEvent(Event.createImpl([\"invalid\", { cancelable: true }]));\n      if (notCancelled) {\n        unhandledInvalidControls.push(invalidControl);\n      }\n    }\n\n    return { result: constraintValidationNegativeResult, unhandledInvalidControls };\n  }\n}\n\nmodule.exports = {\n  implementation: HTMLFormElementImpl\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}