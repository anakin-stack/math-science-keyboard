{"ast":null,"code":"\"use strict\";\n\nconst DOMException = require(\"domexception\");\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\nconst notImplemented = require(\"../../browser/not-implemented\");\nconst {\n  reflectURLAttribute\n} = require(\"../../utils\");\nfunction getTimeRangeDummy() {\n  return {\n    length: 0,\n    start() {\n      return 0;\n    },\n    end() {\n      return 0;\n    }\n  };\n}\nclass HTMLMediaElementImpl extends HTMLElementImpl {\n  constructor(args, privateData) {\n    super(args, privateData);\n    this._muted = false;\n    this._volume = 1.0;\n    this.readyState = 0;\n    this.networkState = 0;\n    this.currentTime = 0;\n    this.currentSrc = \"\";\n    this.buffered = getTimeRangeDummy();\n    this.seeking = false;\n    this.duration = 0;\n    this.paused = true;\n    this.played = getTimeRangeDummy();\n    this.seekable = getTimeRangeDummy();\n    this.ended = false;\n    this.audioTracks = [];\n    this.videoTracks = [];\n    this.textTracks = [];\n  }\n  // Implemented accoring to W3C Draft 22 August 2012\n  set defaultPlaybackRate(v) {\n    if (v === 0.0) {\n      throw new DOMException(\"The operation is not supported.\", \"NotSupportedError\");\n    }\n    if (this._defaultPlaybackRate !== v) {\n      this._defaultPlaybackRate = v;\n      this._dispatchRateChange();\n    }\n  }\n  _dispatchRateChange() {\n    const ev = this._ownerDocument.createEvent(\"HTMLEvents\");\n    ev.initEvent(\"ratechange\", false, false);\n    this.dispatchEvent(ev);\n  }\n  get defaultPlaybackRate() {\n    if (this._defaultPlaybackRate === undefined) {\n      return 1.0;\n    }\n    return this._defaultPlaybackRate;\n  }\n  get playbackRate() {\n    if (this._playbackRate === undefined) {\n      return 1.0;\n    }\n    return this._playbackRate;\n  }\n  set playbackRate(v) {\n    if (v !== this._playbackRate) {\n      this._playbackRate = v;\n      this._dispatchRateChange();\n    }\n  }\n  get muted() {\n    return this._muted;\n  }\n  _dispatchVolumeChange() {\n    const ev = this._ownerDocument.createEvent(\"HTMLEvents\");\n    ev.initEvent(\"volumechange\", false, false);\n    this.dispatchEvent(ev);\n  }\n  set muted(v) {\n    if (v !== this._muted) {\n      this._muted = v;\n      this._dispatchVolumeChange();\n    }\n  }\n  get defaultMuted() {\n    return this.getAttribute(\"muted\") !== null;\n  }\n  set defaultMuted(v) {\n    if (v) {\n      this.setAttribute(\"muted\", v);\n    } else {\n      this.removeAttribute(\"muted\");\n    }\n  }\n  get volume() {\n    return this._volume;\n  }\n  set volume(v) {\n    if (v < 0 || v > 1) {\n      throw new DOMException(\"The index is not in the allowed range.\", \"IndexSizeError\");\n    }\n    if (this._volume !== v) {\n      this._volume = v;\n      this._dispatchVolumeChange();\n    }\n  }\n\n  // Not (yet) implemented according to spec\n  // Should return sane default values\n  load() {\n    notImplemented(\"HTMLMediaElement.prototype.load\", this._ownerDocument._defaultView);\n  }\n  canPlayType() {\n    return \"\";\n  }\n  play() {\n    notImplemented(\"HTMLMediaElement.prototype.play\", this._ownerDocument._defaultView);\n  }\n  pause() {\n    notImplemented(\"HTMLMediaElement.prototype.pause\", this._ownerDocument._defaultView);\n  }\n  addTextTrack() {\n    notImplemented(\"HTMLMediaElement.prototype.addNextTrack\", this._ownerDocument._defaultView);\n  }\n  get src() {\n    return reflectURLAttribute(this, \"src\");\n  }\n  set src(value) {\n    this.setAttribute(\"src\", value);\n  }\n}\nmodule.exports = {\n  implementation: HTMLMediaElementImpl\n};","map":{"version":3,"names":["DOMException","require","HTMLElementImpl","implementation","notImplemented","reflectURLAttribute","getTimeRangeDummy","length","start","end","HTMLMediaElementImpl","constructor","args","privateData","_muted","_volume","readyState","networkState","currentTime","currentSrc","buffered","seeking","duration","paused","played","seekable","ended","audioTracks","videoTracks","textTracks","defaultPlaybackRate","v","_defaultPlaybackRate","_dispatchRateChange","ev","_ownerDocument","createEvent","initEvent","dispatchEvent","undefined","playbackRate","_playbackRate","muted","_dispatchVolumeChange","defaultMuted","getAttribute","setAttribute","removeAttribute","volume","load","_defaultView","canPlayType","play","pause","addTextTrack","src","value","module","exports"],"sources":["G:/scientificKeyboard/keyboard/node_modules/mathjax-node/node_modules/jsdom/lib/jsdom/living/nodes/HTMLMediaElement-impl.js"],"sourcesContent":["\"use strict\";\nconst DOMException = require(\"domexception\");\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\nconst notImplemented = require(\"../../browser/not-implemented\");\nconst { reflectURLAttribute } = require(\"../../utils\");\n\nfunction getTimeRangeDummy() {\n  return {\n    length: 0,\n    start() {\n      return 0;\n    },\n    end() {\n      return 0;\n    }\n  };\n}\n\nclass HTMLMediaElementImpl extends HTMLElementImpl {\n  constructor(args, privateData) {\n    super(args, privateData);\n\n    this._muted = false;\n    this._volume = 1.0;\n    this.readyState = 0;\n    this.networkState = 0;\n    this.currentTime = 0;\n    this.currentSrc = \"\";\n    this.buffered = getTimeRangeDummy();\n    this.seeking = false;\n    this.duration = 0;\n    this.paused = true;\n    this.played = getTimeRangeDummy();\n    this.seekable = getTimeRangeDummy();\n    this.ended = false;\n    this.audioTracks = [];\n    this.videoTracks = [];\n    this.textTracks = [];\n  }\n  // Implemented accoring to W3C Draft 22 August 2012\n  set defaultPlaybackRate(v) {\n    if (v === 0.0) {\n      throw new DOMException(\"The operation is not supported.\", \"NotSupportedError\");\n    }\n    if (this._defaultPlaybackRate !== v) {\n      this._defaultPlaybackRate = v;\n      this._dispatchRateChange();\n    }\n  }\n\n  _dispatchRateChange() {\n    const ev = this._ownerDocument.createEvent(\"HTMLEvents\");\n    ev.initEvent(\"ratechange\", false, false);\n    this.dispatchEvent(ev);\n  }\n  get defaultPlaybackRate() {\n    if (this._defaultPlaybackRate === undefined) {\n      return 1.0;\n    }\n    return this._defaultPlaybackRate;\n  }\n  get playbackRate() {\n    if (this._playbackRate === undefined) {\n      return 1.0;\n    }\n    return this._playbackRate;\n  }\n  set playbackRate(v) {\n    if (v !== this._playbackRate) {\n      this._playbackRate = v;\n      this._dispatchRateChange();\n    }\n  }\n  get muted() {\n    return this._muted;\n  }\n  _dispatchVolumeChange() {\n    const ev = this._ownerDocument.createEvent(\"HTMLEvents\");\n    ev.initEvent(\"volumechange\", false, false);\n    this.dispatchEvent(ev);\n  }\n  set muted(v) {\n    if (v !== this._muted) {\n      this._muted = v;\n      this._dispatchVolumeChange();\n    }\n  }\n  get defaultMuted() {\n    return this.getAttribute(\"muted\") !== null;\n  }\n  set defaultMuted(v) {\n    if (v) {\n      this.setAttribute(\"muted\", v);\n    } else {\n      this.removeAttribute(\"muted\");\n    }\n  }\n  get volume() {\n    return this._volume;\n  }\n  set volume(v) {\n    if (v < 0 || v > 1) {\n      throw new DOMException(\"The index is not in the allowed range.\", \"IndexSizeError\");\n    }\n    if (this._volume !== v) {\n      this._volume = v;\n      this._dispatchVolumeChange();\n    }\n  }\n\n  // Not (yet) implemented according to spec\n  // Should return sane default values\n  load() {\n    notImplemented(\"HTMLMediaElement.prototype.load\", this._ownerDocument._defaultView);\n  }\n  canPlayType() {\n    return \"\";\n  }\n  play() {\n    notImplemented(\"HTMLMediaElement.prototype.play\", this._ownerDocument._defaultView);\n  }\n  pause() {\n    notImplemented(\"HTMLMediaElement.prototype.pause\", this._ownerDocument._defaultView);\n  }\n  addTextTrack() {\n    notImplemented(\"HTMLMediaElement.prototype.addNextTrack\", this._ownerDocument._defaultView);\n  }\n\n  get src() {\n    return reflectURLAttribute(this, \"src\");\n  }\n\n  set src(value) {\n    this.setAttribute(\"src\", value);\n  }\n}\n\nmodule.exports = {\n  implementation: HTMLMediaElementImpl\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}