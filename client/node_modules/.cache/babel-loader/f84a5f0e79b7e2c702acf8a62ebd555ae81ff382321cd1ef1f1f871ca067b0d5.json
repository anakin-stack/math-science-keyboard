{"ast":null,"code":"\"use strict\";\n\n/* eslint-disable no-new-func */\nconst acorn = require(\"acorn\");\nconst findGlobals = require(\"acorn-globals\");\nconst escodegen = require(\"escodegen\");\n\n// We can't use the default browserify vm shim because it doesn't work in a web worker.\n\n// From ES spec table of contents. Also, don't forget the Annex B additions.\n// If someone feels ambitious maybe make this into an npm package.\nconst builtInConsts = [\"Infinity\", \"NaN\", \"undefined\"];\nconst otherBuiltIns = [\"isFinite\", \"isNaN\", \"parseFloat\", \"parseInt\", \"decodeURI\", \"decodeURIComponent\", \"encodeURI\", \"encodeURIComponent\", \"Array\", \"ArrayBuffer\", \"Boolean\", \"DataView\", \"Date\", \"Error\", \"EvalError\", \"Float32Array\", \"Float64Array\", \"Function\", \"Int8Array\", \"Int16Array\", \"Int32Array\", \"Map\", \"Number\", \"Object\", \"Proxy\", \"Promise\", \"RangeError\", \"ReferenceError\", \"RegExp\", \"Set\", \"String\", \"Symbol\", \"SyntaxError\", \"TypeError\", \"Uint8Array\", \"Uint8ClampedArray\", \"Uint16Array\", \"Uint32Array\", \"URIError\", \"WeakMap\", \"WeakSet\", \"JSON\", \"Math\", \"Reflect\", \"escape\", \"unescape\"];\nexports.createContext = function (sandbox) {\n  Object.defineProperty(sandbox, \"__isVMShimContext\", {\n    value: true,\n    writable: true,\n    configurable: true,\n    enumerable: false\n  });\n  for (const builtIn of builtInConsts) {\n    Object.defineProperty(sandbox, builtIn, {\n      value: global[builtIn],\n      writable: false,\n      configurable: false,\n      enumerable: false\n    });\n  }\n  for (const builtIn of otherBuiltIns) {\n    Object.defineProperty(sandbox, builtIn, {\n      value: global[builtIn],\n      writable: true,\n      configurable: true,\n      enumerable: false\n    });\n  }\n  Object.defineProperty(sandbox, \"eval\", {\n    value(code) {\n      return exports.runInContext(code, sandbox);\n    },\n    writable: true,\n    configurable: true,\n    enumerable: false\n  });\n};\nexports.isContext = function (sandbox) {\n  return sandbox.__isVMShimContext;\n};\nexports.runInContext = function (code, contextifiedSandbox, options) {\n  if (code === \"this\") {\n    // Special case for during window creation.\n    return contextifiedSandbox;\n  }\n  if (options === undefined) {\n    options = {};\n  }\n  const comments = [];\n  const tokens = [];\n  const ast = acorn.parse(code, {\n    allowReturnOutsideFunction: true,\n    ranges: true,\n    // collect comments in Esprima's format\n    onComment: comments,\n    // collect token ranges\n    onToken: tokens\n  });\n\n  // make sure we keep comments\n  escodegen.attachComments(ast, comments, tokens);\n  const globals = findGlobals(ast);\n  for (let i = 0; i < globals.length; ++i) {\n    if (globals[i].name === \"window\" || globals[i].name === \"this\") {\n      continue;\n    }\n    const {\n      nodes\n    } = globals[i];\n    for (let j = 0; j < nodes.length; ++j) {\n      const {\n        type,\n        name\n      } = nodes[j];\n      nodes[j].type = \"MemberExpression\";\n      nodes[j].property = {\n        name,\n        type\n      };\n      nodes[j].computed = false;\n      nodes[j].object = {\n        name: \"window\",\n        type: \"Identifier\"\n      };\n    }\n  }\n  const lastNode = ast.body[ast.body.length - 1];\n  if (lastNode.type === \"ExpressionStatement\") {\n    lastNode.type = \"ReturnStatement\";\n    lastNode.argument = lastNode.expression;\n    delete lastNode.expression;\n  }\n  const rewrittenCode = escodegen.generate(ast, {\n    comment: true\n  });\n  const suffix = options.filename !== undefined ? \"\\n//# sourceURL=\" + options.filename : \"\";\n  return Function(\"window\", rewrittenCode + suffix).bind(contextifiedSandbox)(contextifiedSandbox);\n};\nexports.Script = class VMShimScript {\n  constructor(code, options) {\n    this._code = code;\n    this._options = options;\n  }\n  runInContext(sandbox, options) {\n    return exports.runInContext(this._code, sandbox, Object.assign({}, this._options, options));\n  }\n};","map":{"version":3,"names":["acorn","require","findGlobals","escodegen","builtInConsts","otherBuiltIns","exports","createContext","sandbox","Object","defineProperty","value","writable","configurable","enumerable","builtIn","global","code","runInContext","isContext","__isVMShimContext","contextifiedSandbox","options","undefined","comments","tokens","ast","parse","allowReturnOutsideFunction","ranges","onComment","onToken","attachComments","globals","i","length","name","nodes","j","type","property","computed","object","lastNode","body","argument","expression","rewrittenCode","generate","comment","suffix","filename","Function","bind","Script","VMShimScript","constructor","_code","_options","assign"],"sources":["G:/scientificKeyboard/keyboard/node_modules/mathjax-node/node_modules/jsdom/lib/jsdom/vm-shim.js"],"sourcesContent":["\"use strict\";\n/* eslint-disable no-new-func */\nconst acorn = require(\"acorn\");\nconst findGlobals = require(\"acorn-globals\");\nconst escodegen = require(\"escodegen\");\n\n// We can't use the default browserify vm shim because it doesn't work in a web worker.\n\n// From ES spec table of contents. Also, don't forget the Annex B additions.\n// If someone feels ambitious maybe make this into an npm package.\nconst builtInConsts = [\"Infinity\", \"NaN\", \"undefined\"];\nconst otherBuiltIns = [\n  \"isFinite\", \"isNaN\", \"parseFloat\", \"parseInt\", \"decodeURI\", \"decodeURIComponent\",\n  \"encodeURI\", \"encodeURIComponent\", \"Array\", \"ArrayBuffer\", \"Boolean\", \"DataView\", \"Date\", \"Error\", \"EvalError\",\n  \"Float32Array\", \"Float64Array\", \"Function\", \"Int8Array\", \"Int16Array\", \"Int32Array\", \"Map\", \"Number\", \"Object\",\n  \"Proxy\", \"Promise\", \"RangeError\", \"ReferenceError\", \"RegExp\", \"Set\", \"String\", \"Symbol\", \"SyntaxError\", \"TypeError\",\n  \"Uint8Array\", \"Uint8ClampedArray\", \"Uint16Array\", \"Uint32Array\", \"URIError\", \"WeakMap\", \"WeakSet\", \"JSON\", \"Math\",\n  \"Reflect\", \"escape\", \"unescape\"\n];\n\nexports.createContext = function (sandbox) {\n  Object.defineProperty(sandbox, \"__isVMShimContext\", {\n    value: true,\n    writable: true,\n    configurable: true,\n    enumerable: false\n  });\n\n  for (const builtIn of builtInConsts) {\n    Object.defineProperty(sandbox, builtIn, {\n      value: global[builtIn],\n      writable: false,\n      configurable: false,\n      enumerable: false\n    });\n  }\n\n  for (const builtIn of otherBuiltIns) {\n    Object.defineProperty(sandbox, builtIn, {\n      value: global[builtIn],\n      writable: true,\n      configurable: true,\n      enumerable: false\n    });\n  }\n\n  Object.defineProperty(sandbox, \"eval\", {\n    value(code) {\n      return exports.runInContext(code, sandbox);\n    },\n    writable: true,\n    configurable: true,\n    enumerable: false\n  });\n};\n\nexports.isContext = function (sandbox) {\n  return sandbox.__isVMShimContext;\n};\n\nexports.runInContext = function (code, contextifiedSandbox, options) {\n  if (code === \"this\") {\n    // Special case for during window creation.\n    return contextifiedSandbox;\n  }\n\n  if (options === undefined) {\n    options = {};\n  }\n\n  const comments = [];\n  const tokens = [];\n  const ast = acorn.parse(code, {\n    allowReturnOutsideFunction: true,\n    ranges: true,\n    // collect comments in Esprima's format\n    onComment: comments,\n    // collect token ranges\n    onToken: tokens\n  });\n\n  // make sure we keep comments\n  escodegen.attachComments(ast, comments, tokens);\n\n  const globals = findGlobals(ast);\n  for (let i = 0; i < globals.length; ++i) {\n    if (globals[i].name === \"window\" || globals[i].name === \"this\") {\n      continue;\n    }\n\n    const { nodes } = globals[i];\n    for (let j = 0; j < nodes.length; ++j) {\n      const { type, name } = nodes[j];\n      nodes[j].type = \"MemberExpression\";\n      nodes[j].property = { name, type };\n      nodes[j].computed = false;\n      nodes[j].object = {\n        name: \"window\",\n        type: \"Identifier\"\n      };\n    }\n  }\n\n  const lastNode = ast.body[ast.body.length - 1];\n  if (lastNode.type === \"ExpressionStatement\") {\n    lastNode.type = \"ReturnStatement\";\n    lastNode.argument = lastNode.expression;\n    delete lastNode.expression;\n  }\n\n  const rewrittenCode = escodegen.generate(ast, { comment: true });\n  const suffix = options.filename !== undefined ? \"\\n//# sourceURL=\" + options.filename : \"\";\n\n  return Function(\"window\", rewrittenCode + suffix).bind(contextifiedSandbox)(contextifiedSandbox);\n};\n\nexports.Script = class VMShimScript {\n  constructor(code, options) {\n    this._code = code;\n    this._options = options;\n  }\n\n  runInContext(sandbox, options) {\n    return exports.runInContext(this._code, sandbox, Object.assign({}, this._options, options));\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}