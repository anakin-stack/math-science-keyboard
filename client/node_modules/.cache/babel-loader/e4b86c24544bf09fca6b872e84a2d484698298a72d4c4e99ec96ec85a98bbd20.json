{"ast":null,"code":"'use strict';\n\nvar Parser = require('./parser'),\n  Serializer = require('./serializer');\n\n// Shorthands\nexports.parse = function parse(html, options) {\n  var parser = new Parser(options);\n  return parser.parse(html);\n};\nexports.parseFragment = function parseFragment(fragmentContext, html, options) {\n  if (typeof fragmentContext === 'string') {\n    options = html;\n    html = fragmentContext;\n    fragmentContext = null;\n  }\n  var parser = new Parser(options);\n  return parser.parseFragment(html, fragmentContext);\n};\nexports.serialize = function (node, options) {\n  var serializer = new Serializer(node, options);\n  return serializer.serialize();\n};\n\n// Tree adapters\nexports.treeAdapters = {\n  default: require('./tree_adapters/default'),\n  htmlparser2: require('./tree_adapters/htmlparser2')\n};\n\n// Streaming\n// NOTE: streaming API is lazy loadable to enable bundling for platforms\n// that are different from Node.js.\n// See https://github.com/inikulin/parse5/issues/235.\nvar streamingAPI = {\n  ParserStream: './parser/parser_stream',\n  PlainTextConversionStream: './parser/plain_text_conversion_stream',\n  SerializerStream: './serializer/serializer_stream',\n  SAXParser: './sax'\n};\nObject.keys(streamingAPI).forEach(function (cls) {\n  Object.defineProperty(exports, cls, {\n    get: function () {\n      try {\n        return require(streamingAPI[cls]);\n      } catch (e) {\n        throw new Error(cls + ' is supported only for Node.js.' + 'See https://github.com/inikulin/parse5/issues/235 for the details.');\n      }\n    }\n  });\n});","map":{"version":3,"names":["Parser","require","Serializer","exports","parse","html","options","parser","parseFragment","fragmentContext","serialize","node","serializer","treeAdapters","default","htmlparser2","streamingAPI","ParserStream","PlainTextConversionStream","SerializerStream","SAXParser","Object","keys","forEach","cls","defineProperty","get","e","Error"],"sources":["G:/scientificKeyboard/keyboard/node_modules/mathjax-node/node_modules/parse5/lib/index.js"],"sourcesContent":["'use strict';\n\nvar Parser = require('./parser'),\n    Serializer = require('./serializer');\n\n\n// Shorthands\nexports.parse = function parse(html, options) {\n    var parser = new Parser(options);\n\n    return parser.parse(html);\n};\n\nexports.parseFragment = function parseFragment(fragmentContext, html, options) {\n    if (typeof fragmentContext === 'string') {\n        options = html;\n        html = fragmentContext;\n        fragmentContext = null;\n    }\n\n    var parser = new Parser(options);\n\n    return parser.parseFragment(html, fragmentContext);\n};\n\nexports.serialize = function (node, options) {\n    var serializer = new Serializer(node, options);\n\n    return serializer.serialize();\n};\n\n\n// Tree adapters\nexports.treeAdapters = {\n    default: require('./tree_adapters/default'),\n    htmlparser2: require('./tree_adapters/htmlparser2')\n};\n\n\n// Streaming\n// NOTE: streaming API is lazy loadable to enable bundling for platforms\n// that are different from Node.js.\n// See https://github.com/inikulin/parse5/issues/235.\nvar streamingAPI = {\n    ParserStream: './parser/parser_stream',\n    PlainTextConversionStream: './parser/plain_text_conversion_stream',\n    SerializerStream: './serializer/serializer_stream',\n    SAXParser: './sax'\n};\n\nObject.keys(streamingAPI).forEach(function (cls) {\n    Object.defineProperty(exports, cls, {\n        get: function () {\n            try {\n                return require(streamingAPI[cls]);\n            }\n\n            catch (e) {\n                throw new Error(\n                    cls + ' is supported only for Node.js.' +\n                    'See https://github.com/inikulin/parse5/issues/235 for the details.'\n                );\n            }\n        }\n    });\n});\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,MAAM,GAAGC,OAAO,CAAC,UAAU,CAAC;EAC5BC,UAAU,GAAGD,OAAO,CAAC,cAAc,CAAC;;AAGxC;AACAE,OAAO,CAACC,KAAK,GAAG,SAASA,KAAKA,CAACC,IAAI,EAAEC,OAAO,EAAE;EAC1C,IAAIC,MAAM,GAAG,IAAIP,MAAM,CAACM,OAAO,CAAC;EAEhC,OAAOC,MAAM,CAACH,KAAK,CAACC,IAAI,CAAC;AAC7B,CAAC;AAEDF,OAAO,CAACK,aAAa,GAAG,SAASA,aAAaA,CAACC,eAAe,EAAEJ,IAAI,EAAEC,OAAO,EAAE;EAC3E,IAAI,OAAOG,eAAe,KAAK,QAAQ,EAAE;IACrCH,OAAO,GAAGD,IAAI;IACdA,IAAI,GAAGI,eAAe;IACtBA,eAAe,GAAG,IAAI;EAC1B;EAEA,IAAIF,MAAM,GAAG,IAAIP,MAAM,CAACM,OAAO,CAAC;EAEhC,OAAOC,MAAM,CAACC,aAAa,CAACH,IAAI,EAAEI,eAAe,CAAC;AACtD,CAAC;AAEDN,OAAO,CAACO,SAAS,GAAG,UAAUC,IAAI,EAAEL,OAAO,EAAE;EACzC,IAAIM,UAAU,GAAG,IAAIV,UAAU,CAACS,IAAI,EAAEL,OAAO,CAAC;EAE9C,OAAOM,UAAU,CAACF,SAAS,CAAC,CAAC;AACjC,CAAC;;AAGD;AACAP,OAAO,CAACU,YAAY,GAAG;EACnBC,OAAO,EAAEb,OAAO,CAAC,yBAAyB,CAAC;EAC3Cc,WAAW,EAAEd,OAAO,CAAC,6BAA6B;AACtD,CAAC;;AAGD;AACA;AACA;AACA;AACA,IAAIe,YAAY,GAAG;EACfC,YAAY,EAAE,wBAAwB;EACtCC,yBAAyB,EAAE,uCAAuC;EAClEC,gBAAgB,EAAE,gCAAgC;EAClDC,SAAS,EAAE;AACf,CAAC;AAEDC,MAAM,CAACC,IAAI,CAACN,YAAY,CAAC,CAACO,OAAO,CAAC,UAAUC,GAAG,EAAE;EAC7CH,MAAM,CAACI,cAAc,CAACtB,OAAO,EAAEqB,GAAG,EAAE;IAChCE,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,IAAI;QACA,OAAOzB,OAAO,CAACe,YAAY,CAACQ,GAAG,CAAC,CAAC;MACrC,CAAC,CAED,OAAOG,CAAC,EAAE;QACN,MAAM,IAAIC,KAAK,CACXJ,GAAG,GAAG,iCAAiC,GACvC,oEACJ,CAAC;MACL;IACJ;EACJ,CAAC,CAAC;AACN,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}