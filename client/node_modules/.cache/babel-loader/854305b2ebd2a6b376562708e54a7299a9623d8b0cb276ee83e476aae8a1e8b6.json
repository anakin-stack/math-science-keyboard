{"ast":null,"code":"\"use strict\";\n\nconst idlUtils = require(\"../generated/utils.js\");\nconst {\n  setAttributeValue,\n  removeAttributeByName\n} = require(\"../attributes\");\nconst validateName = require(\"../helpers/validate-names\").name;\nconst DOMException = require(\"domexception\");\nconst dataAttrRe = /^data-([^A-Z]*)$/;\nfunction attrCamelCase(name) {\n  return name.replace(/-([a-z])/g, (match, alpha) => alpha.toUpperCase());\n}\nfunction attrSnakeCase(name) {\n  return name.replace(/[A-Z]/g, match => `-${match.toLowerCase()}`);\n}\nexports.implementation = class DOMStringMapImpl {\n  constructor(args, privateData) {\n    this._element = privateData.element;\n  }\n  get [idlUtils.supportedPropertyNames]() {\n    const result = new Set();\n    const {\n      attributes\n    } = this._element;\n    for (let i = 0; i < attributes.length; i++) {\n      const attr = attributes.item(i);\n      const matches = dataAttrRe.exec(attr.localName);\n      if (matches) {\n        result.add(attrCamelCase(matches[1]));\n      }\n    }\n    return result;\n  }\n  [idlUtils.namedGet](name) {\n    const {\n      attributes\n    } = this._element;\n    for (let i = 0; i < attributes.length; i++) {\n      const attr = attributes.item(i);\n      const matches = dataAttrRe.exec(attr.localName);\n      if (matches && attrCamelCase(matches[1]) === name) {\n        return attr.value;\n      }\n    }\n    return undefined;\n  }\n  [idlUtils.namedSetNew](name, value) {\n    if (/-[a-z]/.test(name)) {\n      throw new DOMException(`'${name}' is not a valid property name`, \"SyntaxError\");\n    }\n    name = `data-${attrSnakeCase(name)}`;\n    validateName(name);\n    setAttributeValue(this._element, name, value);\n  }\n  [idlUtils.namedSetExisting](name, value) {\n    this[idlUtils.namedSetNew](name, value);\n  }\n  [idlUtils.namedDelete](name) {\n    name = `data-${attrSnakeCase(name)}`;\n    removeAttributeByName(this._element, name);\n  }\n};","map":{"version":3,"names":["idlUtils","require","setAttributeValue","removeAttributeByName","validateName","name","DOMException","dataAttrRe","attrCamelCase","replace","match","alpha","toUpperCase","attrSnakeCase","toLowerCase","exports","implementation","DOMStringMapImpl","constructor","args","privateData","_element","element","supportedPropertyNames","result","Set","attributes","i","length","attr","item","matches","exec","localName","add","namedGet","value","undefined","namedSetNew","test","namedSetExisting","namedDelete"],"sources":["G:/scientificKeyboard/keyboard/node_modules/mathjax-node/node_modules/jsdom/lib/jsdom/living/nodes/DOMStringMap-impl.js"],"sourcesContent":["\"use strict\";\n\nconst idlUtils = require(\"../generated/utils.js\");\nconst { setAttributeValue, removeAttributeByName } = require(\"../attributes\");\nconst validateName = require(\"../helpers/validate-names\").name;\nconst DOMException = require(\"domexception\");\n\nconst dataAttrRe = /^data-([^A-Z]*)$/;\n\nfunction attrCamelCase(name) {\n  return name.replace(/-([a-z])/g, (match, alpha) => alpha.toUpperCase());\n}\n\nfunction attrSnakeCase(name) {\n  return name.replace(/[A-Z]/g, match => `-${match.toLowerCase()}`);\n}\n\nexports.implementation = class DOMStringMapImpl {\n  constructor(args, privateData) {\n    this._element = privateData.element;\n  }\n  get [idlUtils.supportedPropertyNames]() {\n    const result = new Set();\n    const { attributes } = this._element;\n    for (let i = 0; i < attributes.length; i++) {\n      const attr = attributes.item(i);\n      const matches = dataAttrRe.exec(attr.localName);\n      if (matches) {\n        result.add(attrCamelCase(matches[1]));\n      }\n    }\n    return result;\n  }\n  [idlUtils.namedGet](name) {\n    const { attributes } = this._element;\n    for (let i = 0; i < attributes.length; i++) {\n      const attr = attributes.item(i);\n      const matches = dataAttrRe.exec(attr.localName);\n      if (matches && attrCamelCase(matches[1]) === name) {\n        return attr.value;\n      }\n    }\n    return undefined;\n  }\n  [idlUtils.namedSetNew](name, value) {\n    if (/-[a-z]/.test(name)) {\n      throw new DOMException(`'${name}' is not a valid property name`, \"SyntaxError\");\n    }\n    name = `data-${attrSnakeCase(name)}`;\n    validateName(name);\n    setAttributeValue(this._element, name, value);\n  }\n  [idlUtils.namedSetExisting](name, value) {\n    this[idlUtils.namedSetNew](name, value);\n  }\n  [idlUtils.namedDelete](name) {\n    name = `data-${attrSnakeCase(name)}`;\n    removeAttributeByName(this._element, name);\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}