{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\nconst impl = utils.implSymbol;\nfunction NodeIterator() {\n  throw new TypeError(\"Illegal constructor\");\n}\nObject.defineProperty(NodeIterator, \"prototype\", {\n  value: NodeIterator.prototype,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\nNodeIterator.prototype.nextNode = function nextNode() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  return utils.tryWrapperForImpl(this[impl].nextNode());\n};\nNodeIterator.prototype.previousNode = function previousNode() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  return utils.tryWrapperForImpl(this[impl].previousNode());\n};\nNodeIterator.prototype.detach = function detach() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  return this[impl].detach();\n};\nObject.defineProperty(NodeIterator.prototype, \"root\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n    return utils.getSameObject(this, \"root\", () => {\n      return utils.tryWrapperForImpl(this[impl][\"root\"]);\n    });\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(NodeIterator.prototype, \"referenceNode\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n    return utils.tryWrapperForImpl(this[impl][\"referenceNode\"]);\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(NodeIterator.prototype, \"pointerBeforeReferenceNode\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n    return this[impl][\"pointerBeforeReferenceNode\"];\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(NodeIterator.prototype, \"whatToShow\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n    return this[impl][\"whatToShow\"];\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(NodeIterator.prototype, \"filter\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n    return utils.tryWrapperForImpl(this[impl][\"filter\"]);\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(NodeIterator.prototype, Symbol.toStringTag, {\n  value: \"NodeIterator\",\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj) {\n    let {\n      context = \"The provided value\"\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'NodeIterator'.`);\n  },\n  create(constructorArgs, privateData) {\n    let obj = Object.create(NodeIterator.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(NodeIterator.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {},\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: NodeIterator,\n  expose: {\n    Window: {\n      NodeIterator\n    }\n  }\n}; // iface\nmodule.exports = iface;\nconst Impl = require(\"../traversal/NodeIterator-impl.js\");","map":{"version":3,"names":["conversions","require","utils","impl","implSymbol","NodeIterator","TypeError","Object","defineProperty","value","prototype","writable","enumerable","configurable","nextNode","module","exports","is","tryWrapperForImpl","previousNode","detach","get","getSameObject","Symbol","toStringTag","iface","_mixedIntoPredicates","obj","hasOwn","Impl","implementation","isMixedInto","isImpl","wrapper","wrapperForImpl","convert","context","arguments","length","undefined","implForWrapper","create","constructorArgs","privateData","setup","createImpl","_internalSetup","wrapperSymbol","init","interface","expose","Window"],"sources":["G:/scientificKeyboard/keyboard/node_modules/mathjax-node/node_modules/jsdom/lib/jsdom/living/generated/NodeIterator.js"],"sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst impl = utils.implSymbol;\n\nfunction NodeIterator() {\n  throw new TypeError(\"Illegal constructor\");\n}\n\nObject.defineProperty(NodeIterator, \"prototype\", {\n  value: NodeIterator.prototype,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\n\nNodeIterator.prototype.nextNode = function nextNode() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  return utils.tryWrapperForImpl(this[impl].nextNode());\n};\n\nNodeIterator.prototype.previousNode = function previousNode() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  return utils.tryWrapperForImpl(this[impl].previousNode());\n};\n\nNodeIterator.prototype.detach = function detach() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  return this[impl].detach();\n};\n\nObject.defineProperty(NodeIterator.prototype, \"root\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.getSameObject(this, \"root\", () => {\n      return utils.tryWrapperForImpl(this[impl][\"root\"]);\n    });\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(NodeIterator.prototype, \"referenceNode\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"referenceNode\"]);\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(NodeIterator.prototype, \"pointerBeforeReferenceNode\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"pointerBeforeReferenceNode\"];\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(NodeIterator.prototype, \"whatToShow\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"whatToShow\"];\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(NodeIterator.prototype, \"filter\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"filter\"]);\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(NodeIterator.prototype, Symbol.toStringTag, {\n  value: \"NodeIterator\",\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\n\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj, { context = \"The provided value\" } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'NodeIterator'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(NodeIterator.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(NodeIterator.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {},\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: NodeIterator,\n  expose: {\n    Window: { NodeIterator }\n  }\n}; // iface\nmodule.exports = iface;\n\nconst Impl = require(\"../traversal/NodeIterator-impl.js\");\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}