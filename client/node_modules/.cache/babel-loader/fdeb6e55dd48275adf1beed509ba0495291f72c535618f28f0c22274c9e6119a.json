{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\nconst impl = utils.implSymbol;\nfunction DOMStringMap() {\n  throw new TypeError(\"Illegal constructor\");\n}\nObject.defineProperty(DOMStringMap, \"prototype\", {\n  value: DOMStringMap.prototype,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\nObject.defineProperty(DOMStringMap.prototype, Symbol.toStringTag, {\n  value: \"DOMStringMap\",\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj) {\n    let {\n      context = \"The provided value\"\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'DOMStringMap'.`);\n  },\n  create(constructorArgs, privateData) {\n    let obj = Object.create(DOMStringMap.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(DOMStringMap.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {},\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n    obj = new Proxy(obj, {\n      get(target, P, receiver) {\n        if (typeof P === \"symbol\") {\n          return Reflect.get(target, P, receiver);\n        }\n        const desc = this.getOwnPropertyDescriptor(target, P);\n        if (desc === undefined) {\n          const parent = Object.getPrototypeOf(target);\n          if (parent === null) {\n            return undefined;\n          }\n          return Reflect.get(target, P, receiver);\n        }\n        if (!desc.get && !desc.set) {\n          return desc.value;\n        }\n        const getter = desc.get;\n        if (getter === undefined) {\n          return undefined;\n        }\n        return Reflect.apply(getter, receiver, []);\n      },\n      has(target, P) {\n        if (typeof P === \"symbol\") {\n          return Reflect.has(target, P);\n        }\n        const desc = this.getOwnPropertyDescriptor(target, P);\n        if (desc !== undefined) {\n          return true;\n        }\n        const parent = Object.getPrototypeOf(target);\n        if (parent !== null) {\n          return Reflect.has(parent, P);\n        }\n        return false;\n      },\n      ownKeys(target) {\n        const keys = new Set();\n        for (const key of target[impl][utils.supportedPropertyNames]) {\n          if (!utils.hasOwn(target, key)) {\n            keys.add(`${key}`);\n          }\n        }\n        for (const key of Reflect.ownKeys(target)) {\n          keys.add(key);\n        }\n        return [...keys];\n      },\n      getOwnPropertyDescriptor(target, P) {\n        if (typeof P === \"symbol\") {\n          return Reflect.getOwnPropertyDescriptor(target, P);\n        }\n        let ignoreNamedProps = false;\n        const namedValue = target[impl][utils.namedGet](P);\n        if (namedValue !== undefined && !utils.hasOwn(target, P) && !ignoreNamedProps) {\n          return {\n            writable: true,\n            enumerable: true,\n            configurable: true,\n            value: utils.tryWrapperForImpl(namedValue)\n          };\n        }\n        return Reflect.getOwnPropertyDescriptor(target, P);\n      },\n      set(target, P, V, receiver) {\n        if (typeof P === \"symbol\") {\n          return Reflect.set(target, P, V, receiver);\n        }\n        if (target === receiver) {\n          if (typeof P === \"string\" && !utils.isArrayIndexPropName(P)) {\n            let namedValue = V;\n            namedValue = conversions[\"DOMString\"](namedValue, {\n              context: \"Failed to set the '\" + P + \"' property on 'DOMStringMap': The provided value\"\n            });\n            const creating = !(target[impl][utils.namedGet](P) !== undefined);\n            if (creating) {\n              target[impl][utils.namedSetNew](P, namedValue);\n            } else {\n              target[impl][utils.namedSetExisting](P, namedValue);\n            }\n            return true;\n          }\n        }\n        let ownDesc;\n        if (ownDesc === undefined) {\n          ownDesc = Reflect.getOwnPropertyDescriptor(target, P);\n        }\n        if (ownDesc === undefined) {\n          const parent = Reflect.getPrototypeOf(target);\n          if (parent !== null) {\n            return Reflect.set(parent, P, V, receiver);\n          }\n          ownDesc = {\n            writable: true,\n            enumerable: true,\n            configurable: true,\n            value: undefined\n          };\n        }\n        if (!ownDesc.writable) {\n          return false;\n        }\n        if (!utils.isObject(receiver)) {\n          return false;\n        }\n        const existingDesc = Reflect.getOwnPropertyDescriptor(receiver, P);\n        let valueDesc;\n        if (existingDesc !== undefined) {\n          if (existingDesc.get || existingDesc.set) {\n            return false;\n          }\n          if (!existingDesc.writable) {\n            return false;\n          }\n          valueDesc = {\n            value: V\n          };\n        } else {\n          valueDesc = {\n            writable: true,\n            enumerable: true,\n            configurable: true,\n            value: V\n          };\n        }\n        return Reflect.defineProperty(receiver, P, valueDesc);\n      },\n      defineProperty(target, P, desc) {\n        if (typeof P === \"symbol\") {\n          return Reflect.defineProperty(target, P, desc);\n        }\n        if (desc.get || desc.set) {\n          return false;\n        }\n        let namedValue = desc.value;\n        namedValue = conversions[\"DOMString\"](namedValue, {\n          context: \"Failed to set the '\" + P + \"' property on 'DOMStringMap': The provided value\"\n        });\n        const creating = !(target[impl][utils.namedGet](P) !== undefined);\n        if (creating) {\n          target[impl][utils.namedSetNew](P, namedValue);\n        } else {\n          target[impl][utils.namedSetExisting](P, namedValue);\n        }\n        return true;\n      },\n      deleteProperty(target, P) {\n        if (typeof P === \"symbol\") {\n          return Reflect.deleteProperty(target, P);\n        }\n        if (target[impl][utils.namedGet](P) !== undefined && !utils.hasOwn(target, P)) {\n          target[impl][utils.namedDelete](P);\n          return true;\n        }\n        return Reflect.deleteProperty(target, P);\n      },\n      preventExtensions() {\n        return false;\n      }\n    });\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: DOMStringMap,\n  expose: {\n    Window: {\n      DOMStringMap\n    }\n  }\n}; // iface\nmodule.exports = iface;\nconst Impl = require(\"../nodes/DOMStringMap-impl.js\");","map":{"version":3,"names":["conversions","require","utils","impl","implSymbol","DOMStringMap","TypeError","Object","defineProperty","value","prototype","writable","enumerable","configurable","Symbol","toStringTag","iface","_mixedIntoPredicates","is","obj","hasOwn","Impl","implementation","isMixedInto","module","exports","isImpl","wrapper","wrapperForImpl","convert","context","arguments","length","undefined","implForWrapper","create","constructorArgs","privateData","setup","createImpl","_internalSetup","Proxy","get","target","P","receiver","Reflect","desc","getOwnPropertyDescriptor","parent","getPrototypeOf","set","getter","apply","has","ownKeys","keys","Set","key","supportedPropertyNames","add","ignoreNamedProps","namedValue","namedGet","tryWrapperForImpl","V","isArrayIndexPropName","creating","namedSetNew","namedSetExisting","ownDesc","isObject","existingDesc","valueDesc","deleteProperty","namedDelete","preventExtensions","wrapperSymbol","init","interface","expose","Window"],"sources":["G:/scientificKeyboard/keyboard/node_modules/mathjax-node/node_modules/jsdom/lib/jsdom/living/generated/DOMStringMap.js"],"sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst impl = utils.implSymbol;\n\nfunction DOMStringMap() {\n  throw new TypeError(\"Illegal constructor\");\n}\n\nObject.defineProperty(DOMStringMap, \"prototype\", {\n  value: DOMStringMap.prototype,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\n\nObject.defineProperty(DOMStringMap.prototype, Symbol.toStringTag, {\n  value: \"DOMStringMap\",\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\n\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj, { context = \"The provided value\" } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'DOMStringMap'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(DOMStringMap.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(DOMStringMap.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {},\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n\n    obj = new Proxy(obj, {\n      get(target, P, receiver) {\n        if (typeof P === \"symbol\") {\n          return Reflect.get(target, P, receiver);\n        }\n        const desc = this.getOwnPropertyDescriptor(target, P);\n        if (desc === undefined) {\n          const parent = Object.getPrototypeOf(target);\n          if (parent === null) {\n            return undefined;\n          }\n          return Reflect.get(target, P, receiver);\n        }\n        if (!desc.get && !desc.set) {\n          return desc.value;\n        }\n        const getter = desc.get;\n        if (getter === undefined) {\n          return undefined;\n        }\n        return Reflect.apply(getter, receiver, []);\n      },\n\n      has(target, P) {\n        if (typeof P === \"symbol\") {\n          return Reflect.has(target, P);\n        }\n        const desc = this.getOwnPropertyDescriptor(target, P);\n        if (desc !== undefined) {\n          return true;\n        }\n        const parent = Object.getPrototypeOf(target);\n        if (parent !== null) {\n          return Reflect.has(parent, P);\n        }\n        return false;\n      },\n\n      ownKeys(target) {\n        const keys = new Set();\n\n        for (const key of target[impl][utils.supportedPropertyNames]) {\n          if (!utils.hasOwn(target, key)) {\n            keys.add(`${key}`);\n          }\n        }\n\n        for (const key of Reflect.ownKeys(target)) {\n          keys.add(key);\n        }\n        return [...keys];\n      },\n\n      getOwnPropertyDescriptor(target, P) {\n        if (typeof P === \"symbol\") {\n          return Reflect.getOwnPropertyDescriptor(target, P);\n        }\n        let ignoreNamedProps = false;\n\n        const namedValue = target[impl][utils.namedGet](P);\n\n        if (namedValue !== undefined && !utils.hasOwn(target, P) && !ignoreNamedProps) {\n          return {\n            writable: true,\n            enumerable: true,\n            configurable: true,\n            value: utils.tryWrapperForImpl(namedValue)\n          };\n        }\n\n        return Reflect.getOwnPropertyDescriptor(target, P);\n      },\n\n      set(target, P, V, receiver) {\n        if (typeof P === \"symbol\") {\n          return Reflect.set(target, P, V, receiver);\n        }\n        if (target === receiver) {\n          if (typeof P === \"string\" && !utils.isArrayIndexPropName(P)) {\n            let namedValue = V;\n\n            namedValue = conversions[\"DOMString\"](namedValue, {\n              context: \"Failed to set the '\" + P + \"' property on 'DOMStringMap': The provided value\"\n            });\n\n            const creating = !(target[impl][utils.namedGet](P) !== undefined);\n            if (creating) {\n              target[impl][utils.namedSetNew](P, namedValue);\n            } else {\n              target[impl][utils.namedSetExisting](P, namedValue);\n            }\n\n            return true;\n          }\n        }\n        let ownDesc;\n\n        if (ownDesc === undefined) {\n          ownDesc = Reflect.getOwnPropertyDescriptor(target, P);\n        }\n        if (ownDesc === undefined) {\n          const parent = Reflect.getPrototypeOf(target);\n          if (parent !== null) {\n            return Reflect.set(parent, P, V, receiver);\n          }\n          ownDesc = { writable: true, enumerable: true, configurable: true, value: undefined };\n        }\n        if (!ownDesc.writable) {\n          return false;\n        }\n        if (!utils.isObject(receiver)) {\n          return false;\n        }\n        const existingDesc = Reflect.getOwnPropertyDescriptor(receiver, P);\n        let valueDesc;\n        if (existingDesc !== undefined) {\n          if (existingDesc.get || existingDesc.set) {\n            return false;\n          }\n          if (!existingDesc.writable) {\n            return false;\n          }\n          valueDesc = { value: V };\n        } else {\n          valueDesc = { writable: true, enumerable: true, configurable: true, value: V };\n        }\n        return Reflect.defineProperty(receiver, P, valueDesc);\n      },\n\n      defineProperty(target, P, desc) {\n        if (typeof P === \"symbol\") {\n          return Reflect.defineProperty(target, P, desc);\n        }\n\n        if (desc.get || desc.set) {\n          return false;\n        }\n\n        let namedValue = desc.value;\n\n        namedValue = conversions[\"DOMString\"](namedValue, {\n          context: \"Failed to set the '\" + P + \"' property on 'DOMStringMap': The provided value\"\n        });\n\n        const creating = !(target[impl][utils.namedGet](P) !== undefined);\n        if (creating) {\n          target[impl][utils.namedSetNew](P, namedValue);\n        } else {\n          target[impl][utils.namedSetExisting](P, namedValue);\n        }\n\n        return true;\n      },\n\n      deleteProperty(target, P) {\n        if (typeof P === \"symbol\") {\n          return Reflect.deleteProperty(target, P);\n        }\n\n        if (target[impl][utils.namedGet](P) !== undefined && !utils.hasOwn(target, P)) {\n          target[impl][utils.namedDelete](P);\n          return true;\n        }\n\n        return Reflect.deleteProperty(target, P);\n      },\n\n      preventExtensions() {\n        return false;\n      }\n    });\n\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: DOMStringMap,\n  expose: {\n    Window: { DOMStringMap }\n  }\n}; // iface\nmodule.exports = iface;\n\nconst Impl = require(\"../nodes/DOMStringMap-impl.js\");\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,WAAW,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AACjD,MAAMC,KAAK,GAAGD,OAAO,CAAC,YAAY,CAAC;AAEnC,MAAME,IAAI,GAAGD,KAAK,CAACE,UAAU;AAE7B,SAASC,YAAYA,CAAA,EAAG;EACtB,MAAM,IAAIC,SAAS,CAAC,qBAAqB,CAAC;AAC5C;AAEAC,MAAM,CAACC,cAAc,CAACH,YAAY,EAAE,WAAW,EAAE;EAC/CI,KAAK,EAAEJ,YAAY,CAACK,SAAS;EAC7BC,QAAQ,EAAE,KAAK;EACfC,UAAU,EAAE,KAAK;EACjBC,YAAY,EAAE;AAChB,CAAC,CAAC;AAEFN,MAAM,CAACC,cAAc,CAACH,YAAY,CAACK,SAAS,EAAEI,MAAM,CAACC,WAAW,EAAE;EAChEN,KAAK,EAAE,cAAc;EACrBE,QAAQ,EAAE,KAAK;EACfC,UAAU,EAAE,KAAK;EACjBC,YAAY,EAAE;AAChB,CAAC,CAAC;AAEF,MAAMG,KAAK,GAAG;EACZ;EACA;EACA;EACAC,oBAAoB,EAAE,EAAE;EACxBC,EAAEA,CAACC,GAAG,EAAE;IACN,IAAIA,GAAG,EAAE;MACP,IAAIjB,KAAK,CAACkB,MAAM,CAACD,GAAG,EAAEhB,IAAI,CAAC,IAAIgB,GAAG,CAAChB,IAAI,CAAC,YAAYkB,IAAI,CAACC,cAAc,EAAE;QACvE,OAAO,IAAI;MACb;MACA,KAAK,MAAMC,WAAW,IAAIC,MAAM,CAACC,OAAO,CAACR,oBAAoB,EAAE;QAC7D,IAAIM,WAAW,CAACJ,GAAG,CAAC,EAAE;UACpB,OAAO,IAAI;QACb;MACF;IACF;IACA,OAAO,KAAK;EACd,CAAC;EACDO,MAAMA,CAACP,GAAG,EAAE;IACV,IAAIA,GAAG,EAAE;MACP,IAAIA,GAAG,YAAYE,IAAI,CAACC,cAAc,EAAE;QACtC,OAAO,IAAI;MACb;MAEA,MAAMK,OAAO,GAAGzB,KAAK,CAAC0B,cAAc,CAACT,GAAG,CAAC;MACzC,KAAK,MAAMI,WAAW,IAAIC,MAAM,CAACC,OAAO,CAACR,oBAAoB,EAAE;QAC7D,IAAIM,WAAW,CAACI,OAAO,CAAC,EAAE;UACxB,OAAO,IAAI;QACb;MACF;IACF;IACA,OAAO,KAAK;EACd,CAAC;EACDE,OAAOA,CAACV,GAAG,EAA2C;IAAA,IAAzC;MAAEW,OAAO,GAAG;IAAqB,CAAC,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;IAClD,IAAIP,MAAM,CAACC,OAAO,CAACP,EAAE,CAACC,GAAG,CAAC,EAAE;MAC1B,OAAOjB,KAAK,CAACgC,cAAc,CAACf,GAAG,CAAC;IAClC;IACA,MAAM,IAAIb,SAAS,CAAE,GAAEwB,OAAQ,iCAAgC,CAAC;EAClE,CAAC;EAEDK,MAAMA,CAACC,eAAe,EAAEC,WAAW,EAAE;IACnC,IAAIlB,GAAG,GAAGZ,MAAM,CAAC4B,MAAM,CAAC9B,YAAY,CAACK,SAAS,CAAC;IAC/CS,GAAG,GAAG,IAAI,CAACmB,KAAK,CAACnB,GAAG,EAAEiB,eAAe,EAAEC,WAAW,CAAC;IACnD,OAAOlB,GAAG;EACZ,CAAC;EACDoB,UAAUA,CAACH,eAAe,EAAEC,WAAW,EAAE;IACvC,IAAIlB,GAAG,GAAGZ,MAAM,CAAC4B,MAAM,CAAC9B,YAAY,CAACK,SAAS,CAAC;IAC/CS,GAAG,GAAG,IAAI,CAACmB,KAAK,CAACnB,GAAG,EAAEiB,eAAe,EAAEC,WAAW,CAAC;IACnD,OAAOnC,KAAK,CAACgC,cAAc,CAACf,GAAG,CAAC;EAClC,CAAC;EACDqB,cAAcA,CAACrB,GAAG,EAAE,CAAC,CAAC;EACtBmB,KAAKA,CAACnB,GAAG,EAAEiB,eAAe,EAAEC,WAAW,EAAE;IACvC,IAAI,CAACA,WAAW,EAAEA,WAAW,GAAG,CAAC,CAAC;IAElCA,WAAW,CAACV,OAAO,GAAGR,GAAG;IAEzB,IAAI,CAACqB,cAAc,CAACrB,GAAG,CAAC;IACxBZ,MAAM,CAACC,cAAc,CAACW,GAAG,EAAEhB,IAAI,EAAE;MAC/BM,KAAK,EAAE,IAAIY,IAAI,CAACC,cAAc,CAACc,eAAe,EAAEC,WAAW,CAAC;MAC5D1B,QAAQ,EAAE,KAAK;MACfC,UAAU,EAAE,KAAK;MACjBC,YAAY,EAAE;IAChB,CAAC,CAAC;IAEFM,GAAG,GAAG,IAAIsB,KAAK,CAACtB,GAAG,EAAE;MACnBuB,GAAGA,CAACC,MAAM,EAAEC,CAAC,EAAEC,QAAQ,EAAE;QACvB,IAAI,OAAOD,CAAC,KAAK,QAAQ,EAAE;UACzB,OAAOE,OAAO,CAACJ,GAAG,CAACC,MAAM,EAAEC,CAAC,EAAEC,QAAQ,CAAC;QACzC;QACA,MAAME,IAAI,GAAG,IAAI,CAACC,wBAAwB,CAACL,MAAM,EAAEC,CAAC,CAAC;QACrD,IAAIG,IAAI,KAAKd,SAAS,EAAE;UACtB,MAAMgB,MAAM,GAAG1C,MAAM,CAAC2C,cAAc,CAACP,MAAM,CAAC;UAC5C,IAAIM,MAAM,KAAK,IAAI,EAAE;YACnB,OAAOhB,SAAS;UAClB;UACA,OAAOa,OAAO,CAACJ,GAAG,CAACC,MAAM,EAAEC,CAAC,EAAEC,QAAQ,CAAC;QACzC;QACA,IAAI,CAACE,IAAI,CAACL,GAAG,IAAI,CAACK,IAAI,CAACI,GAAG,EAAE;UAC1B,OAAOJ,IAAI,CAACtC,KAAK;QACnB;QACA,MAAM2C,MAAM,GAAGL,IAAI,CAACL,GAAG;QACvB,IAAIU,MAAM,KAAKnB,SAAS,EAAE;UACxB,OAAOA,SAAS;QAClB;QACA,OAAOa,OAAO,CAACO,KAAK,CAACD,MAAM,EAAEP,QAAQ,EAAE,EAAE,CAAC;MAC5C,CAAC;MAEDS,GAAGA,CAACX,MAAM,EAAEC,CAAC,EAAE;QACb,IAAI,OAAOA,CAAC,KAAK,QAAQ,EAAE;UACzB,OAAOE,OAAO,CAACQ,GAAG,CAACX,MAAM,EAAEC,CAAC,CAAC;QAC/B;QACA,MAAMG,IAAI,GAAG,IAAI,CAACC,wBAAwB,CAACL,MAAM,EAAEC,CAAC,CAAC;QACrD,IAAIG,IAAI,KAAKd,SAAS,EAAE;UACtB,OAAO,IAAI;QACb;QACA,MAAMgB,MAAM,GAAG1C,MAAM,CAAC2C,cAAc,CAACP,MAAM,CAAC;QAC5C,IAAIM,MAAM,KAAK,IAAI,EAAE;UACnB,OAAOH,OAAO,CAACQ,GAAG,CAACL,MAAM,EAAEL,CAAC,CAAC;QAC/B;QACA,OAAO,KAAK;MACd,CAAC;MAEDW,OAAOA,CAACZ,MAAM,EAAE;QACd,MAAMa,IAAI,GAAG,IAAIC,GAAG,CAAC,CAAC;QAEtB,KAAK,MAAMC,GAAG,IAAIf,MAAM,CAACxC,IAAI,CAAC,CAACD,KAAK,CAACyD,sBAAsB,CAAC,EAAE;UAC5D,IAAI,CAACzD,KAAK,CAACkB,MAAM,CAACuB,MAAM,EAAEe,GAAG,CAAC,EAAE;YAC9BF,IAAI,CAACI,GAAG,CAAE,GAAEF,GAAI,EAAC,CAAC;UACpB;QACF;QAEA,KAAK,MAAMA,GAAG,IAAIZ,OAAO,CAACS,OAAO,CAACZ,MAAM,CAAC,EAAE;UACzCa,IAAI,CAACI,GAAG,CAACF,GAAG,CAAC;QACf;QACA,OAAO,CAAC,GAAGF,IAAI,CAAC;MAClB,CAAC;MAEDR,wBAAwBA,CAACL,MAAM,EAAEC,CAAC,EAAE;QAClC,IAAI,OAAOA,CAAC,KAAK,QAAQ,EAAE;UACzB,OAAOE,OAAO,CAACE,wBAAwB,CAACL,MAAM,EAAEC,CAAC,CAAC;QACpD;QACA,IAAIiB,gBAAgB,GAAG,KAAK;QAE5B,MAAMC,UAAU,GAAGnB,MAAM,CAACxC,IAAI,CAAC,CAACD,KAAK,CAAC6D,QAAQ,CAAC,CAACnB,CAAC,CAAC;QAElD,IAAIkB,UAAU,KAAK7B,SAAS,IAAI,CAAC/B,KAAK,CAACkB,MAAM,CAACuB,MAAM,EAAEC,CAAC,CAAC,IAAI,CAACiB,gBAAgB,EAAE;UAC7E,OAAO;YACLlD,QAAQ,EAAE,IAAI;YACdC,UAAU,EAAE,IAAI;YAChBC,YAAY,EAAE,IAAI;YAClBJ,KAAK,EAAEP,KAAK,CAAC8D,iBAAiB,CAACF,UAAU;UAC3C,CAAC;QACH;QAEA,OAAOhB,OAAO,CAACE,wBAAwB,CAACL,MAAM,EAAEC,CAAC,CAAC;MACpD,CAAC;MAEDO,GAAGA,CAACR,MAAM,EAAEC,CAAC,EAAEqB,CAAC,EAAEpB,QAAQ,EAAE;QAC1B,IAAI,OAAOD,CAAC,KAAK,QAAQ,EAAE;UACzB,OAAOE,OAAO,CAACK,GAAG,CAACR,MAAM,EAAEC,CAAC,EAAEqB,CAAC,EAAEpB,QAAQ,CAAC;QAC5C;QACA,IAAIF,MAAM,KAAKE,QAAQ,EAAE;UACvB,IAAI,OAAOD,CAAC,KAAK,QAAQ,IAAI,CAAC1C,KAAK,CAACgE,oBAAoB,CAACtB,CAAC,CAAC,EAAE;YAC3D,IAAIkB,UAAU,GAAGG,CAAC;YAElBH,UAAU,GAAG9D,WAAW,CAAC,WAAW,CAAC,CAAC8D,UAAU,EAAE;cAChDhC,OAAO,EAAE,qBAAqB,GAAGc,CAAC,GAAG;YACvC,CAAC,CAAC;YAEF,MAAMuB,QAAQ,GAAG,EAAExB,MAAM,CAACxC,IAAI,CAAC,CAACD,KAAK,CAAC6D,QAAQ,CAAC,CAACnB,CAAC,CAAC,KAAKX,SAAS,CAAC;YACjE,IAAIkC,QAAQ,EAAE;cACZxB,MAAM,CAACxC,IAAI,CAAC,CAACD,KAAK,CAACkE,WAAW,CAAC,CAACxB,CAAC,EAAEkB,UAAU,CAAC;YAChD,CAAC,MAAM;cACLnB,MAAM,CAACxC,IAAI,CAAC,CAACD,KAAK,CAACmE,gBAAgB,CAAC,CAACzB,CAAC,EAAEkB,UAAU,CAAC;YACrD;YAEA,OAAO,IAAI;UACb;QACF;QACA,IAAIQ,OAAO;QAEX,IAAIA,OAAO,KAAKrC,SAAS,EAAE;UACzBqC,OAAO,GAAGxB,OAAO,CAACE,wBAAwB,CAACL,MAAM,EAAEC,CAAC,CAAC;QACvD;QACA,IAAI0B,OAAO,KAAKrC,SAAS,EAAE;UACzB,MAAMgB,MAAM,GAAGH,OAAO,CAACI,cAAc,CAACP,MAAM,CAAC;UAC7C,IAAIM,MAAM,KAAK,IAAI,EAAE;YACnB,OAAOH,OAAO,CAACK,GAAG,CAACF,MAAM,EAAEL,CAAC,EAAEqB,CAAC,EAAEpB,QAAQ,CAAC;UAC5C;UACAyB,OAAO,GAAG;YAAE3D,QAAQ,EAAE,IAAI;YAAEC,UAAU,EAAE,IAAI;YAAEC,YAAY,EAAE,IAAI;YAAEJ,KAAK,EAAEwB;UAAU,CAAC;QACtF;QACA,IAAI,CAACqC,OAAO,CAAC3D,QAAQ,EAAE;UACrB,OAAO,KAAK;QACd;QACA,IAAI,CAACT,KAAK,CAACqE,QAAQ,CAAC1B,QAAQ,CAAC,EAAE;UAC7B,OAAO,KAAK;QACd;QACA,MAAM2B,YAAY,GAAG1B,OAAO,CAACE,wBAAwB,CAACH,QAAQ,EAAED,CAAC,CAAC;QAClE,IAAI6B,SAAS;QACb,IAAID,YAAY,KAAKvC,SAAS,EAAE;UAC9B,IAAIuC,YAAY,CAAC9B,GAAG,IAAI8B,YAAY,CAACrB,GAAG,EAAE;YACxC,OAAO,KAAK;UACd;UACA,IAAI,CAACqB,YAAY,CAAC7D,QAAQ,EAAE;YAC1B,OAAO,KAAK;UACd;UACA8D,SAAS,GAAG;YAAEhE,KAAK,EAAEwD;UAAE,CAAC;QAC1B,CAAC,MAAM;UACLQ,SAAS,GAAG;YAAE9D,QAAQ,EAAE,IAAI;YAAEC,UAAU,EAAE,IAAI;YAAEC,YAAY,EAAE,IAAI;YAAEJ,KAAK,EAAEwD;UAAE,CAAC;QAChF;QACA,OAAOnB,OAAO,CAACtC,cAAc,CAACqC,QAAQ,EAAED,CAAC,EAAE6B,SAAS,CAAC;MACvD,CAAC;MAEDjE,cAAcA,CAACmC,MAAM,EAAEC,CAAC,EAAEG,IAAI,EAAE;QAC9B,IAAI,OAAOH,CAAC,KAAK,QAAQ,EAAE;UACzB,OAAOE,OAAO,CAACtC,cAAc,CAACmC,MAAM,EAAEC,CAAC,EAAEG,IAAI,CAAC;QAChD;QAEA,IAAIA,IAAI,CAACL,GAAG,IAAIK,IAAI,CAACI,GAAG,EAAE;UACxB,OAAO,KAAK;QACd;QAEA,IAAIW,UAAU,GAAGf,IAAI,CAACtC,KAAK;QAE3BqD,UAAU,GAAG9D,WAAW,CAAC,WAAW,CAAC,CAAC8D,UAAU,EAAE;UAChDhC,OAAO,EAAE,qBAAqB,GAAGc,CAAC,GAAG;QACvC,CAAC,CAAC;QAEF,MAAMuB,QAAQ,GAAG,EAAExB,MAAM,CAACxC,IAAI,CAAC,CAACD,KAAK,CAAC6D,QAAQ,CAAC,CAACnB,CAAC,CAAC,KAAKX,SAAS,CAAC;QACjE,IAAIkC,QAAQ,EAAE;UACZxB,MAAM,CAACxC,IAAI,CAAC,CAACD,KAAK,CAACkE,WAAW,CAAC,CAACxB,CAAC,EAAEkB,UAAU,CAAC;QAChD,CAAC,MAAM;UACLnB,MAAM,CAACxC,IAAI,CAAC,CAACD,KAAK,CAACmE,gBAAgB,CAAC,CAACzB,CAAC,EAAEkB,UAAU,CAAC;QACrD;QAEA,OAAO,IAAI;MACb,CAAC;MAEDY,cAAcA,CAAC/B,MAAM,EAAEC,CAAC,EAAE;QACxB,IAAI,OAAOA,CAAC,KAAK,QAAQ,EAAE;UACzB,OAAOE,OAAO,CAAC4B,cAAc,CAAC/B,MAAM,EAAEC,CAAC,CAAC;QAC1C;QAEA,IAAID,MAAM,CAACxC,IAAI,CAAC,CAACD,KAAK,CAAC6D,QAAQ,CAAC,CAACnB,CAAC,CAAC,KAAKX,SAAS,IAAI,CAAC/B,KAAK,CAACkB,MAAM,CAACuB,MAAM,EAAEC,CAAC,CAAC,EAAE;UAC7ED,MAAM,CAACxC,IAAI,CAAC,CAACD,KAAK,CAACyE,WAAW,CAAC,CAAC/B,CAAC,CAAC;UAClC,OAAO,IAAI;QACb;QAEA,OAAOE,OAAO,CAAC4B,cAAc,CAAC/B,MAAM,EAAEC,CAAC,CAAC;MAC1C,CAAC;MAEDgC,iBAAiBA,CAAA,EAAG;QAClB,OAAO,KAAK;MACd;IACF,CAAC,CAAC;IAEFzD,GAAG,CAAChB,IAAI,CAAC,CAACD,KAAK,CAAC2E,aAAa,CAAC,GAAG1D,GAAG;IACpC,IAAIE,IAAI,CAACyD,IAAI,EAAE;MACbzD,IAAI,CAACyD,IAAI,CAAC3D,GAAG,CAAChB,IAAI,CAAC,EAAEkC,WAAW,CAAC;IACnC;IACA,OAAOlB,GAAG;EACZ,CAAC;EACD4D,SAAS,EAAE1E,YAAY;EACvB2E,MAAM,EAAE;IACNC,MAAM,EAAE;MAAE5E;IAAa;EACzB;AACF,CAAC,CAAC,CAAC;AACHmB,MAAM,CAACC,OAAO,GAAGT,KAAK;AAEtB,MAAMK,IAAI,GAAGpB,OAAO,CAAC,+BAA+B,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}