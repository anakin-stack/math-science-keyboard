{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\nconst convertDocumentType = require(\"./DocumentType.js\").convert;\nconst impl = utils.implSymbol;\nfunction DOMImplementation() {\n  throw new TypeError(\"Illegal constructor\");\n}\nObject.defineProperty(DOMImplementation, \"prototype\", {\n  value: DOMImplementation.prototype,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\nDOMImplementation.prototype.createDocumentType = function createDocumentType(qualifiedName, publicId, systemId) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  if (arguments.length < 3) {\n    throw new TypeError(\"Failed to execute 'createDocumentType' on 'DOMImplementation': 3 arguments required, but only \" + arguments.length + \" present.\");\n  }\n  const args = [];\n  {\n    let curArg = arguments[0];\n    curArg = conversions[\"DOMString\"](curArg, {\n      context: \"Failed to execute 'createDocumentType' on 'DOMImplementation': parameter 1\"\n    });\n    args.push(curArg);\n  }\n  {\n    let curArg = arguments[1];\n    curArg = conversions[\"DOMString\"](curArg, {\n      context: \"Failed to execute 'createDocumentType' on 'DOMImplementation': parameter 2\"\n    });\n    args.push(curArg);\n  }\n  {\n    let curArg = arguments[2];\n    curArg = conversions[\"DOMString\"](curArg, {\n      context: \"Failed to execute 'createDocumentType' on 'DOMImplementation': parameter 3\"\n    });\n    args.push(curArg);\n  }\n  return utils.tryWrapperForImpl(this[impl].createDocumentType(...args));\n};\nDOMImplementation.prototype.createDocument = function createDocument(namespace, qualifiedName) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  if (arguments.length < 2) {\n    throw new TypeError(\"Failed to execute 'createDocument' on 'DOMImplementation': 2 arguments required, but only \" + arguments.length + \" present.\");\n  }\n  const args = [];\n  {\n    let curArg = arguments[0];\n    if (curArg === null || curArg === undefined) {\n      curArg = null;\n    } else {\n      curArg = conversions[\"DOMString\"](curArg, {\n        context: \"Failed to execute 'createDocument' on 'DOMImplementation': parameter 1\"\n      });\n    }\n    args.push(curArg);\n  }\n  {\n    let curArg = arguments[1];\n    curArg = conversions[\"DOMString\"](curArg, {\n      context: \"Failed to execute 'createDocument' on 'DOMImplementation': parameter 2\",\n      treatNullAsEmptyString: true\n    });\n    args.push(curArg);\n  }\n  {\n    let curArg = arguments[2];\n    if (curArg !== undefined) {\n      if (curArg === null || curArg === undefined) {\n        curArg = null;\n      } else {\n        curArg = convertDocumentType(curArg, {\n          context: \"Failed to execute 'createDocument' on 'DOMImplementation': parameter 3\"\n        });\n      }\n    } else {\n      curArg = null;\n    }\n    args.push(curArg);\n  }\n  return utils.tryWrapperForImpl(this[impl].createDocument(...args));\n};\nDOMImplementation.prototype.createHTMLDocument = function createHTMLDocument() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  const args = [];\n  {\n    let curArg = arguments[0];\n    if (curArg !== undefined) {\n      curArg = conversions[\"DOMString\"](curArg, {\n        context: \"Failed to execute 'createHTMLDocument' on 'DOMImplementation': parameter 1\"\n      });\n    }\n    args.push(curArg);\n  }\n  return utils.tryWrapperForImpl(this[impl].createHTMLDocument(...args));\n};\nDOMImplementation.prototype.hasFeature = function hasFeature() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  return this[impl].hasFeature();\n};\nObject.defineProperty(DOMImplementation.prototype, Symbol.toStringTag, {\n  value: \"DOMImplementation\",\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj) {\n    let {\n      context = \"The provided value\"\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'DOMImplementation'.`);\n  },\n  create(constructorArgs, privateData) {\n    let obj = Object.create(DOMImplementation.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(DOMImplementation.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {},\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: DOMImplementation,\n  expose: {\n    Window: {\n      DOMImplementation\n    }\n  }\n}; // iface\nmodule.exports = iface;\nconst Impl = require(\"../nodes/DOMImplementation-impl.js\");","map":{"version":3,"names":["conversions","require","utils","convertDocumentType","convert","impl","implSymbol","DOMImplementation","TypeError","Object","defineProperty","value","prototype","writable","enumerable","configurable","createDocumentType","qualifiedName","publicId","systemId","module","exports","is","arguments","length","args","curArg","context","push","tryWrapperForImpl","createDocument","namespace","undefined","treatNullAsEmptyString","createHTMLDocument","hasFeature","Symbol","toStringTag","iface","_mixedIntoPredicates","obj","hasOwn","Impl","implementation","isMixedInto","isImpl","wrapper","wrapperForImpl","implForWrapper","create","constructorArgs","privateData","setup","createImpl","_internalSetup","wrapperSymbol","init","interface","expose","Window"],"sources":["G:/scientificKeyboard/keyboard/node_modules/mathjax-node/node_modules/jsdom/lib/jsdom/living/generated/DOMImplementation.js"],"sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst convertDocumentType = require(\"./DocumentType.js\").convert;\nconst impl = utils.implSymbol;\n\nfunction DOMImplementation() {\n  throw new TypeError(\"Illegal constructor\");\n}\n\nObject.defineProperty(DOMImplementation, \"prototype\", {\n  value: DOMImplementation.prototype,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\n\nDOMImplementation.prototype.createDocumentType = function createDocumentType(qualifiedName, publicId, systemId) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  if (arguments.length < 3) {\n    throw new TypeError(\n      \"Failed to execute 'createDocumentType' on 'DOMImplementation': 3 arguments required, but only \" +\n        arguments.length +\n        \" present.\"\n    );\n  }\n  const args = [];\n  {\n    let curArg = arguments[0];\n    curArg = conversions[\"DOMString\"](curArg, {\n      context: \"Failed to execute 'createDocumentType' on 'DOMImplementation': parameter 1\"\n    });\n    args.push(curArg);\n  }\n  {\n    let curArg = arguments[1];\n    curArg = conversions[\"DOMString\"](curArg, {\n      context: \"Failed to execute 'createDocumentType' on 'DOMImplementation': parameter 2\"\n    });\n    args.push(curArg);\n  }\n  {\n    let curArg = arguments[2];\n    curArg = conversions[\"DOMString\"](curArg, {\n      context: \"Failed to execute 'createDocumentType' on 'DOMImplementation': parameter 3\"\n    });\n    args.push(curArg);\n  }\n  return utils.tryWrapperForImpl(this[impl].createDocumentType(...args));\n};\n\nDOMImplementation.prototype.createDocument = function createDocument(namespace, qualifiedName) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  if (arguments.length < 2) {\n    throw new TypeError(\n      \"Failed to execute 'createDocument' on 'DOMImplementation': 2 arguments required, but only \" +\n        arguments.length +\n        \" present.\"\n    );\n  }\n  const args = [];\n  {\n    let curArg = arguments[0];\n    if (curArg === null || curArg === undefined) {\n      curArg = null;\n    } else {\n      curArg = conversions[\"DOMString\"](curArg, {\n        context: \"Failed to execute 'createDocument' on 'DOMImplementation': parameter 1\"\n      });\n    }\n    args.push(curArg);\n  }\n  {\n    let curArg = arguments[1];\n    curArg = conversions[\"DOMString\"](curArg, {\n      context: \"Failed to execute 'createDocument' on 'DOMImplementation': parameter 2\",\n      treatNullAsEmptyString: true\n    });\n    args.push(curArg);\n  }\n  {\n    let curArg = arguments[2];\n    if (curArg !== undefined) {\n      if (curArg === null || curArg === undefined) {\n        curArg = null;\n      } else {\n        curArg = convertDocumentType(curArg, {\n          context: \"Failed to execute 'createDocument' on 'DOMImplementation': parameter 3\"\n        });\n      }\n    } else {\n      curArg = null;\n    }\n    args.push(curArg);\n  }\n  return utils.tryWrapperForImpl(this[impl].createDocument(...args));\n};\n\nDOMImplementation.prototype.createHTMLDocument = function createHTMLDocument() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  const args = [];\n  {\n    let curArg = arguments[0];\n    if (curArg !== undefined) {\n      curArg = conversions[\"DOMString\"](curArg, {\n        context: \"Failed to execute 'createHTMLDocument' on 'DOMImplementation': parameter 1\"\n      });\n    }\n    args.push(curArg);\n  }\n  return utils.tryWrapperForImpl(this[impl].createHTMLDocument(...args));\n};\n\nDOMImplementation.prototype.hasFeature = function hasFeature() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  return this[impl].hasFeature();\n};\n\nObject.defineProperty(DOMImplementation.prototype, Symbol.toStringTag, {\n  value: \"DOMImplementation\",\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\n\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj, { context = \"The provided value\" } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'DOMImplementation'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(DOMImplementation.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(DOMImplementation.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {},\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: DOMImplementation,\n  expose: {\n    Window: { DOMImplementation }\n  }\n}; // iface\nmodule.exports = iface;\n\nconst Impl = require(\"../nodes/DOMImplementation-impl.js\");\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}