{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\nconst impl = utils.implSymbol;\nconst CharacterData = require(\"./CharacterData.js\");\nfunction Comment() {\n  if (new.target === undefined) {\n    throw new TypeError(\"Failed to construct 'Comment'. Please use the 'new' operator; this constructor \" + \"cannot be called as a function.\");\n  }\n  const args = [];\n  {\n    let curArg = arguments[0];\n    if (curArg !== undefined) {\n      curArg = conversions[\"DOMString\"](curArg, {\n        context: \"Failed to construct 'Comment': parameter 1\"\n      });\n    } else {\n      curArg = \"\";\n    }\n    args.push(curArg);\n  }\n  iface.setup(this, args);\n}\nObject.setPrototypeOf(Comment.prototype, CharacterData.interface.prototype);\nObject.setPrototypeOf(Comment, CharacterData.interface);\nObject.defineProperty(Comment, \"prototype\", {\n  value: Comment.prototype,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\nObject.defineProperty(Comment.prototype, Symbol.toStringTag, {\n  value: \"Comment\",\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj) {\n    let {\n      context = \"The provided value\"\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'Comment'.`);\n  },\n  create(constructorArgs, privateData) {\n    let obj = Object.create(Comment.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(Comment.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {\n    CharacterData._internalSetup(obj);\n  },\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: Comment,\n  expose: {\n    Window: {\n      Comment\n    }\n  }\n}; // iface\nmodule.exports = iface;\nconst Impl = require(\"../nodes/Comment-impl.js\");","map":{"version":3,"names":["conversions","require","utils","impl","implSymbol","CharacterData","Comment","new","target","undefined","TypeError","args","curArg","arguments","context","push","iface","setup","Object","setPrototypeOf","prototype","interface","defineProperty","value","writable","enumerable","configurable","Symbol","toStringTag","_mixedIntoPredicates","is","obj","hasOwn","Impl","implementation","isMixedInto","module","exports","isImpl","wrapper","wrapperForImpl","convert","length","implForWrapper","create","constructorArgs","privateData","createImpl","_internalSetup","wrapperSymbol","init","expose","Window"],"sources":["G:/scientificKeyboard/keyboard/node_modules/mathjax-node/node_modules/jsdom/lib/jsdom/living/generated/Comment.js"],"sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst impl = utils.implSymbol;\nconst CharacterData = require(\"./CharacterData.js\");\n\nfunction Comment() {\n  if (new.target === undefined) {\n    throw new TypeError(\n      \"Failed to construct 'Comment'. Please use the 'new' operator; this constructor \" +\n        \"cannot be called as a function.\"\n    );\n  }\n  const args = [];\n  {\n    let curArg = arguments[0];\n    if (curArg !== undefined) {\n      curArg = conversions[\"DOMString\"](curArg, { context: \"Failed to construct 'Comment': parameter 1\" });\n    } else {\n      curArg = \"\";\n    }\n    args.push(curArg);\n  }\n\n  iface.setup(this, args);\n}\n\nObject.setPrototypeOf(Comment.prototype, CharacterData.interface.prototype);\nObject.setPrototypeOf(Comment, CharacterData.interface);\n\nObject.defineProperty(Comment, \"prototype\", {\n  value: Comment.prototype,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\n\nObject.defineProperty(Comment.prototype, Symbol.toStringTag, {\n  value: \"Comment\",\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\n\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj, { context = \"The provided value\" } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'Comment'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(Comment.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(Comment.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {\n    CharacterData._internalSetup(obj);\n  },\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: Comment,\n  expose: {\n    Window: { Comment }\n  }\n}; // iface\nmodule.exports = iface;\n\nconst Impl = require(\"../nodes/Comment-impl.js\");\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}