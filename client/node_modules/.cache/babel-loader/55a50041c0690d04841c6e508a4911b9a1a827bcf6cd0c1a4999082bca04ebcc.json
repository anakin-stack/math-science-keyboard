{"ast":null,"code":"\"use strict\";\n\nconst whatwgURL = require(\"whatwg-url\");\nconst {\n  parseURLToResultingURLRecord\n} = require(\"../helpers/document-base-url\");\nexports.implementation = class HTMLHyperlinkElementUtilsImpl {\n  _htmlHyperlinkElementUtilsSetup() {\n    this.url = null;\n  }\n  toString() {\n    return this.href;\n  }\n  get href() {\n    reinitializeURL(this);\n    const {\n      url\n    } = this;\n    if (url === null) {\n      const href = this.getAttribute(\"href\");\n      return href === null ? \"\" : href;\n    }\n    return whatwgURL.serializeURL(url);\n  }\n  set href(v) {\n    this.setAttribute(\"href\", v);\n  }\n  get origin() {\n    reinitializeURL(this);\n    if (this.url === null) {\n      return \"\";\n    }\n    return whatwgURL.serializeURLOrigin(this.url);\n  }\n  get protocol() {\n    reinitializeURL(this);\n    if (this.url === null) {\n      return \":\";\n    }\n    return this.url.scheme + \":\";\n  }\n  set protocol(v) {\n    reinitializeURL(this);\n    if (this.url === null) {\n      return;\n    }\n    whatwgURL.basicURLParse(v + \":\", {\n      url: this.url,\n      stateOverride: \"scheme start\"\n    });\n    updateHref(this);\n  }\n  get username() {\n    reinitializeURL(this);\n    if (this.url === null) {\n      return \"\";\n    }\n    return this.url.username;\n  }\n  set username(v) {\n    reinitializeURL(this);\n    const {\n      url\n    } = this;\n    if (url === null || url.host === null || url.host === \"\" || url.cannotBeABaseURL || url.scheme === \"file\") {\n      return;\n    }\n    whatwgURL.setTheUsername(url, v);\n    updateHref(this);\n  }\n  get password() {\n    reinitializeURL(this);\n    const {\n      url\n    } = this;\n    if (url === null) {\n      return \"\";\n    }\n    return url.password;\n  }\n  set password(v) {\n    reinitializeURL(this);\n    const {\n      url\n    } = this;\n    if (url === null || url.host === null || url.host === \"\" || url.cannotBeABaseURL || url.scheme === \"file\") {\n      return;\n    }\n    whatwgURL.setThePassword(url, v);\n    updateHref(this);\n  }\n  get host() {\n    reinitializeURL(this);\n    const {\n      url\n    } = this;\n    if (url === null || url.host === null) {\n      return \"\";\n    }\n    if (url.port === null) {\n      return whatwgURL.serializeHost(url.host);\n    }\n    return whatwgURL.serializeHost(url.host) + \":\" + whatwgURL.serializeInteger(url.port);\n  }\n  set host(v) {\n    reinitializeURL(this);\n    const {\n      url\n    } = this;\n    if (url === null || url.cannotBeABaseURL) {\n      return;\n    }\n    whatwgURL.basicURLParse(v, {\n      url,\n      stateOverride: \"host\"\n    });\n    updateHref(this);\n  }\n  get hostname() {\n    reinitializeURL(this);\n    const {\n      url\n    } = this;\n    if (url === null || url.host === null) {\n      return \"\";\n    }\n    return whatwgURL.serializeHost(url.host);\n  }\n  set hostname(v) {\n    reinitializeURL(this);\n    const {\n      url\n    } = this;\n    if (url === null || url.cannotBeABaseURL) {\n      return;\n    }\n    whatwgURL.basicURLParse(v, {\n      url,\n      stateOverride: \"hostname\"\n    });\n    updateHref(this);\n  }\n  get port() {\n    reinitializeURL(this);\n    const {\n      url\n    } = this;\n    if (url === null || url.port === null) {\n      return \"\";\n    }\n    return whatwgURL.serializeInteger(url.port);\n  }\n  set port(v) {\n    reinitializeURL(this);\n    const {\n      url\n    } = this;\n    if (url === null || url.host === null || url.host === \"\" || url.cannotBeABaseURL || url.scheme === \"file\") {\n      return;\n    }\n    if (v === \"\") {\n      url.port = null;\n    } else {\n      whatwgURL.basicURLParse(v, {\n        url,\n        stateOverride: \"port\"\n      });\n    }\n    updateHref(this);\n  }\n  get pathname() {\n    reinitializeURL(this);\n    const {\n      url\n    } = this;\n    if (url === null) {\n      return \"\";\n    }\n    if (url.cannotBeABaseURL) {\n      return url.path[0];\n    }\n    return \"/\" + url.path.join(\"/\");\n  }\n  set pathname(v) {\n    reinitializeURL(this);\n    const {\n      url\n    } = this;\n    if (url === null || url.cannotBeABaseURL) {\n      return;\n    }\n    url.path = [];\n    whatwgURL.basicURLParse(v, {\n      url,\n      stateOverride: \"path start\"\n    });\n    updateHref(this);\n  }\n  get search() {\n    reinitializeURL(this);\n    const {\n      url\n    } = this;\n    if (url === null || url.query === null || url.query === \"\") {\n      return \"\";\n    }\n    return \"?\" + url.query;\n  }\n  set search(v) {\n    reinitializeURL(this);\n    const {\n      url\n    } = this;\n    if (url === null) {\n      return;\n    }\n    if (v === \"\") {\n      url.query = null;\n    } else {\n      const input = v[0] === \"?\" ? v.substring(1) : v;\n      url.query = \"\";\n      whatwgURL.basicURLParse(input, {\n        url,\n        stateOverride: \"query\",\n        encodingOverride: this._ownerDocument.charset\n      });\n    }\n    updateHref(this);\n  }\n  get hash() {\n    reinitializeURL(this);\n    const {\n      url\n    } = this;\n    if (url === null || url.fragment === null || url.fragment === \"\") {\n      return \"\";\n    }\n    return \"#\" + url.fragment;\n  }\n  set hash(v) {\n    reinitializeURL(this);\n    const {\n      url\n    } = this;\n    if (url === null) {\n      return;\n    }\n    if (v === \"\") {\n      url.fragment = null;\n    } else {\n      const input = v[0] === \"#\" ? v.substring(1) : v;\n      url.fragment = \"\";\n      whatwgURL.basicURLParse(input, {\n        url,\n        stateOverride: \"fragment\"\n      });\n    }\n    updateHref(this);\n  }\n};\nfunction reinitializeURL(hheu) {\n  if (hheu.url !== null && hheu.url.scheme === \"blob\" && hheu.url.cannotBeABaseURL) {\n    return;\n  }\n  setTheURL(hheu);\n}\nfunction setTheURL(hheu) {\n  const href = hheu.getAttribute(\"href\");\n  if (href === null) {\n    hheu.url = null;\n    return;\n  }\n  const parsed = parseURLToResultingURLRecord(href, hheu._ownerDocument);\n  hheu.url = parsed === null ? null : parsed;\n}\nfunction updateHref(hheu) {\n  hheu.setAttribute(\"href\", whatwgURL.serializeURL(hheu.url));\n}","map":{"version":3,"names":["whatwgURL","require","parseURLToResultingURLRecord","exports","implementation","HTMLHyperlinkElementUtilsImpl","_htmlHyperlinkElementUtilsSetup","url","toString","href","reinitializeURL","getAttribute","serializeURL","v","setAttribute","origin","serializeURLOrigin","protocol","scheme","basicURLParse","stateOverride","updateHref","username","host","cannotBeABaseURL","setTheUsername","password","setThePassword","port","serializeHost","serializeInteger","hostname","pathname","path","join","search","query","input","substring","encodingOverride","_ownerDocument","charset","hash","fragment","hheu","setTheURL","parsed"],"sources":["G:/scientificKeyboard/keyboard/node_modules/mathjax-node/node_modules/jsdom/lib/jsdom/living/nodes/HTMLHyperlinkElementUtils-impl.js"],"sourcesContent":["\"use strict\";\nconst whatwgURL = require(\"whatwg-url\");\nconst { parseURLToResultingURLRecord } = require(\"../helpers/document-base-url\");\n\nexports.implementation = class HTMLHyperlinkElementUtilsImpl {\n  _htmlHyperlinkElementUtilsSetup() {\n    this.url = null;\n  }\n\n  toString() {\n    return this.href;\n  }\n\n  get href() {\n    reinitializeURL(this);\n    const { url } = this;\n\n    if (url === null) {\n      const href = this.getAttribute(\"href\");\n      return href === null ? \"\" : href;\n    }\n\n    return whatwgURL.serializeURL(url);\n  }\n\n  set href(v) {\n    this.setAttribute(\"href\", v);\n  }\n\n  get origin() {\n    reinitializeURL(this);\n\n    if (this.url === null) {\n      return \"\";\n    }\n\n    return whatwgURL.serializeURLOrigin(this.url);\n  }\n\n  get protocol() {\n    reinitializeURL(this);\n\n    if (this.url === null) {\n      return \":\";\n    }\n\n    return this.url.scheme + \":\";\n  }\n\n  set protocol(v) {\n    reinitializeURL(this);\n\n    if (this.url === null) {\n      return;\n    }\n\n    whatwgURL.basicURLParse(v + \":\", { url: this.url, stateOverride: \"scheme start\" });\n    updateHref(this);\n  }\n\n  get username() {\n    reinitializeURL(this);\n\n    if (this.url === null) {\n      return \"\";\n    }\n\n    return this.url.username;\n  }\n\n  set username(v) {\n    reinitializeURL(this);\n    const { url } = this;\n\n    if (url === null || url.host === null || url.host === \"\" || url.cannotBeABaseURL || url.scheme === \"file\") {\n      return;\n    }\n\n    whatwgURL.setTheUsername(url, v);\n    updateHref(this);\n  }\n\n  get password() {\n    reinitializeURL(this);\n    const { url } = this;\n\n    if (url === null) {\n      return \"\";\n    }\n\n    return url.password;\n  }\n\n  set password(v) {\n    reinitializeURL(this);\n    const { url } = this;\n\n    if (url === null || url.host === null || url.host === \"\" || url.cannotBeABaseURL || url.scheme === \"file\") {\n      return;\n    }\n\n    whatwgURL.setThePassword(url, v);\n    updateHref(this);\n  }\n\n  get host() {\n    reinitializeURL(this);\n    const { url } = this;\n\n    if (url === null || url.host === null) {\n      return \"\";\n    }\n\n    if (url.port === null) {\n      return whatwgURL.serializeHost(url.host);\n    }\n\n    return whatwgURL.serializeHost(url.host) + \":\" + whatwgURL.serializeInteger(url.port);\n  }\n\n  set host(v) {\n    reinitializeURL(this);\n    const { url } = this;\n\n    if (url === null || url.cannotBeABaseURL) {\n      return;\n    }\n\n    whatwgURL.basicURLParse(v, { url, stateOverride: \"host\" });\n    updateHref(this);\n  }\n\n  get hostname() {\n    reinitializeURL(this);\n    const { url } = this;\n\n    if (url === null || url.host === null) {\n      return \"\";\n    }\n\n    return whatwgURL.serializeHost(url.host);\n  }\n\n  set hostname(v) {\n    reinitializeURL(this);\n    const { url } = this;\n\n    if (url === null || url.cannotBeABaseURL) {\n      return;\n    }\n\n    whatwgURL.basicURLParse(v, { url, stateOverride: \"hostname\" });\n    updateHref(this);\n  }\n\n  get port() {\n    reinitializeURL(this);\n    const { url } = this;\n\n    if (url === null || url.port === null) {\n      return \"\";\n    }\n\n    return whatwgURL.serializeInteger(url.port);\n  }\n\n  set port(v) {\n    reinitializeURL(this);\n    const { url } = this;\n\n    if (url === null || url.host === null || url.host === \"\" || url.cannotBeABaseURL || url.scheme === \"file\") {\n      return;\n    }\n\n    if (v === \"\") {\n      url.port = null;\n    } else {\n      whatwgURL.basicURLParse(v, { url, stateOverride: \"port\" });\n    }\n    updateHref(this);\n  }\n\n  get pathname() {\n    reinitializeURL(this);\n    const { url } = this;\n\n    if (url === null) {\n      return \"\";\n    }\n\n    if (url.cannotBeABaseURL) {\n      return url.path[0];\n    }\n\n    return \"/\" + url.path.join(\"/\");\n  }\n\n  set pathname(v) {\n    reinitializeURL(this);\n    const { url } = this;\n\n    if (url === null || url.cannotBeABaseURL) {\n      return;\n    }\n\n    url.path = [];\n    whatwgURL.basicURLParse(v, { url, stateOverride: \"path start\" });\n    updateHref(this);\n  }\n\n  get search() {\n    reinitializeURL(this);\n    const { url } = this;\n\n    if (url === null || url.query === null || url.query === \"\") {\n      return \"\";\n    }\n\n    return \"?\" + url.query;\n  }\n\n  set search(v) {\n    reinitializeURL(this);\n    const { url } = this;\n\n    if (url === null) {\n      return;\n    }\n\n    if (v === \"\") {\n      url.query = null;\n    } else {\n      const input = v[0] === \"?\" ? v.substring(1) : v;\n      url.query = \"\";\n      whatwgURL.basicURLParse(input, {\n        url,\n        stateOverride: \"query\",\n        encodingOverride: this._ownerDocument.charset\n      });\n    }\n    updateHref(this);\n  }\n\n  get hash() {\n    reinitializeURL(this);\n    const { url } = this;\n\n    if (url === null || url.fragment === null || url.fragment === \"\") {\n      return \"\";\n    }\n\n    return \"#\" + url.fragment;\n  }\n\n  set hash(v) {\n    reinitializeURL(this);\n    const { url } = this;\n\n    if (url === null) {\n      return;\n    }\n\n    if (v === \"\") {\n      url.fragment = null;\n    } else {\n      const input = v[0] === \"#\" ? v.substring(1) : v;\n      url.fragment = \"\";\n      whatwgURL.basicURLParse(input, { url, stateOverride: \"fragment\" });\n    }\n    updateHref(this);\n  }\n};\n\nfunction reinitializeURL(hheu) {\n  if (hheu.url !== null && hheu.url.scheme === \"blob\" && hheu.url.cannotBeABaseURL) {\n    return;\n  }\n\n  setTheURL(hheu);\n}\n\nfunction setTheURL(hheu) {\n  const href = hheu.getAttribute(\"href\");\n  if (href === null) {\n    hheu.url = null;\n    return;\n  }\n\n  const parsed = parseURLToResultingURLRecord(href, hheu._ownerDocument);\n\n  hheu.url = parsed === null ? null : parsed;\n}\n\nfunction updateHref(hheu) {\n  hheu.setAttribute(\"href\", whatwgURL.serializeURL(hheu.url));\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}