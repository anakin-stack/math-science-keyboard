{"ast":null,"code":"\"use strict\";\n\nconst {\n  domSymbolTree\n} = require(\"./internal-constants\");\nconst {\n  TEXT_NODE\n} = require(\"../node-type\");\nexports.childTextContent = node => {\n  let result = \"\";\n  const iterator = domSymbolTree.childrenIterator(node);\n  for (const child of iterator) {\n    if (child.nodeType === TEXT_NODE) {\n      result += child.data;\n    }\n  }\n  return result;\n};","map":{"version":3,"names":["domSymbolTree","require","TEXT_NODE","exports","childTextContent","node","result","iterator","childrenIterator","child","nodeType","data"],"sources":["G:/scientificKeyboard/keyboard/node_modules/mathjax-node/node_modules/jsdom/lib/jsdom/living/helpers/text.js"],"sourcesContent":["\"use strict\";\nconst { domSymbolTree } = require(\"./internal-constants\");\nconst { TEXT_NODE } = require(\"../node-type\");\n\nexports.childTextContent = node => {\n  let result = \"\";\n  const iterator = domSymbolTree.childrenIterator(node);\n  for (const child of iterator) {\n    if (child.nodeType === TEXT_NODE) {\n      result += child.data;\n    }\n  }\n  return result;\n};\n"],"mappings":"AAAA,YAAY;;AACZ,MAAM;EAAEA;AAAc,CAAC,GAAGC,OAAO,CAAC,sBAAsB,CAAC;AACzD,MAAM;EAAEC;AAAU,CAAC,GAAGD,OAAO,CAAC,cAAc,CAAC;AAE7CE,OAAO,CAACC,gBAAgB,GAAGC,IAAI,IAAI;EACjC,IAAIC,MAAM,GAAG,EAAE;EACf,MAAMC,QAAQ,GAAGP,aAAa,CAACQ,gBAAgB,CAACH,IAAI,CAAC;EACrD,KAAK,MAAMI,KAAK,IAAIF,QAAQ,EAAE;IAC5B,IAAIE,KAAK,CAACC,QAAQ,KAAKR,SAAS,EAAE;MAChCI,MAAM,IAAIG,KAAK,CAACE,IAAI;IACtB;EACF;EACA,OAAOL,MAAM;AACf,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}