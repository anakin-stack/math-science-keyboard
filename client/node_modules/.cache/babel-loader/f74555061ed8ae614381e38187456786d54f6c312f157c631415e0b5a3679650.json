{"ast":null,"code":"\"use strict\";\n\nconst punycode = require(\"punycode\");\nconst tr46 = require(\"tr46\");\nconst infra = require(\"./infra\");\nconst {\n  percentEncode,\n  percentDecode\n} = require(\"./urlencoded\");\nconst specialSchemes = {\n  ftp: 21,\n  file: null,\n  gopher: 70,\n  http: 80,\n  https: 443,\n  ws: 80,\n  wss: 443\n};\nconst failure = Symbol(\"failure\");\nfunction countSymbols(str) {\n  return punycode.ucs2.decode(str).length;\n}\nfunction at(input, idx) {\n  const c = input[idx];\n  return isNaN(c) ? undefined : String.fromCodePoint(c);\n}\nfunction isSingleDot(buffer) {\n  return buffer === \".\" || buffer.toLowerCase() === \"%2e\";\n}\nfunction isDoubleDot(buffer) {\n  buffer = buffer.toLowerCase();\n  return buffer === \"..\" || buffer === \"%2e.\" || buffer === \".%2e\" || buffer === \"%2e%2e\";\n}\nfunction isWindowsDriveLetterCodePoints(cp1, cp2) {\n  return infra.isASCIIAlpha(cp1) && (cp2 === 58 || cp2 === 124);\n}\nfunction isWindowsDriveLetterString(string) {\n  return string.length === 2 && infra.isASCIIAlpha(string.codePointAt(0)) && (string[1] === \":\" || string[1] === \"|\");\n}\nfunction isNormalizedWindowsDriveLetterString(string) {\n  return string.length === 2 && infra.isASCIIAlpha(string.codePointAt(0)) && string[1] === \":\";\n}\nfunction containsForbiddenHostCodePoint(string) {\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|%|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\n}\nfunction containsForbiddenHostCodePointExcludingPercent(string) {\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\n}\nfunction isSpecialScheme(scheme) {\n  return specialSchemes[scheme] !== undefined;\n}\nfunction isSpecial(url) {\n  return isSpecialScheme(url.scheme);\n}\nfunction isNotSpecial(url) {\n  return !isSpecialScheme(url.scheme);\n}\nfunction defaultPort(scheme) {\n  return specialSchemes[scheme];\n}\nfunction utf8PercentEncode(c) {\n  const buf = Buffer.from(c);\n  let str = \"\";\n  for (let i = 0; i < buf.length; ++i) {\n    str += percentEncode(buf[i]);\n  }\n  return str;\n}\nfunction isC0ControlPercentEncode(c) {\n  return c <= 0x1F || c > 0x7E;\n}\nconst extraUserinfoPercentEncodeSet = new Set([47, 58, 59, 61, 64, 91, 92, 93, 94, 124]);\nfunction isUserinfoPercentEncode(c) {\n  return isPathPercentEncode(c) || extraUserinfoPercentEncodeSet.has(c);\n}\nconst extraFragmentPercentEncodeSet = new Set([32, 34, 60, 62, 96]);\nfunction isFragmentPercentEncode(c) {\n  return isC0ControlPercentEncode(c) || extraFragmentPercentEncodeSet.has(c);\n}\nconst extraPathPercentEncodeSet = new Set([35, 63, 123, 125]);\nfunction isPathPercentEncode(c) {\n  return isFragmentPercentEncode(c) || extraPathPercentEncodeSet.has(c);\n}\nfunction percentEncodeChar(c, encodeSetPredicate) {\n  const cStr = String.fromCodePoint(c);\n  if (encodeSetPredicate(c)) {\n    return utf8PercentEncode(cStr);\n  }\n  return cStr;\n}\nfunction parseIPv4Number(input) {\n  let R = 10;\n  if (input.length >= 2 && input.charAt(0) === \"0\" && input.charAt(1).toLowerCase() === \"x\") {\n    input = input.substring(2);\n    R = 16;\n  } else if (input.length >= 2 && input.charAt(0) === \"0\") {\n    input = input.substring(1);\n    R = 8;\n  }\n  if (input === \"\") {\n    return 0;\n  }\n  let regex = /[^0-7]/;\n  if (R === 10) {\n    regex = /[^0-9]/;\n  }\n  if (R === 16) {\n    regex = /[^0-9A-Fa-f]/;\n  }\n  if (regex.test(input)) {\n    return failure;\n  }\n  return parseInt(input, R);\n}\nfunction parseIPv4(input) {\n  const parts = input.split(\".\");\n  if (parts[parts.length - 1] === \"\") {\n    if (parts.length > 1) {\n      parts.pop();\n    }\n  }\n  if (parts.length > 4) {\n    return input;\n  }\n  const numbers = [];\n  for (const part of parts) {\n    if (part === \"\") {\n      return input;\n    }\n    const n = parseIPv4Number(part);\n    if (n === failure) {\n      return input;\n    }\n    numbers.push(n);\n  }\n  for (let i = 0; i < numbers.length - 1; ++i) {\n    if (numbers[i] > 255) {\n      return failure;\n    }\n  }\n  if (numbers[numbers.length - 1] >= Math.pow(256, 5 - numbers.length)) {\n    return failure;\n  }\n  let ipv4 = numbers.pop();\n  let counter = 0;\n  for (const n of numbers) {\n    ipv4 += n * Math.pow(256, 3 - counter);\n    ++counter;\n  }\n  return ipv4;\n}\nfunction serializeIPv4(address) {\n  let output = \"\";\n  let n = address;\n  for (let i = 1; i <= 4; ++i) {\n    output = String(n % 256) + output;\n    if (i !== 4) {\n      output = \".\" + output;\n    }\n    n = Math.floor(n / 256);\n  }\n  return output;\n}\nfunction parseIPv6(input) {\n  const address = [0, 0, 0, 0, 0, 0, 0, 0];\n  let pieceIndex = 0;\n  let compress = null;\n  let pointer = 0;\n  input = punycode.ucs2.decode(input);\n  if (input[pointer] === 58) {\n    if (input[pointer + 1] !== 58) {\n      return failure;\n    }\n    pointer += 2;\n    ++pieceIndex;\n    compress = pieceIndex;\n  }\n  while (pointer < input.length) {\n    if (pieceIndex === 8) {\n      return failure;\n    }\n    if (input[pointer] === 58) {\n      if (compress !== null) {\n        return failure;\n      }\n      ++pointer;\n      ++pieceIndex;\n      compress = pieceIndex;\n      continue;\n    }\n    let value = 0;\n    let length = 0;\n    while (length < 4 && infra.isASCIIHex(input[pointer])) {\n      value = value * 0x10 + parseInt(at(input, pointer), 16);\n      ++pointer;\n      ++length;\n    }\n    if (input[pointer] === 46) {\n      if (length === 0) {\n        return failure;\n      }\n      pointer -= length;\n      if (pieceIndex > 6) {\n        return failure;\n      }\n      let numbersSeen = 0;\n      while (input[pointer] !== undefined) {\n        let ipv4Piece = null;\n        if (numbersSeen > 0) {\n          if (input[pointer] === 46 && numbersSeen < 4) {\n            ++pointer;\n          } else {\n            return failure;\n          }\n        }\n        if (!infra.isASCIIDigit(input[pointer])) {\n          return failure;\n        }\n        while (infra.isASCIIDigit(input[pointer])) {\n          const number = parseInt(at(input, pointer));\n          if (ipv4Piece === null) {\n            ipv4Piece = number;\n          } else if (ipv4Piece === 0) {\n            return failure;\n          } else {\n            ipv4Piece = ipv4Piece * 10 + number;\n          }\n          if (ipv4Piece > 255) {\n            return failure;\n          }\n          ++pointer;\n        }\n        address[pieceIndex] = address[pieceIndex] * 0x100 + ipv4Piece;\n        ++numbersSeen;\n        if (numbersSeen === 2 || numbersSeen === 4) {\n          ++pieceIndex;\n        }\n      }\n      if (numbersSeen !== 4) {\n        return failure;\n      }\n      break;\n    } else if (input[pointer] === 58) {\n      ++pointer;\n      if (input[pointer] === undefined) {\n        return failure;\n      }\n    } else if (input[pointer] !== undefined) {\n      return failure;\n    }\n    address[pieceIndex] = value;\n    ++pieceIndex;\n  }\n  if (compress !== null) {\n    let swaps = pieceIndex - compress;\n    pieceIndex = 7;\n    while (pieceIndex !== 0 && swaps > 0) {\n      const temp = address[compress + swaps - 1];\n      address[compress + swaps - 1] = address[pieceIndex];\n      address[pieceIndex] = temp;\n      --pieceIndex;\n      --swaps;\n    }\n  } else if (compress === null && pieceIndex !== 8) {\n    return failure;\n  }\n  return address;\n}\nfunction serializeIPv6(address) {\n  let output = \"\";\n  const seqResult = findLongestZeroSequence(address);\n  const compress = seqResult.idx;\n  let ignore0 = false;\n  for (let pieceIndex = 0; pieceIndex <= 7; ++pieceIndex) {\n    if (ignore0 && address[pieceIndex] === 0) {\n      continue;\n    } else if (ignore0) {\n      ignore0 = false;\n    }\n    if (compress === pieceIndex) {\n      const separator = pieceIndex === 0 ? \"::\" : \":\";\n      output += separator;\n      ignore0 = true;\n      continue;\n    }\n    output += address[pieceIndex].toString(16);\n    if (pieceIndex !== 7) {\n      output += \":\";\n    }\n  }\n  return output;\n}\nfunction parseHost(input) {\n  let isNotSpecialArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  if (input[0] === \"[\") {\n    if (input[input.length - 1] !== \"]\") {\n      return failure;\n    }\n    return parseIPv6(input.substring(1, input.length - 1));\n  }\n  if (isNotSpecialArg) {\n    return parseOpaqueHost(input);\n  }\n  const domain = percentDecode(Buffer.from(input)).toString();\n  const asciiDomain = domainToASCII(domain);\n  if (asciiDomain === failure) {\n    return failure;\n  }\n  if (containsForbiddenHostCodePoint(asciiDomain)) {\n    return failure;\n  }\n  const ipv4Host = parseIPv4(asciiDomain);\n  if (typeof ipv4Host === \"number\" || ipv4Host === failure) {\n    return ipv4Host;\n  }\n  return asciiDomain;\n}\nfunction parseOpaqueHost(input) {\n  if (containsForbiddenHostCodePointExcludingPercent(input)) {\n    return failure;\n  }\n  let output = \"\";\n  const decoded = punycode.ucs2.decode(input);\n  for (let i = 0; i < decoded.length; ++i) {\n    output += percentEncodeChar(decoded[i], isC0ControlPercentEncode);\n  }\n  return output;\n}\nfunction findLongestZeroSequence(arr) {\n  let maxIdx = null;\n  let maxLen = 1; // only find elements > 1\n  let currStart = null;\n  let currLen = 0;\n  for (let i = 0; i < arr.length; ++i) {\n    if (arr[i] !== 0) {\n      if (currLen > maxLen) {\n        maxIdx = currStart;\n        maxLen = currLen;\n      }\n      currStart = null;\n      currLen = 0;\n    } else {\n      if (currStart === null) {\n        currStart = i;\n      }\n      ++currLen;\n    }\n  }\n\n  // if trailing zeros\n  if (currLen > maxLen) {\n    maxIdx = currStart;\n    maxLen = currLen;\n  }\n  return {\n    idx: maxIdx,\n    len: maxLen\n  };\n}\nfunction serializeHost(host) {\n  if (typeof host === \"number\") {\n    return serializeIPv4(host);\n  }\n\n  // IPv6 serializer\n  if (host instanceof Array) {\n    return \"[\" + serializeIPv6(host) + \"]\";\n  }\n  return host;\n}\nfunction domainToASCII(domain) {\n  let beStrict = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  const result = tr46.toASCII(domain, {\n    checkBidi: true,\n    checkHyphens: false,\n    checkJoiners: true,\n    useSTD3ASCIIRules: beStrict,\n    verifyDNSLength: beStrict\n  });\n  if (result === null) {\n    return failure;\n  }\n  return result;\n}\nfunction trimControlChars(url) {\n  return url.replace(/^[\\u0000-\\u001F\\u0020]+|[\\u0000-\\u001F\\u0020]+$/g, \"\");\n}\nfunction trimTabAndNewline(url) {\n  return url.replace(/\\u0009|\\u000A|\\u000D/g, \"\");\n}\nfunction shortenPath(url) {\n  const {\n    path\n  } = url;\n  if (path.length === 0) {\n    return;\n  }\n  if (url.scheme === \"file\" && path.length === 1 && isNormalizedWindowsDriveLetter(path[0])) {\n    return;\n  }\n  path.pop();\n}\nfunction includesCredentials(url) {\n  return url.username !== \"\" || url.password !== \"\";\n}\nfunction cannotHaveAUsernamePasswordPort(url) {\n  return url.host === null || url.host === \"\" || url.cannotBeABaseURL || url.scheme === \"file\";\n}\nfunction isNormalizedWindowsDriveLetter(string) {\n  return /^[A-Za-z]:$/.test(string);\n}\nfunction URLStateMachine(input, base, encodingOverride, url, stateOverride) {\n  this.pointer = 0;\n  this.input = input;\n  this.base = base || null;\n  this.encodingOverride = encodingOverride || \"utf-8\";\n  this.stateOverride = stateOverride;\n  this.url = url;\n  this.failure = false;\n  this.parseError = false;\n  if (!this.url) {\n    this.url = {\n      scheme: \"\",\n      username: \"\",\n      password: \"\",\n      host: null,\n      port: null,\n      path: [],\n      query: null,\n      fragment: null,\n      cannotBeABaseURL: false\n    };\n    const res = trimControlChars(this.input);\n    if (res !== this.input) {\n      this.parseError = true;\n    }\n    this.input = res;\n  }\n  const res = trimTabAndNewline(this.input);\n  if (res !== this.input) {\n    this.parseError = true;\n  }\n  this.input = res;\n  this.state = stateOverride || \"scheme start\";\n  this.buffer = \"\";\n  this.atFlag = false;\n  this.arrFlag = false;\n  this.passwordTokenSeenFlag = false;\n  this.input = punycode.ucs2.decode(this.input);\n  for (; this.pointer <= this.input.length; ++this.pointer) {\n    const c = this.input[this.pointer];\n    const cStr = isNaN(c) ? undefined : String.fromCodePoint(c);\n\n    // exec state machine\n    const ret = this[\"parse \" + this.state](c, cStr);\n    if (!ret) {\n      break; // terminate algorithm\n    } else if (ret === failure) {\n      this.failure = true;\n      break;\n    }\n  }\n}\nURLStateMachine.prototype[\"parse scheme start\"] = function parseSchemeStart(c, cStr) {\n  if (infra.isASCIIAlpha(c)) {\n    this.buffer += cStr.toLowerCase();\n    this.state = \"scheme\";\n  } else if (!this.stateOverride) {\n    this.state = \"no scheme\";\n    --this.pointer;\n  } else {\n    this.parseError = true;\n    return failure;\n  }\n  return true;\n};\nURLStateMachine.prototype[\"parse scheme\"] = function parseScheme(c, cStr) {\n  if (infra.isASCIIAlphanumeric(c) || c === 43 || c === 45 || c === 46) {\n    this.buffer += cStr.toLowerCase();\n  } else if (c === 58) {\n    if (this.stateOverride) {\n      if (isSpecial(this.url) && !isSpecialScheme(this.buffer)) {\n        return false;\n      }\n      if (!isSpecial(this.url) && isSpecialScheme(this.buffer)) {\n        return false;\n      }\n      if ((includesCredentials(this.url) || this.url.port !== null) && this.buffer === \"file\") {\n        return false;\n      }\n      if (this.url.scheme === \"file\" && (this.url.host === \"\" || this.url.host === null)) {\n        return false;\n      }\n    }\n    this.url.scheme = this.buffer;\n    if (this.stateOverride) {\n      if (this.url.port === defaultPort(this.url.scheme)) {\n        this.url.port = null;\n      }\n      return false;\n    }\n    this.buffer = \"\";\n    if (this.url.scheme === \"file\") {\n      if (this.input[this.pointer + 1] !== 47 || this.input[this.pointer + 2] !== 47) {\n        this.parseError = true;\n      }\n      this.state = \"file\";\n    } else if (isSpecial(this.url) && this.base !== null && this.base.scheme === this.url.scheme) {\n      this.state = \"special relative or authority\";\n    } else if (isSpecial(this.url)) {\n      this.state = \"special authority slashes\";\n    } else if (this.input[this.pointer + 1] === 47) {\n      this.state = \"path or authority\";\n      ++this.pointer;\n    } else {\n      this.url.cannotBeABaseURL = true;\n      this.url.path.push(\"\");\n      this.state = \"cannot-be-a-base-URL path\";\n    }\n  } else if (!this.stateOverride) {\n    this.buffer = \"\";\n    this.state = \"no scheme\";\n    this.pointer = -1;\n  } else {\n    this.parseError = true;\n    return failure;\n  }\n  return true;\n};\nURLStateMachine.prototype[\"parse no scheme\"] = function parseNoScheme(c) {\n  if (this.base === null || this.base.cannotBeABaseURL && c !== 35) {\n    return failure;\n  } else if (this.base.cannotBeABaseURL && c === 35) {\n    this.url.scheme = this.base.scheme;\n    this.url.path = this.base.path.slice();\n    this.url.query = this.base.query;\n    this.url.fragment = \"\";\n    this.url.cannotBeABaseURL = true;\n    this.state = \"fragment\";\n  } else if (this.base.scheme === \"file\") {\n    this.state = \"file\";\n    --this.pointer;\n  } else {\n    this.state = \"relative\";\n    --this.pointer;\n  }\n  return true;\n};\nURLStateMachine.prototype[\"parse special relative or authority\"] = function parseSpecialRelativeOrAuthority(c) {\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\n    this.state = \"special authority ignore slashes\";\n    ++this.pointer;\n  } else {\n    this.parseError = true;\n    this.state = \"relative\";\n    --this.pointer;\n  }\n  return true;\n};\nURLStateMachine.prototype[\"parse path or authority\"] = function parsePathOrAuthority(c) {\n  if (c === 47) {\n    this.state = \"authority\";\n  } else {\n    this.state = \"path\";\n    --this.pointer;\n  }\n  return true;\n};\nURLStateMachine.prototype[\"parse relative\"] = function parseRelative(c) {\n  this.url.scheme = this.base.scheme;\n  if (isNaN(c)) {\n    this.url.username = this.base.username;\n    this.url.password = this.base.password;\n    this.url.host = this.base.host;\n    this.url.port = this.base.port;\n    this.url.path = this.base.path.slice();\n    this.url.query = this.base.query;\n  } else if (c === 47) {\n    this.state = \"relative slash\";\n  } else if (c === 63) {\n    this.url.username = this.base.username;\n    this.url.password = this.base.password;\n    this.url.host = this.base.host;\n    this.url.port = this.base.port;\n    this.url.path = this.base.path.slice();\n    this.url.query = \"\";\n    this.state = \"query\";\n  } else if (c === 35) {\n    this.url.username = this.base.username;\n    this.url.password = this.base.password;\n    this.url.host = this.base.host;\n    this.url.port = this.base.port;\n    this.url.path = this.base.path.slice();\n    this.url.query = this.base.query;\n    this.url.fragment = \"\";\n    this.state = \"fragment\";\n  } else if (isSpecial(this.url) && c === 92) {\n    this.parseError = true;\n    this.state = \"relative slash\";\n  } else {\n    this.url.username = this.base.username;\n    this.url.password = this.base.password;\n    this.url.host = this.base.host;\n    this.url.port = this.base.port;\n    this.url.path = this.base.path.slice(0, this.base.path.length - 1);\n    this.state = \"path\";\n    --this.pointer;\n  }\n  return true;\n};\nURLStateMachine.prototype[\"parse relative slash\"] = function parseRelativeSlash(c) {\n  if (isSpecial(this.url) && (c === 47 || c === 92)) {\n    if (c === 92) {\n      this.parseError = true;\n    }\n    this.state = \"special authority ignore slashes\";\n  } else if (c === 47) {\n    this.state = \"authority\";\n  } else {\n    this.url.username = this.base.username;\n    this.url.password = this.base.password;\n    this.url.host = this.base.host;\n    this.url.port = this.base.port;\n    this.state = \"path\";\n    --this.pointer;\n  }\n  return true;\n};\nURLStateMachine.prototype[\"parse special authority slashes\"] = function parseSpecialAuthoritySlashes(c) {\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\n    this.state = \"special authority ignore slashes\";\n    ++this.pointer;\n  } else {\n    this.parseError = true;\n    this.state = \"special authority ignore slashes\";\n    --this.pointer;\n  }\n  return true;\n};\nURLStateMachine.prototype[\"parse special authority ignore slashes\"] = function parseSpecialAuthorityIgnoreSlashes(c) {\n  if (c !== 47 && c !== 92) {\n    this.state = \"authority\";\n    --this.pointer;\n  } else {\n    this.parseError = true;\n  }\n  return true;\n};\nURLStateMachine.prototype[\"parse authority\"] = function parseAuthority(c, cStr) {\n  if (c === 64) {\n    this.parseError = true;\n    if (this.atFlag) {\n      this.buffer = \"%40\" + this.buffer;\n    }\n    this.atFlag = true;\n\n    // careful, this is based on buffer and has its own pointer (this.pointer != pointer) and inner chars\n    const len = countSymbols(this.buffer);\n    for (let pointer = 0; pointer < len; ++pointer) {\n      const codePoint = this.buffer.codePointAt(pointer);\n      if (codePoint === 58 && !this.passwordTokenSeenFlag) {\n        this.passwordTokenSeenFlag = true;\n        continue;\n      }\n      const encodedCodePoints = percentEncodeChar(codePoint, isUserinfoPercentEncode);\n      if (this.passwordTokenSeenFlag) {\n        this.url.password += encodedCodePoints;\n      } else {\n        this.url.username += encodedCodePoints;\n      }\n    }\n    this.buffer = \"\";\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 || isSpecial(this.url) && c === 92) {\n    if (this.atFlag && this.buffer === \"\") {\n      this.parseError = true;\n      return failure;\n    }\n    this.pointer -= countSymbols(this.buffer) + 1;\n    this.buffer = \"\";\n    this.state = \"host\";\n  } else {\n    this.buffer += cStr;\n  }\n  return true;\n};\nURLStateMachine.prototype[\"parse hostname\"] = URLStateMachine.prototype[\"parse host\"] = function parseHostName(c, cStr) {\n  if (this.stateOverride && this.url.scheme === \"file\") {\n    --this.pointer;\n    this.state = \"file host\";\n  } else if (c === 58 && !this.arrFlag) {\n    if (this.buffer === \"\") {\n      this.parseError = true;\n      return failure;\n    }\n    const host = parseHost(this.buffer, isNotSpecial(this.url));\n    if (host === failure) {\n      return failure;\n    }\n    this.url.host = host;\n    this.buffer = \"\";\n    this.state = \"port\";\n    if (this.stateOverride === \"hostname\") {\n      return false;\n    }\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 || isSpecial(this.url) && c === 92) {\n    --this.pointer;\n    if (isSpecial(this.url) && this.buffer === \"\") {\n      this.parseError = true;\n      return failure;\n    } else if (this.stateOverride && this.buffer === \"\" && (includesCredentials(this.url) || this.url.port !== null)) {\n      this.parseError = true;\n      return false;\n    }\n    const host = parseHost(this.buffer, isNotSpecial(this.url));\n    if (host === failure) {\n      return failure;\n    }\n    this.url.host = host;\n    this.buffer = \"\";\n    this.state = \"path start\";\n    if (this.stateOverride) {\n      return false;\n    }\n  } else {\n    if (c === 91) {\n      this.arrFlag = true;\n    } else if (c === 93) {\n      this.arrFlag = false;\n    }\n    this.buffer += cStr;\n  }\n  return true;\n};\nURLStateMachine.prototype[\"parse port\"] = function parsePort(c, cStr) {\n  if (infra.isASCIIDigit(c)) {\n    this.buffer += cStr;\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 || isSpecial(this.url) && c === 92 || this.stateOverride) {\n    if (this.buffer !== \"\") {\n      const port = parseInt(this.buffer);\n      if (port > Math.pow(2, 16) - 1) {\n        this.parseError = true;\n        return failure;\n      }\n      this.url.port = port === defaultPort(this.url.scheme) ? null : port;\n      this.buffer = \"\";\n    }\n    if (this.stateOverride) {\n      return false;\n    }\n    this.state = \"path start\";\n    --this.pointer;\n  } else {\n    this.parseError = true;\n    return failure;\n  }\n  return true;\n};\nconst fileOtherwiseCodePoints = new Set([47, 92, 63, 35]);\nfunction startsWithWindowsDriveLetter(input, pointer) {\n  const length = input.length - pointer;\n  return length >= 2 && isWindowsDriveLetterCodePoints(input[pointer], input[pointer + 1]) && (length === 2 || fileOtherwiseCodePoints.has(input[pointer + 2]));\n}\nURLStateMachine.prototype[\"parse file\"] = function parseFile(c) {\n  this.url.scheme = \"file\";\n  if (c === 47 || c === 92) {\n    if (c === 92) {\n      this.parseError = true;\n    }\n    this.state = \"file slash\";\n  } else if (this.base !== null && this.base.scheme === \"file\") {\n    if (isNaN(c)) {\n      this.url.host = this.base.host;\n      this.url.path = this.base.path.slice();\n      this.url.query = this.base.query;\n    } else if (c === 63) {\n      this.url.host = this.base.host;\n      this.url.path = this.base.path.slice();\n      this.url.query = \"\";\n      this.state = \"query\";\n    } else if (c === 35) {\n      this.url.host = this.base.host;\n      this.url.path = this.base.path.slice();\n      this.url.query = this.base.query;\n      this.url.fragment = \"\";\n      this.state = \"fragment\";\n    } else {\n      if (!startsWithWindowsDriveLetter(this.input, this.pointer)) {\n        this.url.host = this.base.host;\n        this.url.path = this.base.path.slice();\n        shortenPath(this.url);\n      } else {\n        this.parseError = true;\n      }\n      this.state = \"path\";\n      --this.pointer;\n    }\n  } else {\n    this.state = \"path\";\n    --this.pointer;\n  }\n  return true;\n};\nURLStateMachine.prototype[\"parse file slash\"] = function parseFileSlash(c) {\n  if (c === 47 || c === 92) {\n    if (c === 92) {\n      this.parseError = true;\n    }\n    this.state = \"file host\";\n  } else {\n    if (this.base !== null && this.base.scheme === \"file\" && !startsWithWindowsDriveLetter(this.input, this.pointer)) {\n      if (isNormalizedWindowsDriveLetterString(this.base.path[0])) {\n        this.url.path.push(this.base.path[0]);\n      } else {\n        this.url.host = this.base.host;\n      }\n    }\n    this.state = \"path\";\n    --this.pointer;\n  }\n  return true;\n};\nURLStateMachine.prototype[\"parse file host\"] = function parseFileHost(c, cStr) {\n  if (isNaN(c) || c === 47 || c === 92 || c === 63 || c === 35) {\n    --this.pointer;\n    if (!this.stateOverride && isWindowsDriveLetterString(this.buffer)) {\n      this.parseError = true;\n      this.state = \"path\";\n    } else if (this.buffer === \"\") {\n      this.url.host = \"\";\n      if (this.stateOverride) {\n        return false;\n      }\n      this.state = \"path start\";\n    } else {\n      let host = parseHost(this.buffer, isNotSpecial(this.url));\n      if (host === failure) {\n        return failure;\n      }\n      if (host === \"localhost\") {\n        host = \"\";\n      }\n      this.url.host = host;\n      if (this.stateOverride) {\n        return false;\n      }\n      this.buffer = \"\";\n      this.state = \"path start\";\n    }\n  } else {\n    this.buffer += cStr;\n  }\n  return true;\n};\nURLStateMachine.prototype[\"parse path start\"] = function parsePathStart(c) {\n  if (isSpecial(this.url)) {\n    if (c === 92) {\n      this.parseError = true;\n    }\n    this.state = \"path\";\n    if (c !== 47 && c !== 92) {\n      --this.pointer;\n    }\n  } else if (!this.stateOverride && c === 63) {\n    this.url.query = \"\";\n    this.state = \"query\";\n  } else if (!this.stateOverride && c === 35) {\n    this.url.fragment = \"\";\n    this.state = \"fragment\";\n  } else if (c !== undefined) {\n    this.state = \"path\";\n    if (c !== 47) {\n      --this.pointer;\n    }\n  }\n  return true;\n};\nURLStateMachine.prototype[\"parse path\"] = function parsePath(c) {\n  if (isNaN(c) || c === 47 || isSpecial(this.url) && c === 92 || !this.stateOverride && (c === 63 || c === 35)) {\n    if (isSpecial(this.url) && c === 92) {\n      this.parseError = true;\n    }\n    if (isDoubleDot(this.buffer)) {\n      shortenPath(this.url);\n      if (c !== 47 && !(isSpecial(this.url) && c === 92)) {\n        this.url.path.push(\"\");\n      }\n    } else if (isSingleDot(this.buffer) && c !== 47 && !(isSpecial(this.url) && c === 92)) {\n      this.url.path.push(\"\");\n    } else if (!isSingleDot(this.buffer)) {\n      if (this.url.scheme === \"file\" && this.url.path.length === 0 && isWindowsDriveLetterString(this.buffer)) {\n        if (this.url.host !== \"\" && this.url.host !== null) {\n          this.parseError = true;\n          this.url.host = \"\";\n        }\n        this.buffer = this.buffer[0] + \":\";\n      }\n      this.url.path.push(this.buffer);\n    }\n    this.buffer = \"\";\n    if (this.url.scheme === \"file\" && (c === undefined || c === 63 || c === 35)) {\n      while (this.url.path.length > 1 && this.url.path[0] === \"\") {\n        this.parseError = true;\n        this.url.path.shift();\n      }\n    }\n    if (c === 63) {\n      this.url.query = \"\";\n      this.state = \"query\";\n    }\n    if (c === 35) {\n      this.url.fragment = \"\";\n      this.state = \"fragment\";\n    }\n  } else {\n    // TODO: If c is not a URL code point and not \"%\", parse error.\n\n    if (c === 37 && (!infra.isASCIIHex(this.input[this.pointer + 1]) || !infra.isASCIIHex(this.input[this.pointer + 2]))) {\n      this.parseError = true;\n    }\n    this.buffer += percentEncodeChar(c, isPathPercentEncode);\n  }\n  return true;\n};\nURLStateMachine.prototype[\"parse cannot-be-a-base-URL path\"] = function parseCannotBeABaseURLPath(c) {\n  if (c === 63) {\n    this.url.query = \"\";\n    this.state = \"query\";\n  } else if (c === 35) {\n    this.url.fragment = \"\";\n    this.state = \"fragment\";\n  } else {\n    // TODO: Add: not a URL code point\n    if (!isNaN(c) && c !== 37) {\n      this.parseError = true;\n    }\n    if (c === 37 && (!infra.isASCIIHex(this.input[this.pointer + 1]) || !infra.isASCIIHex(this.input[this.pointer + 2]))) {\n      this.parseError = true;\n    }\n    if (!isNaN(c)) {\n      this.url.path[0] = this.url.path[0] + percentEncodeChar(c, isC0ControlPercentEncode);\n    }\n  }\n  return true;\n};\nURLStateMachine.prototype[\"parse query\"] = function parseQuery(c, cStr) {\n  if (isNaN(c) || !this.stateOverride && c === 35) {\n    if (!isSpecial(this.url) || this.url.scheme === \"ws\" || this.url.scheme === \"wss\") {\n      this.encodingOverride = \"utf-8\";\n    }\n    const buffer = Buffer.from(this.buffer); // TODO: Use encoding override instead\n    for (let i = 0; i < buffer.length; ++i) {\n      if (buffer[i] < 0x21 || buffer[i] > 0x7E || buffer[i] === 0x22 || buffer[i] === 0x23 || buffer[i] === 0x3C || buffer[i] === 0x3E || buffer[i] === 0x27 && isSpecial(this.url)) {\n        this.url.query += percentEncode(buffer[i]);\n      } else {\n        this.url.query += String.fromCodePoint(buffer[i]);\n      }\n    }\n    this.buffer = \"\";\n    if (c === 35) {\n      this.url.fragment = \"\";\n      this.state = \"fragment\";\n    }\n  } else {\n    // TODO: If c is not a URL code point and not \"%\", parse error.\n    if (c === 37 && (!infra.isASCIIHex(this.input[this.pointer + 1]) || !infra.isASCIIHex(this.input[this.pointer + 2]))) {\n      this.parseError = true;\n    }\n    this.buffer += cStr;\n  }\n  return true;\n};\nURLStateMachine.prototype[\"parse fragment\"] = function parseFragment(c) {\n  if (isNaN(c)) {// do nothing\n  } else if (c === 0x0) {\n    this.parseError = true;\n  } else {\n    // TODO: If c is not a URL code point and not \"%\", parse error.\n    if (c === 37 && (!infra.isASCIIHex(this.input[this.pointer + 1]) || !infra.isASCIIHex(this.input[this.pointer + 2]))) {\n      this.parseError = true;\n    }\n    this.url.fragment += percentEncodeChar(c, isFragmentPercentEncode);\n  }\n  return true;\n};\nfunction serializeURL(url, excludeFragment) {\n  let output = url.scheme + \":\";\n  if (url.host !== null) {\n    output += \"//\";\n    if (url.username !== \"\" || url.password !== \"\") {\n      output += url.username;\n      if (url.password !== \"\") {\n        output += \":\" + url.password;\n      }\n      output += \"@\";\n    }\n    output += serializeHost(url.host);\n    if (url.port !== null) {\n      output += \":\" + url.port;\n    }\n  } else if (url.host === null && url.scheme === \"file\") {\n    output += \"//\";\n  }\n  if (url.cannotBeABaseURL) {\n    output += url.path[0];\n  } else {\n    for (const string of url.path) {\n      output += \"/\" + string;\n    }\n  }\n  if (url.query !== null) {\n    output += \"?\" + url.query;\n  }\n  if (!excludeFragment && url.fragment !== null) {\n    output += \"#\" + url.fragment;\n  }\n  return output;\n}\nfunction serializeOrigin(tuple) {\n  let result = tuple.scheme + \"://\";\n  result += serializeHost(tuple.host);\n  if (tuple.port !== null) {\n    result += \":\" + tuple.port;\n  }\n  return result;\n}\nmodule.exports.serializeURL = serializeURL;\nmodule.exports.serializeURLOrigin = function (url) {\n  // https://url.spec.whatwg.org/#concept-url-origin\n  switch (url.scheme) {\n    case \"blob\":\n      try {\n        return module.exports.serializeURLOrigin(module.exports.parseURL(url.path[0]));\n      } catch (e) {\n        // serializing an opaque origin returns \"null\"\n        return \"null\";\n      }\n    case \"ftp\":\n    case \"gopher\":\n    case \"http\":\n    case \"https\":\n    case \"ws\":\n    case \"wss\":\n      return serializeOrigin({\n        scheme: url.scheme,\n        host: url.host,\n        port: url.port\n      });\n    case \"file\":\n      // spec says \"exercise to the reader\", chrome says \"file://\"\n      return \"file://\";\n    default:\n      // serializing an opaque origin returns \"null\"\n      return \"null\";\n  }\n};\nmodule.exports.basicURLParse = function (input, options) {\n  if (options === undefined) {\n    options = {};\n  }\n  const usm = new URLStateMachine(input, options.baseURL, options.encodingOverride, options.url, options.stateOverride);\n  if (usm.failure) {\n    return null;\n  }\n  return usm.url;\n};\nmodule.exports.setTheUsername = function (url, username) {\n  url.username = \"\";\n  const decoded = punycode.ucs2.decode(username);\n  for (let i = 0; i < decoded.length; ++i) {\n    url.username += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\n  }\n};\nmodule.exports.setThePassword = function (url, password) {\n  url.password = \"\";\n  const decoded = punycode.ucs2.decode(password);\n  for (let i = 0; i < decoded.length; ++i) {\n    url.password += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\n  }\n};\nmodule.exports.serializeHost = serializeHost;\nmodule.exports.cannotHaveAUsernamePasswordPort = cannotHaveAUsernamePasswordPort;\nmodule.exports.serializeInteger = function (integer) {\n  return String(integer);\n};\nmodule.exports.parseURL = function (input, options) {\n  if (options === undefined) {\n    options = {};\n  }\n\n  // We don't handle blobs, so this just delegates:\n  return module.exports.basicURLParse(input, {\n    baseURL: options.baseURL,\n    encodingOverride: options.encodingOverride\n  });\n};","map":{"version":3,"names":["punycode","require","tr46","infra","percentEncode","percentDecode","specialSchemes","ftp","file","gopher","http","https","ws","wss","failure","Symbol","countSymbols","str","ucs2","decode","length","at","input","idx","c","isNaN","undefined","String","fromCodePoint","isSingleDot","buffer","toLowerCase","isDoubleDot","isWindowsDriveLetterCodePoints","cp1","cp2","isASCIIAlpha","isWindowsDriveLetterString","string","codePointAt","isNormalizedWindowsDriveLetterString","containsForbiddenHostCodePoint","search","containsForbiddenHostCodePointExcludingPercent","isSpecialScheme","scheme","isSpecial","url","isNotSpecial","defaultPort","utf8PercentEncode","buf","Buffer","from","i","isC0ControlPercentEncode","extraUserinfoPercentEncodeSet","Set","isUserinfoPercentEncode","isPathPercentEncode","has","extraFragmentPercentEncodeSet","isFragmentPercentEncode","extraPathPercentEncodeSet","percentEncodeChar","encodeSetPredicate","cStr","parseIPv4Number","R","charAt","substring","regex","test","parseInt","parseIPv4","parts","split","pop","numbers","part","n","push","Math","pow","ipv4","counter","serializeIPv4","address","output","floor","parseIPv6","pieceIndex","compress","pointer","value","isASCIIHex","numbersSeen","ipv4Piece","isASCIIDigit","number","swaps","temp","serializeIPv6","seqResult","findLongestZeroSequence","ignore0","separator","toString","parseHost","isNotSpecialArg","arguments","parseOpaqueHost","domain","asciiDomain","domainToASCII","ipv4Host","decoded","arr","maxIdx","maxLen","currStart","currLen","len","serializeHost","host","Array","beStrict","result","toASCII","checkBidi","checkHyphens","checkJoiners","useSTD3ASCIIRules","verifyDNSLength","trimControlChars","replace","trimTabAndNewline","shortenPath","path","isNormalizedWindowsDriveLetter","includesCredentials","username","password","cannotHaveAUsernamePasswordPort","cannotBeABaseURL","URLStateMachine","base","encodingOverride","stateOverride","parseError","port","query","fragment","res","state","atFlag","arrFlag","passwordTokenSeenFlag","ret","prototype","parseSchemeStart","parseScheme","isASCIIAlphanumeric","parseNoScheme","slice","parseSpecialRelativeOrAuthority","parsePathOrAuthority","parseRelative","parseRelativeSlash","parseSpecialAuthoritySlashes","parseSpecialAuthorityIgnoreSlashes","parseAuthority","codePoint","encodedCodePoints","parseHostName","parsePort","fileOtherwiseCodePoints","startsWithWindowsDriveLetter","parseFile","parseFileSlash","parseFileHost","parsePathStart","parsePath","shift","parseCannotBeABaseURLPath","parseQuery","parseFragment","serializeURL","excludeFragment","serializeOrigin","tuple","module","exports","serializeURLOrigin","parseURL","e","basicURLParse","options","usm","baseURL","setTheUsername","setThePassword","serializeInteger","integer"],"sources":["G:/scientificKeyboard/keyboard/node_modules/mathjax-node/node_modules/whatwg-url/lib/url-state-machine.js"],"sourcesContent":["\"use strict\";\nconst punycode = require(\"punycode\");\nconst tr46 = require(\"tr46\");\n\nconst infra = require(\"./infra\");\nconst { percentEncode, percentDecode } = require(\"./urlencoded\");\n\nconst specialSchemes = {\n  ftp: 21,\n  file: null,\n  gopher: 70,\n  http: 80,\n  https: 443,\n  ws: 80,\n  wss: 443\n};\n\nconst failure = Symbol(\"failure\");\n\nfunction countSymbols(str) {\n  return punycode.ucs2.decode(str).length;\n}\n\nfunction at(input, idx) {\n  const c = input[idx];\n  return isNaN(c) ? undefined : String.fromCodePoint(c);\n}\n\nfunction isSingleDot(buffer) {\n  return buffer === \".\" || buffer.toLowerCase() === \"%2e\";\n}\n\nfunction isDoubleDot(buffer) {\n  buffer = buffer.toLowerCase();\n  return buffer === \"..\" || buffer === \"%2e.\" || buffer === \".%2e\" || buffer === \"%2e%2e\";\n}\n\nfunction isWindowsDriveLetterCodePoints(cp1, cp2) {\n  return infra.isASCIIAlpha(cp1) && (cp2 === 58 || cp2 === 124);\n}\n\nfunction isWindowsDriveLetterString(string) {\n  return string.length === 2 && infra.isASCIIAlpha(string.codePointAt(0)) && (string[1] === \":\" || string[1] === \"|\");\n}\n\nfunction isNormalizedWindowsDriveLetterString(string) {\n  return string.length === 2 && infra.isASCIIAlpha(string.codePointAt(0)) && string[1] === \":\";\n}\n\nfunction containsForbiddenHostCodePoint(string) {\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|%|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\n}\n\nfunction containsForbiddenHostCodePointExcludingPercent(string) {\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\n}\n\nfunction isSpecialScheme(scheme) {\n  return specialSchemes[scheme] !== undefined;\n}\n\nfunction isSpecial(url) {\n  return isSpecialScheme(url.scheme);\n}\n\nfunction isNotSpecial(url) {\n  return !isSpecialScheme(url.scheme);\n}\n\nfunction defaultPort(scheme) {\n  return specialSchemes[scheme];\n}\n\nfunction utf8PercentEncode(c) {\n  const buf = Buffer.from(c);\n\n  let str = \"\";\n\n  for (let i = 0; i < buf.length; ++i) {\n    str += percentEncode(buf[i]);\n  }\n\n  return str;\n}\n\nfunction isC0ControlPercentEncode(c) {\n  return c <= 0x1F || c > 0x7E;\n}\n\nconst extraUserinfoPercentEncodeSet =\n  new Set([47, 58, 59, 61, 64, 91, 92, 93, 94, 124]);\nfunction isUserinfoPercentEncode(c) {\n  return isPathPercentEncode(c) || extraUserinfoPercentEncodeSet.has(c);\n}\n\nconst extraFragmentPercentEncodeSet = new Set([32, 34, 60, 62, 96]);\nfunction isFragmentPercentEncode(c) {\n  return isC0ControlPercentEncode(c) || extraFragmentPercentEncodeSet.has(c);\n}\n\nconst extraPathPercentEncodeSet = new Set([35, 63, 123, 125]);\nfunction isPathPercentEncode(c) {\n  return isFragmentPercentEncode(c) || extraPathPercentEncodeSet.has(c);\n}\n\nfunction percentEncodeChar(c, encodeSetPredicate) {\n  const cStr = String.fromCodePoint(c);\n\n  if (encodeSetPredicate(c)) {\n    return utf8PercentEncode(cStr);\n  }\n\n  return cStr;\n}\n\nfunction parseIPv4Number(input) {\n  let R = 10;\n\n  if (input.length >= 2 && input.charAt(0) === \"0\" && input.charAt(1).toLowerCase() === \"x\") {\n    input = input.substring(2);\n    R = 16;\n  } else if (input.length >= 2 && input.charAt(0) === \"0\") {\n    input = input.substring(1);\n    R = 8;\n  }\n\n  if (input === \"\") {\n    return 0;\n  }\n\n  let regex = /[^0-7]/;\n  if (R === 10) {\n    regex = /[^0-9]/;\n  }\n  if (R === 16) {\n    regex = /[^0-9A-Fa-f]/;\n  }\n\n  if (regex.test(input)) {\n    return failure;\n  }\n\n  return parseInt(input, R);\n}\n\nfunction parseIPv4(input) {\n  const parts = input.split(\".\");\n  if (parts[parts.length - 1] === \"\") {\n    if (parts.length > 1) {\n      parts.pop();\n    }\n  }\n\n  if (parts.length > 4) {\n    return input;\n  }\n\n  const numbers = [];\n  for (const part of parts) {\n    if (part === \"\") {\n      return input;\n    }\n    const n = parseIPv4Number(part);\n    if (n === failure) {\n      return input;\n    }\n\n    numbers.push(n);\n  }\n\n  for (let i = 0; i < numbers.length - 1; ++i) {\n    if (numbers[i] > 255) {\n      return failure;\n    }\n  }\n  if (numbers[numbers.length - 1] >= Math.pow(256, 5 - numbers.length)) {\n    return failure;\n  }\n\n  let ipv4 = numbers.pop();\n  let counter = 0;\n\n  for (const n of numbers) {\n    ipv4 += n * Math.pow(256, 3 - counter);\n    ++counter;\n  }\n\n  return ipv4;\n}\n\nfunction serializeIPv4(address) {\n  let output = \"\";\n  let n = address;\n\n  for (let i = 1; i <= 4; ++i) {\n    output = String(n % 256) + output;\n    if (i !== 4) {\n      output = \".\" + output;\n    }\n    n = Math.floor(n / 256);\n  }\n\n  return output;\n}\n\nfunction parseIPv6(input) {\n  const address = [0, 0, 0, 0, 0, 0, 0, 0];\n  let pieceIndex = 0;\n  let compress = null;\n  let pointer = 0;\n\n  input = punycode.ucs2.decode(input);\n\n  if (input[pointer] === 58) {\n    if (input[pointer + 1] !== 58) {\n      return failure;\n    }\n\n    pointer += 2;\n    ++pieceIndex;\n    compress = pieceIndex;\n  }\n\n  while (pointer < input.length) {\n    if (pieceIndex === 8) {\n      return failure;\n    }\n\n    if (input[pointer] === 58) {\n      if (compress !== null) {\n        return failure;\n      }\n      ++pointer;\n      ++pieceIndex;\n      compress = pieceIndex;\n      continue;\n    }\n\n    let value = 0;\n    let length = 0;\n\n    while (length < 4 && infra.isASCIIHex(input[pointer])) {\n      value = value * 0x10 + parseInt(at(input, pointer), 16);\n      ++pointer;\n      ++length;\n    }\n\n    if (input[pointer] === 46) {\n      if (length === 0) {\n        return failure;\n      }\n\n      pointer -= length;\n\n      if (pieceIndex > 6) {\n        return failure;\n      }\n\n      let numbersSeen = 0;\n\n      while (input[pointer] !== undefined) {\n        let ipv4Piece = null;\n\n        if (numbersSeen > 0) {\n          if (input[pointer] === 46 && numbersSeen < 4) {\n            ++pointer;\n          } else {\n            return failure;\n          }\n        }\n\n        if (!infra.isASCIIDigit(input[pointer])) {\n          return failure;\n        }\n\n        while (infra.isASCIIDigit(input[pointer])) {\n          const number = parseInt(at(input, pointer));\n          if (ipv4Piece === null) {\n            ipv4Piece = number;\n          } else if (ipv4Piece === 0) {\n            return failure;\n          } else {\n            ipv4Piece = ipv4Piece * 10 + number;\n          }\n          if (ipv4Piece > 255) {\n            return failure;\n          }\n          ++pointer;\n        }\n\n        address[pieceIndex] = address[pieceIndex] * 0x100 + ipv4Piece;\n\n        ++numbersSeen;\n\n        if (numbersSeen === 2 || numbersSeen === 4) {\n          ++pieceIndex;\n        }\n      }\n\n      if (numbersSeen !== 4) {\n        return failure;\n      }\n\n      break;\n    } else if (input[pointer] === 58) {\n      ++pointer;\n      if (input[pointer] === undefined) {\n        return failure;\n      }\n    } else if (input[pointer] !== undefined) {\n      return failure;\n    }\n\n    address[pieceIndex] = value;\n    ++pieceIndex;\n  }\n\n  if (compress !== null) {\n    let swaps = pieceIndex - compress;\n    pieceIndex = 7;\n    while (pieceIndex !== 0 && swaps > 0) {\n      const temp = address[compress + swaps - 1];\n      address[compress + swaps - 1] = address[pieceIndex];\n      address[pieceIndex] = temp;\n      --pieceIndex;\n      --swaps;\n    }\n  } else if (compress === null && pieceIndex !== 8) {\n    return failure;\n  }\n\n  return address;\n}\n\nfunction serializeIPv6(address) {\n  let output = \"\";\n  const seqResult = findLongestZeroSequence(address);\n  const compress = seqResult.idx;\n  let ignore0 = false;\n\n  for (let pieceIndex = 0; pieceIndex <= 7; ++pieceIndex) {\n    if (ignore0 && address[pieceIndex] === 0) {\n      continue;\n    } else if (ignore0) {\n      ignore0 = false;\n    }\n\n    if (compress === pieceIndex) {\n      const separator = pieceIndex === 0 ? \"::\" : \":\";\n      output += separator;\n      ignore0 = true;\n      continue;\n    }\n\n    output += address[pieceIndex].toString(16);\n\n    if (pieceIndex !== 7) {\n      output += \":\";\n    }\n  }\n\n  return output;\n}\n\nfunction parseHost(input, isNotSpecialArg = false) {\n  if (input[0] === \"[\") {\n    if (input[input.length - 1] !== \"]\") {\n      return failure;\n    }\n\n    return parseIPv6(input.substring(1, input.length - 1));\n  }\n\n  if (isNotSpecialArg) {\n    return parseOpaqueHost(input);\n  }\n\n  const domain = percentDecode(Buffer.from(input)).toString();\n  const asciiDomain = domainToASCII(domain);\n  if (asciiDomain === failure) {\n    return failure;\n  }\n\n  if (containsForbiddenHostCodePoint(asciiDomain)) {\n    return failure;\n  }\n\n  const ipv4Host = parseIPv4(asciiDomain);\n  if (typeof ipv4Host === \"number\" || ipv4Host === failure) {\n    return ipv4Host;\n  }\n\n  return asciiDomain;\n}\n\nfunction parseOpaqueHost(input) {\n  if (containsForbiddenHostCodePointExcludingPercent(input)) {\n    return failure;\n  }\n\n  let output = \"\";\n  const decoded = punycode.ucs2.decode(input);\n  for (let i = 0; i < decoded.length; ++i) {\n    output += percentEncodeChar(decoded[i], isC0ControlPercentEncode);\n  }\n  return output;\n}\n\nfunction findLongestZeroSequence(arr) {\n  let maxIdx = null;\n  let maxLen = 1; // only find elements > 1\n  let currStart = null;\n  let currLen = 0;\n\n  for (let i = 0; i < arr.length; ++i) {\n    if (arr[i] !== 0) {\n      if (currLen > maxLen) {\n        maxIdx = currStart;\n        maxLen = currLen;\n      }\n\n      currStart = null;\n      currLen = 0;\n    } else {\n      if (currStart === null) {\n        currStart = i;\n      }\n      ++currLen;\n    }\n  }\n\n  // if trailing zeros\n  if (currLen > maxLen) {\n    maxIdx = currStart;\n    maxLen = currLen;\n  }\n\n  return {\n    idx: maxIdx,\n    len: maxLen\n  };\n}\n\nfunction serializeHost(host) {\n  if (typeof host === \"number\") {\n    return serializeIPv4(host);\n  }\n\n  // IPv6 serializer\n  if (host instanceof Array) {\n    return \"[\" + serializeIPv6(host) + \"]\";\n  }\n\n  return host;\n}\n\nfunction domainToASCII(domain, beStrict = false) {\n  const result = tr46.toASCII(domain, {\n    checkBidi: true,\n    checkHyphens: false,\n    checkJoiners: true,\n    useSTD3ASCIIRules: beStrict,\n    verifyDNSLength: beStrict\n  });\n  if (result === null) {\n    return failure;\n  }\n  return result;\n}\n\nfunction trimControlChars(url) {\n  return url.replace(/^[\\u0000-\\u001F\\u0020]+|[\\u0000-\\u001F\\u0020]+$/g, \"\");\n}\n\nfunction trimTabAndNewline(url) {\n  return url.replace(/\\u0009|\\u000A|\\u000D/g, \"\");\n}\n\nfunction shortenPath(url) {\n  const { path } = url;\n  if (path.length === 0) {\n    return;\n  }\n  if (url.scheme === \"file\" && path.length === 1 && isNormalizedWindowsDriveLetter(path[0])) {\n    return;\n  }\n\n  path.pop();\n}\n\nfunction includesCredentials(url) {\n  return url.username !== \"\" || url.password !== \"\";\n}\n\nfunction cannotHaveAUsernamePasswordPort(url) {\n  return url.host === null || url.host === \"\" || url.cannotBeABaseURL || url.scheme === \"file\";\n}\n\nfunction isNormalizedWindowsDriveLetter(string) {\n  return /^[A-Za-z]:$/.test(string);\n}\n\nfunction URLStateMachine(input, base, encodingOverride, url, stateOverride) {\n  this.pointer = 0;\n  this.input = input;\n  this.base = base || null;\n  this.encodingOverride = encodingOverride || \"utf-8\";\n  this.stateOverride = stateOverride;\n  this.url = url;\n  this.failure = false;\n  this.parseError = false;\n\n  if (!this.url) {\n    this.url = {\n      scheme: \"\",\n      username: \"\",\n      password: \"\",\n      host: null,\n      port: null,\n      path: [],\n      query: null,\n      fragment: null,\n\n      cannotBeABaseURL: false\n    };\n\n    const res = trimControlChars(this.input);\n    if (res !== this.input) {\n      this.parseError = true;\n    }\n    this.input = res;\n  }\n\n  const res = trimTabAndNewline(this.input);\n  if (res !== this.input) {\n    this.parseError = true;\n  }\n  this.input = res;\n\n  this.state = stateOverride || \"scheme start\";\n\n  this.buffer = \"\";\n  this.atFlag = false;\n  this.arrFlag = false;\n  this.passwordTokenSeenFlag = false;\n\n  this.input = punycode.ucs2.decode(this.input);\n\n  for (; this.pointer <= this.input.length; ++this.pointer) {\n    const c = this.input[this.pointer];\n    const cStr = isNaN(c) ? undefined : String.fromCodePoint(c);\n\n    // exec state machine\n    const ret = this[\"parse \" + this.state](c, cStr);\n    if (!ret) {\n      break; // terminate algorithm\n    } else if (ret === failure) {\n      this.failure = true;\n      break;\n    }\n  }\n}\n\nURLStateMachine.prototype[\"parse scheme start\"] = function parseSchemeStart(c, cStr) {\n  if (infra.isASCIIAlpha(c)) {\n    this.buffer += cStr.toLowerCase();\n    this.state = \"scheme\";\n  } else if (!this.stateOverride) {\n    this.state = \"no scheme\";\n    --this.pointer;\n  } else {\n    this.parseError = true;\n    return failure;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse scheme\"] = function parseScheme(c, cStr) {\n  if (infra.isASCIIAlphanumeric(c) || c === 43 || c === 45 || c === 46) {\n    this.buffer += cStr.toLowerCase();\n  } else if (c === 58) {\n    if (this.stateOverride) {\n      if (isSpecial(this.url) && !isSpecialScheme(this.buffer)) {\n        return false;\n      }\n\n      if (!isSpecial(this.url) && isSpecialScheme(this.buffer)) {\n        return false;\n      }\n\n      if ((includesCredentials(this.url) || this.url.port !== null) && this.buffer === \"file\") {\n        return false;\n      }\n\n      if (this.url.scheme === \"file\" && (this.url.host === \"\" || this.url.host === null)) {\n        return false;\n      }\n    }\n    this.url.scheme = this.buffer;\n    if (this.stateOverride) {\n      if (this.url.port === defaultPort(this.url.scheme)) {\n        this.url.port = null;\n      }\n      return false;\n    }\n    this.buffer = \"\";\n    if (this.url.scheme === \"file\") {\n      if (this.input[this.pointer + 1] !== 47 || this.input[this.pointer + 2] !== 47) {\n        this.parseError = true;\n      }\n      this.state = \"file\";\n    } else if (isSpecial(this.url) && this.base !== null && this.base.scheme === this.url.scheme) {\n      this.state = \"special relative or authority\";\n    } else if (isSpecial(this.url)) {\n      this.state = \"special authority slashes\";\n    } else if (this.input[this.pointer + 1] === 47) {\n      this.state = \"path or authority\";\n      ++this.pointer;\n    } else {\n      this.url.cannotBeABaseURL = true;\n      this.url.path.push(\"\");\n      this.state = \"cannot-be-a-base-URL path\";\n    }\n  } else if (!this.stateOverride) {\n    this.buffer = \"\";\n    this.state = \"no scheme\";\n    this.pointer = -1;\n  } else {\n    this.parseError = true;\n    return failure;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse no scheme\"] = function parseNoScheme(c) {\n  if (this.base === null || (this.base.cannotBeABaseURL && c !== 35)) {\n    return failure;\n  } else if (this.base.cannotBeABaseURL && c === 35) {\n    this.url.scheme = this.base.scheme;\n    this.url.path = this.base.path.slice();\n    this.url.query = this.base.query;\n    this.url.fragment = \"\";\n    this.url.cannotBeABaseURL = true;\n    this.state = \"fragment\";\n  } else if (this.base.scheme === \"file\") {\n    this.state = \"file\";\n    --this.pointer;\n  } else {\n    this.state = \"relative\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse special relative or authority\"] = function parseSpecialRelativeOrAuthority(c) {\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\n    this.state = \"special authority ignore slashes\";\n    ++this.pointer;\n  } else {\n    this.parseError = true;\n    this.state = \"relative\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse path or authority\"] = function parsePathOrAuthority(c) {\n  if (c === 47) {\n    this.state = \"authority\";\n  } else {\n    this.state = \"path\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse relative\"] = function parseRelative(c) {\n  this.url.scheme = this.base.scheme;\n  if (isNaN(c)) {\n    this.url.username = this.base.username;\n    this.url.password = this.base.password;\n    this.url.host = this.base.host;\n    this.url.port = this.base.port;\n    this.url.path = this.base.path.slice();\n    this.url.query = this.base.query;\n  } else if (c === 47) {\n    this.state = \"relative slash\";\n  } else if (c === 63) {\n    this.url.username = this.base.username;\n    this.url.password = this.base.password;\n    this.url.host = this.base.host;\n    this.url.port = this.base.port;\n    this.url.path = this.base.path.slice();\n    this.url.query = \"\";\n    this.state = \"query\";\n  } else if (c === 35) {\n    this.url.username = this.base.username;\n    this.url.password = this.base.password;\n    this.url.host = this.base.host;\n    this.url.port = this.base.port;\n    this.url.path = this.base.path.slice();\n    this.url.query = this.base.query;\n    this.url.fragment = \"\";\n    this.state = \"fragment\";\n  } else if (isSpecial(this.url) && c === 92) {\n    this.parseError = true;\n    this.state = \"relative slash\";\n  } else {\n    this.url.username = this.base.username;\n    this.url.password = this.base.password;\n    this.url.host = this.base.host;\n    this.url.port = this.base.port;\n    this.url.path = this.base.path.slice(0, this.base.path.length - 1);\n\n    this.state = \"path\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse relative slash\"] = function parseRelativeSlash(c) {\n  if (isSpecial(this.url) && (c === 47 || c === 92)) {\n    if (c === 92) {\n      this.parseError = true;\n    }\n    this.state = \"special authority ignore slashes\";\n  } else if (c === 47) {\n    this.state = \"authority\";\n  } else {\n    this.url.username = this.base.username;\n    this.url.password = this.base.password;\n    this.url.host = this.base.host;\n    this.url.port = this.base.port;\n    this.state = \"path\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse special authority slashes\"] = function parseSpecialAuthoritySlashes(c) {\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\n    this.state = \"special authority ignore slashes\";\n    ++this.pointer;\n  } else {\n    this.parseError = true;\n    this.state = \"special authority ignore slashes\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse special authority ignore slashes\"] = function parseSpecialAuthorityIgnoreSlashes(c) {\n  if (c !== 47 && c !== 92) {\n    this.state = \"authority\";\n    --this.pointer;\n  } else {\n    this.parseError = true;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse authority\"] = function parseAuthority(c, cStr) {\n  if (c === 64) {\n    this.parseError = true;\n    if (this.atFlag) {\n      this.buffer = \"%40\" + this.buffer;\n    }\n    this.atFlag = true;\n\n    // careful, this is based on buffer and has its own pointer (this.pointer != pointer) and inner chars\n    const len = countSymbols(this.buffer);\n    for (let pointer = 0; pointer < len; ++pointer) {\n      const codePoint = this.buffer.codePointAt(pointer);\n\n      if (codePoint === 58 && !this.passwordTokenSeenFlag) {\n        this.passwordTokenSeenFlag = true;\n        continue;\n      }\n      const encodedCodePoints = percentEncodeChar(codePoint, isUserinfoPercentEncode);\n      if (this.passwordTokenSeenFlag) {\n        this.url.password += encodedCodePoints;\n      } else {\n        this.url.username += encodedCodePoints;\n      }\n    }\n    this.buffer = \"\";\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\n             (isSpecial(this.url) && c === 92)) {\n    if (this.atFlag && this.buffer === \"\") {\n      this.parseError = true;\n      return failure;\n    }\n    this.pointer -= countSymbols(this.buffer) + 1;\n    this.buffer = \"\";\n    this.state = \"host\";\n  } else {\n    this.buffer += cStr;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse hostname\"] =\nURLStateMachine.prototype[\"parse host\"] = function parseHostName(c, cStr) {\n  if (this.stateOverride && this.url.scheme === \"file\") {\n    --this.pointer;\n    this.state = \"file host\";\n  } else if (c === 58 && !this.arrFlag) {\n    if (this.buffer === \"\") {\n      this.parseError = true;\n      return failure;\n    }\n\n    const host = parseHost(this.buffer, isNotSpecial(this.url));\n    if (host === failure) {\n      return failure;\n    }\n\n    this.url.host = host;\n    this.buffer = \"\";\n    this.state = \"port\";\n    if (this.stateOverride === \"hostname\") {\n      return false;\n    }\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\n             (isSpecial(this.url) && c === 92)) {\n    --this.pointer;\n    if (isSpecial(this.url) && this.buffer === \"\") {\n      this.parseError = true;\n      return failure;\n    } else if (this.stateOverride && this.buffer === \"\" &&\n               (includesCredentials(this.url) || this.url.port !== null)) {\n      this.parseError = true;\n      return false;\n    }\n\n    const host = parseHost(this.buffer, isNotSpecial(this.url));\n    if (host === failure) {\n      return failure;\n    }\n\n    this.url.host = host;\n    this.buffer = \"\";\n    this.state = \"path start\";\n    if (this.stateOverride) {\n      return false;\n    }\n  } else {\n    if (c === 91) {\n      this.arrFlag = true;\n    } else if (c === 93) {\n      this.arrFlag = false;\n    }\n    this.buffer += cStr;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse port\"] = function parsePort(c, cStr) {\n  if (infra.isASCIIDigit(c)) {\n    this.buffer += cStr;\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\n             (isSpecial(this.url) && c === 92) ||\n             this.stateOverride) {\n    if (this.buffer !== \"\") {\n      const port = parseInt(this.buffer);\n      if (port > Math.pow(2, 16) - 1) {\n        this.parseError = true;\n        return failure;\n      }\n      this.url.port = port === defaultPort(this.url.scheme) ? null : port;\n      this.buffer = \"\";\n    }\n    if (this.stateOverride) {\n      return false;\n    }\n    this.state = \"path start\";\n    --this.pointer;\n  } else {\n    this.parseError = true;\n    return failure;\n  }\n\n  return true;\n};\n\nconst fileOtherwiseCodePoints = new Set([47, 92, 63, 35]);\n\nfunction startsWithWindowsDriveLetter(input, pointer) {\n  const length = input.length - pointer;\n  return length >= 2 &&\n    isWindowsDriveLetterCodePoints(input[pointer], input[pointer + 1]) &&\n    (length === 2 || fileOtherwiseCodePoints.has(input[pointer + 2]));\n}\n\nURLStateMachine.prototype[\"parse file\"] = function parseFile(c) {\n  this.url.scheme = \"file\";\n\n  if (c === 47 || c === 92) {\n    if (c === 92) {\n      this.parseError = true;\n    }\n    this.state = \"file slash\";\n  } else if (this.base !== null && this.base.scheme === \"file\") {\n    if (isNaN(c)) {\n      this.url.host = this.base.host;\n      this.url.path = this.base.path.slice();\n      this.url.query = this.base.query;\n    } else if (c === 63) {\n      this.url.host = this.base.host;\n      this.url.path = this.base.path.slice();\n      this.url.query = \"\";\n      this.state = \"query\";\n    } else if (c === 35) {\n      this.url.host = this.base.host;\n      this.url.path = this.base.path.slice();\n      this.url.query = this.base.query;\n      this.url.fragment = \"\";\n      this.state = \"fragment\";\n    } else {\n      if (!startsWithWindowsDriveLetter(this.input, this.pointer)) {\n        this.url.host = this.base.host;\n        this.url.path = this.base.path.slice();\n        shortenPath(this.url);\n      } else {\n        this.parseError = true;\n      }\n\n      this.state = \"path\";\n      --this.pointer;\n    }\n  } else {\n    this.state = \"path\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse file slash\"] = function parseFileSlash(c) {\n  if (c === 47 || c === 92) {\n    if (c === 92) {\n      this.parseError = true;\n    }\n    this.state = \"file host\";\n  } else {\n    if (this.base !== null && this.base.scheme === \"file\" &&\n        !startsWithWindowsDriveLetter(this.input, this.pointer)) {\n      if (isNormalizedWindowsDriveLetterString(this.base.path[0])) {\n        this.url.path.push(this.base.path[0]);\n      } else {\n        this.url.host = this.base.host;\n      }\n    }\n    this.state = \"path\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse file host\"] = function parseFileHost(c, cStr) {\n  if (isNaN(c) || c === 47 || c === 92 || c === 63 || c === 35) {\n    --this.pointer;\n    if (!this.stateOverride && isWindowsDriveLetterString(this.buffer)) {\n      this.parseError = true;\n      this.state = \"path\";\n    } else if (this.buffer === \"\") {\n      this.url.host = \"\";\n      if (this.stateOverride) {\n        return false;\n      }\n      this.state = \"path start\";\n    } else {\n      let host = parseHost(this.buffer, isNotSpecial(this.url));\n      if (host === failure) {\n        return failure;\n      }\n      if (host === \"localhost\") {\n        host = \"\";\n      }\n      this.url.host = host;\n\n      if (this.stateOverride) {\n        return false;\n      }\n\n      this.buffer = \"\";\n      this.state = \"path start\";\n    }\n  } else {\n    this.buffer += cStr;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse path start\"] = function parsePathStart(c) {\n  if (isSpecial(this.url)) {\n    if (c === 92) {\n      this.parseError = true;\n    }\n    this.state = \"path\";\n\n    if (c !== 47 && c !== 92) {\n      --this.pointer;\n    }\n  } else if (!this.stateOverride && c === 63) {\n    this.url.query = \"\";\n    this.state = \"query\";\n  } else if (!this.stateOverride && c === 35) {\n    this.url.fragment = \"\";\n    this.state = \"fragment\";\n  } else if (c !== undefined) {\n    this.state = \"path\";\n    if (c !== 47) {\n      --this.pointer;\n    }\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse path\"] = function parsePath(c) {\n  if (isNaN(c) || c === 47 || (isSpecial(this.url) && c === 92) ||\n      (!this.stateOverride && (c === 63 || c === 35))) {\n    if (isSpecial(this.url) && c === 92) {\n      this.parseError = true;\n    }\n\n    if (isDoubleDot(this.buffer)) {\n      shortenPath(this.url);\n      if (c !== 47 && !(isSpecial(this.url) && c === 92)) {\n        this.url.path.push(\"\");\n      }\n    } else if (isSingleDot(this.buffer) && c !== 47 &&\n               !(isSpecial(this.url) && c === 92)) {\n      this.url.path.push(\"\");\n    } else if (!isSingleDot(this.buffer)) {\n      if (this.url.scheme === \"file\" && this.url.path.length === 0 && isWindowsDriveLetterString(this.buffer)) {\n        if (this.url.host !== \"\" && this.url.host !== null) {\n          this.parseError = true;\n          this.url.host = \"\";\n        }\n        this.buffer = this.buffer[0] + \":\";\n      }\n      this.url.path.push(this.buffer);\n    }\n    this.buffer = \"\";\n    if (this.url.scheme === \"file\" && (c === undefined || c === 63 || c === 35)) {\n      while (this.url.path.length > 1 && this.url.path[0] === \"\") {\n        this.parseError = true;\n        this.url.path.shift();\n      }\n    }\n    if (c === 63) {\n      this.url.query = \"\";\n      this.state = \"query\";\n    }\n    if (c === 35) {\n      this.url.fragment = \"\";\n      this.state = \"fragment\";\n    }\n  } else {\n    // TODO: If c is not a URL code point and not \"%\", parse error.\n\n    if (c === 37 &&\n      (!infra.isASCIIHex(this.input[this.pointer + 1]) ||\n        !infra.isASCIIHex(this.input[this.pointer + 2]))) {\n      this.parseError = true;\n    }\n\n    this.buffer += percentEncodeChar(c, isPathPercentEncode);\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse cannot-be-a-base-URL path\"] = function parseCannotBeABaseURLPath(c) {\n  if (c === 63) {\n    this.url.query = \"\";\n    this.state = \"query\";\n  } else if (c === 35) {\n    this.url.fragment = \"\";\n    this.state = \"fragment\";\n  } else {\n    // TODO: Add: not a URL code point\n    if (!isNaN(c) && c !== 37) {\n      this.parseError = true;\n    }\n\n    if (c === 37 &&\n        (!infra.isASCIIHex(this.input[this.pointer + 1]) ||\n         !infra.isASCIIHex(this.input[this.pointer + 2]))) {\n      this.parseError = true;\n    }\n\n    if (!isNaN(c)) {\n      this.url.path[0] = this.url.path[0] + percentEncodeChar(c, isC0ControlPercentEncode);\n    }\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse query\"] = function parseQuery(c, cStr) {\n  if (isNaN(c) || (!this.stateOverride && c === 35)) {\n    if (!isSpecial(this.url) || this.url.scheme === \"ws\" || this.url.scheme === \"wss\") {\n      this.encodingOverride = \"utf-8\";\n    }\n\n    const buffer = Buffer.from(this.buffer); // TODO: Use encoding override instead\n    for (let i = 0; i < buffer.length; ++i) {\n      if (buffer[i] < 0x21 ||\n          buffer[i] > 0x7E ||\n          buffer[i] === 0x22 || buffer[i] === 0x23 || buffer[i] === 0x3C || buffer[i] === 0x3E ||\n          (buffer[i] === 0x27 && isSpecial(this.url))) {\n        this.url.query += percentEncode(buffer[i]);\n      } else {\n        this.url.query += String.fromCodePoint(buffer[i]);\n      }\n    }\n\n    this.buffer = \"\";\n    if (c === 35) {\n      this.url.fragment = \"\";\n      this.state = \"fragment\";\n    }\n  } else {\n    // TODO: If c is not a URL code point and not \"%\", parse error.\n    if (c === 37 &&\n      (!infra.isASCIIHex(this.input[this.pointer + 1]) ||\n        !infra.isASCIIHex(this.input[this.pointer + 2]))) {\n      this.parseError = true;\n    }\n\n    this.buffer += cStr;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse fragment\"] = function parseFragment(c) {\n  if (isNaN(c)) { // do nothing\n  } else if (c === 0x0) {\n    this.parseError = true;\n  } else {\n    // TODO: If c is not a URL code point and not \"%\", parse error.\n    if (c === 37 &&\n      (!infra.isASCIIHex(this.input[this.pointer + 1]) ||\n        !infra.isASCIIHex(this.input[this.pointer + 2]))) {\n      this.parseError = true;\n    }\n\n    this.url.fragment += percentEncodeChar(c, isFragmentPercentEncode);\n  }\n\n  return true;\n};\n\nfunction serializeURL(url, excludeFragment) {\n  let output = url.scheme + \":\";\n  if (url.host !== null) {\n    output += \"//\";\n\n    if (url.username !== \"\" || url.password !== \"\") {\n      output += url.username;\n      if (url.password !== \"\") {\n        output += \":\" + url.password;\n      }\n      output += \"@\";\n    }\n\n    output += serializeHost(url.host);\n\n    if (url.port !== null) {\n      output += \":\" + url.port;\n    }\n  } else if (url.host === null && url.scheme === \"file\") {\n    output += \"//\";\n  }\n\n  if (url.cannotBeABaseURL) {\n    output += url.path[0];\n  } else {\n    for (const string of url.path) {\n      output += \"/\" + string;\n    }\n  }\n\n  if (url.query !== null) {\n    output += \"?\" + url.query;\n  }\n\n  if (!excludeFragment && url.fragment !== null) {\n    output += \"#\" + url.fragment;\n  }\n\n  return output;\n}\n\nfunction serializeOrigin(tuple) {\n  let result = tuple.scheme + \"://\";\n  result += serializeHost(tuple.host);\n\n  if (tuple.port !== null) {\n    result += \":\" + tuple.port;\n  }\n\n  return result;\n}\n\nmodule.exports.serializeURL = serializeURL;\n\nmodule.exports.serializeURLOrigin = function (url) {\n  // https://url.spec.whatwg.org/#concept-url-origin\n  switch (url.scheme) {\n    case \"blob\":\n      try {\n        return module.exports.serializeURLOrigin(module.exports.parseURL(url.path[0]));\n      } catch (e) {\n        // serializing an opaque origin returns \"null\"\n        return \"null\";\n      }\n    case \"ftp\":\n    case \"gopher\":\n    case \"http\":\n    case \"https\":\n    case \"ws\":\n    case \"wss\":\n      return serializeOrigin({\n        scheme: url.scheme,\n        host: url.host,\n        port: url.port\n      });\n    case \"file\":\n      // spec says \"exercise to the reader\", chrome says \"file://\"\n      return \"file://\";\n    default:\n      // serializing an opaque origin returns \"null\"\n      return \"null\";\n  }\n};\n\nmodule.exports.basicURLParse = function (input, options) {\n  if (options === undefined) {\n    options = {};\n  }\n\n  const usm = new URLStateMachine(input, options.baseURL, options.encodingOverride, options.url, options.stateOverride);\n  if (usm.failure) {\n    return null;\n  }\n\n  return usm.url;\n};\n\nmodule.exports.setTheUsername = function (url, username) {\n  url.username = \"\";\n  const decoded = punycode.ucs2.decode(username);\n  for (let i = 0; i < decoded.length; ++i) {\n    url.username += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\n  }\n};\n\nmodule.exports.setThePassword = function (url, password) {\n  url.password = \"\";\n  const decoded = punycode.ucs2.decode(password);\n  for (let i = 0; i < decoded.length; ++i) {\n    url.password += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\n  }\n};\n\nmodule.exports.serializeHost = serializeHost;\n\nmodule.exports.cannotHaveAUsernamePasswordPort = cannotHaveAUsernamePasswordPort;\n\nmodule.exports.serializeInteger = function (integer) {\n  return String(integer);\n};\n\nmodule.exports.parseURL = function (input, options) {\n  if (options === undefined) {\n    options = {};\n  }\n\n  // We don't handle blobs, so this just delegates:\n  return module.exports.basicURLParse(input, { baseURL: options.baseURL, encodingOverride: options.encodingOverride });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}