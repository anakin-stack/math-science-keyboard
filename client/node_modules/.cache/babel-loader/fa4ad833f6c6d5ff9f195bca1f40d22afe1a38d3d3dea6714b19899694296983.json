{"ast":null,"code":"\"use strict\";\n\nconst {\n  domSymbolTree\n} = require(\"../helpers/internal-constants\");\nconst {\n  SVG_NS\n} = require(\"../helpers/namespaces\");\nconst {\n  mixin\n} = require(\"../../utils\");\nconst SVGAnimatedString = require(\"../generated/SVGAnimatedString\");\nconst ElementImpl = require(\"./Element-impl\").implementation;\nconst ElementCSSInlineStyleImpl = require(\"./ElementCSSInlineStyle-impl\").implementation;\nconst GlobalEventHandlersImpl = require(\"./GlobalEventHandlers-impl\").implementation;\nconst HTMLAndSVGElementSharedImpl = require(\"./HTMLAndSVGElementShared-impl\").implementation;\nclass SVGElementImpl extends ElementImpl {\n  constructor(args, privateData) {\n    super(args, privateData);\n    this._initHTMLAndSVGElement();\n    this._initElementCSSInlineStyle();\n    this._initGlobalEvents();\n  }\n  get className() {\n    return SVGAnimatedString.createImpl([], {\n      element: this,\n      attribute: \"class\"\n    });\n  }\n  get ownerSVGElement() {\n    let e = domSymbolTree.parent(this);\n    while (e && e.namespaceURI === SVG_NS) {\n      if (e.localName === \"svg\") {\n        return e;\n      }\n      e = domSymbolTree.parent(e);\n    }\n    return null;\n  }\n  get viewportElement() {\n    // TODO: <symbol>/<use> may make this different from ownerSVGElement.\n    return this.ownerSVGElement;\n  }\n}\nSVGElementImpl.attributeRegistry = new Map();\nmixin(SVGElementImpl.prototype, ElementCSSInlineStyleImpl.prototype);\nmixin(SVGElementImpl.prototype, GlobalEventHandlersImpl.prototype);\nmixin(SVGElementImpl.prototype, HTMLAndSVGElementSharedImpl.prototype);\nexports.implementation = SVGElementImpl;","map":{"version":3,"names":["domSymbolTree","require","SVG_NS","mixin","SVGAnimatedString","ElementImpl","implementation","ElementCSSInlineStyleImpl","GlobalEventHandlersImpl","HTMLAndSVGElementSharedImpl","SVGElementImpl","constructor","args","privateData","_initHTMLAndSVGElement","_initElementCSSInlineStyle","_initGlobalEvents","className","createImpl","element","attribute","ownerSVGElement","e","parent","namespaceURI","localName","viewportElement","attributeRegistry","Map","prototype","exports"],"sources":["G:/scientificKeyboard/keyboard/node_modules/mathjax-node/node_modules/jsdom/lib/jsdom/living/nodes/SVGElement-impl.js"],"sourcesContent":["\"use strict\";\n\nconst { domSymbolTree } = require(\"../helpers/internal-constants\");\nconst { SVG_NS } = require(\"../helpers/namespaces\");\nconst { mixin } = require(\"../../utils\");\nconst SVGAnimatedString = require(\"../generated/SVGAnimatedString\");\nconst ElementImpl = require(\"./Element-impl\").implementation;\nconst ElementCSSInlineStyleImpl = require(\"./ElementCSSInlineStyle-impl\").implementation;\nconst GlobalEventHandlersImpl = require(\"./GlobalEventHandlers-impl\").implementation;\nconst HTMLAndSVGElementSharedImpl = require(\"./HTMLAndSVGElementShared-impl\").implementation;\n\nclass SVGElementImpl extends ElementImpl {\n  constructor(args, privateData) {\n    super(args, privateData);\n    this._initHTMLAndSVGElement();\n    this._initElementCSSInlineStyle();\n    this._initGlobalEvents();\n  }\n\n  get className() {\n    return SVGAnimatedString.createImpl([], {\n      element: this,\n      attribute: \"class\"\n    });\n  }\n\n  get ownerSVGElement() {\n    let e = domSymbolTree.parent(this);\n    while (e && e.namespaceURI === SVG_NS) {\n      if (e.localName === \"svg\") {\n        return e;\n      }\n      e = domSymbolTree.parent(e);\n    }\n\n    return null;\n  }\n\n  get viewportElement() {\n    // TODO: <symbol>/<use> may make this different from ownerSVGElement.\n    return this.ownerSVGElement;\n  }\n}\n\nSVGElementImpl.attributeRegistry = new Map();\n\nmixin(SVGElementImpl.prototype, ElementCSSInlineStyleImpl.prototype);\nmixin(SVGElementImpl.prototype, GlobalEventHandlersImpl.prototype);\nmixin(SVGElementImpl.prototype, HTMLAndSVGElementSharedImpl.prototype);\n\nexports.implementation = SVGElementImpl;\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAM;EAAEA;AAAc,CAAC,GAAGC,OAAO,CAAC,+BAA+B,CAAC;AAClE,MAAM;EAAEC;AAAO,CAAC,GAAGD,OAAO,CAAC,uBAAuB,CAAC;AACnD,MAAM;EAAEE;AAAM,CAAC,GAAGF,OAAO,CAAC,aAAa,CAAC;AACxC,MAAMG,iBAAiB,GAAGH,OAAO,CAAC,gCAAgC,CAAC;AACnE,MAAMI,WAAW,GAAGJ,OAAO,CAAC,gBAAgB,CAAC,CAACK,cAAc;AAC5D,MAAMC,yBAAyB,GAAGN,OAAO,CAAC,8BAA8B,CAAC,CAACK,cAAc;AACxF,MAAME,uBAAuB,GAAGP,OAAO,CAAC,4BAA4B,CAAC,CAACK,cAAc;AACpF,MAAMG,2BAA2B,GAAGR,OAAO,CAAC,gCAAgC,CAAC,CAACK,cAAc;AAE5F,MAAMI,cAAc,SAASL,WAAW,CAAC;EACvCM,WAAWA,CAACC,IAAI,EAAEC,WAAW,EAAE;IAC7B,KAAK,CAACD,IAAI,EAAEC,WAAW,CAAC;IACxB,IAAI,CAACC,sBAAsB,CAAC,CAAC;IAC7B,IAAI,CAACC,0BAA0B,CAAC,CAAC;IACjC,IAAI,CAACC,iBAAiB,CAAC,CAAC;EAC1B;EAEA,IAAIC,SAASA,CAAA,EAAG;IACd,OAAOb,iBAAiB,CAACc,UAAU,CAAC,EAAE,EAAE;MACtCC,OAAO,EAAE,IAAI;MACbC,SAAS,EAAE;IACb,CAAC,CAAC;EACJ;EAEA,IAAIC,eAAeA,CAAA,EAAG;IACpB,IAAIC,CAAC,GAAGtB,aAAa,CAACuB,MAAM,CAAC,IAAI,CAAC;IAClC,OAAOD,CAAC,IAAIA,CAAC,CAACE,YAAY,KAAKtB,MAAM,EAAE;MACrC,IAAIoB,CAAC,CAACG,SAAS,KAAK,KAAK,EAAE;QACzB,OAAOH,CAAC;MACV;MACAA,CAAC,GAAGtB,aAAa,CAACuB,MAAM,CAACD,CAAC,CAAC;IAC7B;IAEA,OAAO,IAAI;EACb;EAEA,IAAII,eAAeA,CAAA,EAAG;IACpB;IACA,OAAO,IAAI,CAACL,eAAe;EAC7B;AACF;AAEAX,cAAc,CAACiB,iBAAiB,GAAG,IAAIC,GAAG,CAAC,CAAC;AAE5CzB,KAAK,CAACO,cAAc,CAACmB,SAAS,EAAEtB,yBAAyB,CAACsB,SAAS,CAAC;AACpE1B,KAAK,CAACO,cAAc,CAACmB,SAAS,EAAErB,uBAAuB,CAACqB,SAAS,CAAC;AAClE1B,KAAK,CAACO,cAAc,CAACmB,SAAS,EAAEpB,2BAA2B,CAACoB,SAAS,CAAC;AAEtEC,OAAO,CAACxB,cAAc,GAAGI,cAAc"},"metadata":{},"sourceType":"script","externalDependencies":[]}