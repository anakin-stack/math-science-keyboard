{"ast":null,"code":"\"use strict\";\n\nconst idlUtils = require(\"../generated/utils\");\nconst NodeList = require(\"../generated/NodeList\");\nconst HTMLCollection = require(\"../generated/HTMLCollection\");\nconst {\n  addNwsapi\n} = require(\"../helpers/selectors\");\nconst {\n  domSymbolTree\n} = require(\"../helpers/internal-constants\");\nconst NODE_TYPE = require(\"../node-type\");\nconst {\n  memoizeQuery\n} = require(\"../../utils\");\nconst {\n  convertNodesIntoNode\n} = require(\"../node\");\nclass ParentNodeImpl {\n  get children() {\n    if (!this._childrenList) {\n      this._childrenList = HTMLCollection.createImpl([], {\n        element: this,\n        query: () => domSymbolTree.childrenToArray(this, {\n          filter: node => node.nodeType === NODE_TYPE.ELEMENT_NODE\n        })\n      });\n    } else {\n      this._childrenList._update();\n    }\n    return this._childrenList;\n  }\n  get firstElementChild() {\n    for (const child of domSymbolTree.childrenIterator(this)) {\n      if (child.nodeType === NODE_TYPE.ELEMENT_NODE) {\n        return child;\n      }\n    }\n    return null;\n  }\n  get lastElementChild() {\n    for (const child of domSymbolTree.childrenIterator(this, {\n      reverse: true\n    })) {\n      if (child.nodeType === NODE_TYPE.ELEMENT_NODE) {\n        return child;\n      }\n    }\n    return null;\n  }\n  get childElementCount() {\n    return this.children.length;\n  }\n  append() {\n    for (var _len = arguments.length, nodes = new Array(_len), _key = 0; _key < _len; _key++) {\n      nodes[_key] = arguments[_key];\n    }\n    this.appendChild(convertNodesIntoNode(this._ownerDocument, nodes));\n  }\n  prepend() {\n    for (var _len2 = arguments.length, nodes = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      nodes[_key2] = arguments[_key2];\n    }\n    this.insertBefore(convertNodesIntoNode(this._ownerDocument, nodes), this.firstChild);\n  }\n}\nParentNodeImpl.prototype.querySelector = memoizeQuery(function (selectors) {\n  if (shouldAlwaysSelectNothing(this)) {\n    return null;\n  }\n  const matcher = addNwsapi(this);\n  return idlUtils.implForWrapper(matcher.first(selectors, idlUtils.wrapperForImpl(this)));\n});\n\n// WARNING: this returns a NodeList containing IDL wrappers instead of impls\nParentNodeImpl.prototype.querySelectorAll = memoizeQuery(function (selectors) {\n  if (shouldAlwaysSelectNothing(this)) {\n    return NodeList.create([], {\n      nodes: []\n    });\n  }\n  const matcher = addNwsapi(this);\n  const list = matcher.select(selectors, idlUtils.wrapperForImpl(this));\n  return NodeList.create([], {\n    nodes: list.map(n => idlUtils.tryImplForWrapper(n))\n  });\n});\nfunction shouldAlwaysSelectNothing(elImpl) {\n  // The latter clause is true during initialization.\n  return !domSymbolTree.hasChildren(elImpl) || elImpl === elImpl._ownerDocument && !elImpl.documentElement;\n}\nmodule.exports = {\n  implementation: ParentNodeImpl\n};","map":{"version":3,"names":["idlUtils","require","NodeList","HTMLCollection","addNwsapi","domSymbolTree","NODE_TYPE","memoizeQuery","convertNodesIntoNode","ParentNodeImpl","children","_childrenList","createImpl","element","query","childrenToArray","filter","node","nodeType","ELEMENT_NODE","_update","firstElementChild","child","childrenIterator","lastElementChild","reverse","childElementCount","length","append","_len","arguments","nodes","Array","_key","appendChild","_ownerDocument","prepend","_len2","_key2","insertBefore","firstChild","prototype","querySelector","selectors","shouldAlwaysSelectNothing","matcher","implForWrapper","first","wrapperForImpl","querySelectorAll","create","list","select","map","n","tryImplForWrapper","elImpl","hasChildren","documentElement","module","exports","implementation"],"sources":["G:/scientificKeyboard/keyboard/node_modules/mathjax-node/node_modules/jsdom/lib/jsdom/living/nodes/ParentNode-impl.js"],"sourcesContent":["\"use strict\";\n\nconst idlUtils = require(\"../generated/utils\");\nconst NodeList = require(\"../generated/NodeList\");\nconst HTMLCollection = require(\"../generated/HTMLCollection\");\nconst { addNwsapi } = require(\"../helpers/selectors\");\nconst { domSymbolTree } = require(\"../helpers/internal-constants\");\nconst NODE_TYPE = require(\"../node-type\");\nconst { memoizeQuery } = require(\"../../utils\");\nconst { convertNodesIntoNode } = require(\"../node\");\n\nclass ParentNodeImpl {\n  get children() {\n    if (!this._childrenList) {\n      this._childrenList = HTMLCollection.createImpl([], {\n        element: this,\n        query: () => domSymbolTree.childrenToArray(this, {\n          filter: node => node.nodeType === NODE_TYPE.ELEMENT_NODE\n        })\n      });\n    } else {\n      this._childrenList._update();\n    }\n    return this._childrenList;\n  }\n\n  get firstElementChild() {\n    for (const child of domSymbolTree.childrenIterator(this)) {\n      if (child.nodeType === NODE_TYPE.ELEMENT_NODE) {\n        return child;\n      }\n    }\n\n    return null;\n  }\n\n  get lastElementChild() {\n    for (const child of domSymbolTree.childrenIterator(this, { reverse: true })) {\n      if (child.nodeType === NODE_TYPE.ELEMENT_NODE) {\n        return child;\n      }\n    }\n\n    return null;\n  }\n\n  get childElementCount() {\n    return this.children.length;\n  }\n\n  append(...nodes) {\n    this.appendChild(convertNodesIntoNode(this._ownerDocument, nodes));\n  }\n\n  prepend(...nodes) {\n    this.insertBefore(convertNodesIntoNode(this._ownerDocument, nodes), this.firstChild);\n  }\n}\n\nParentNodeImpl.prototype.querySelector = memoizeQuery(function (selectors) {\n  if (shouldAlwaysSelectNothing(this)) {\n    return null;\n  }\n  const matcher = addNwsapi(this);\n  return idlUtils.implForWrapper(matcher.first(selectors, idlUtils.wrapperForImpl(this)));\n});\n\n// WARNING: this returns a NodeList containing IDL wrappers instead of impls\nParentNodeImpl.prototype.querySelectorAll = memoizeQuery(function (selectors) {\n  if (shouldAlwaysSelectNothing(this)) {\n    return NodeList.create([], { nodes: [] });\n  }\n  const matcher = addNwsapi(this);\n  const list = matcher.select(selectors, idlUtils.wrapperForImpl(this));\n\n  return NodeList.create([], { nodes: list.map(n => idlUtils.tryImplForWrapper(n)) });\n});\n\nfunction shouldAlwaysSelectNothing(elImpl) {\n  // The latter clause is true during initialization.\n  return !domSymbolTree.hasChildren(elImpl) || (elImpl === elImpl._ownerDocument && !elImpl.documentElement);\n}\n\nmodule.exports = {\n  implementation: ParentNodeImpl\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}