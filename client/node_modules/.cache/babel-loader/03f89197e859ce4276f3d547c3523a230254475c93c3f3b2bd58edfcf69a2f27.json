{"ast":null,"code":"/* eslint-env browser */\n\n\"use strict\";\n\nconst DOMException = require(\"domexception\");\nconst {\n  parseURL,\n  serializeURL,\n  serializeURLOrigin\n} = require(\"whatwg-url\");\nconst {\n  setupForSimpleEventAccessors\n} = require(\"../helpers/create-event-accessor\");\nconst EventTargetImpl = require(\"../events/EventTarget-impl\").implementation;\nconst idlUtils = require(\"../generated/utils\");\nconst Blob = require(\"../generated/Blob\");\nconst CloseEvent = require(\"../generated/CloseEvent\");\nconst Event = require(\"../generated/Event\");\nconst MessageEvent = require(\"../generated/MessageEvent\");\nconst productions = {\n  // https://tools.ietf.org/html/rfc7230#section-3.2.6\n  token: /^[!#$%&'*+\\-.^_`|~\\dA-Za-z]+$/\n};\n\n// https://tools.ietf.org/html/rfc6455#section-4.3\n// See Sec-WebSocket-Protocol-Client, which is for the syntax of an entire header value. This function checks if a\n// single header conforms to the rules.\nfunction verifySecWebSocketProtocol(str) {\n  return productions.token.test(str);\n}\nconst openSockets = new WeakMap();\nclass WebSocketImpl extends EventTargetImpl {\n  constructor(constructorArgs, privateData) {\n    super([], privateData);\n    const {\n      window\n    } = privateData;\n    this._ownerDocument = idlUtils.implForWrapper(window._document);\n    const url = constructorArgs[0];\n    let protocols = constructorArgs[1] !== undefined ? constructorArgs[1] : [];\n    const urlRecord = parseURL(url);\n    if (urlRecord === null) {\n      throw new DOMException(`The URL '${url}' is invalid.`, \"SyntaxError\");\n    }\n    if (urlRecord.scheme !== \"ws\" && urlRecord.scheme !== \"wss\") {\n      throw new DOMException(`The URL's scheme must be either 'ws' or 'wss'. '${urlRecord.scheme}' is not allowed.`, \"SyntaxError\");\n    }\n    if (urlRecord.fragment !== null) {\n      throw new DOMException(`The URL contains a fragment identifier ('${urlRecord.fragment}'). Fragment identifiers ` + \"are not allowed in WebSocket URLs.\", \"SyntaxError\");\n    }\n    if (typeof protocols === \"string\") {\n      protocols = [protocols];\n    }\n    const protocolSet = new Set();\n    for (const protocol of protocols) {\n      if (!verifySecWebSocketProtocol(protocol)) {\n        throw new DOMException(`The subprotocol '${protocol}' is invalid.`, \"SyntaxError\");\n      }\n      const lowered = protocol.toLowerCase();\n      if (protocolSet.has(lowered)) {\n        throw new DOMException(`The subprotocol '${protocol}' is duplicated.`, \"SyntaxError\");\n      }\n      protocolSet.add(lowered);\n    }\n    this._urlRecord = urlRecord;\n    this.url = serializeURL(urlRecord);\n    this._ws = new WebSocket(this.url, protocols);\n    this._ws.onopen = () => {\n      this._dispatch(Event.createImpl([\"open\"], {\n        isTrusted: true\n      }));\n    };\n    this._ws.onerror = () => {\n      this._dispatch(Event.createImpl([\"error\"], {\n        isTrusted: true\n      }));\n    };\n    this._ws.onclose = event => {\n      this._dispatch(CloseEvent.createImpl([\"close\", {\n        wasClean: event.wasClean,\n        code: event.code,\n        reason: event.reason\n      }], {\n        isTrusted: true\n      }));\n    };\n    this._ws.onmessage = event => {\n      this._dispatch(MessageEvent.createImpl([\"message\", {\n        data: event.data,\n        origin: serializeURLOrigin(this._urlRecord)\n      }], {\n        isTrusted: true\n      }));\n    };\n    let openSocketsForWindow = openSockets.get(window._globalProxy);\n    if (openSocketsForWindow === undefined) {\n      openSocketsForWindow = new Set();\n      openSockets.set(window._globalProxy, openSocketsForWindow);\n    }\n    openSocketsForWindow.add(this);\n  }\n\n  // https://html.spec.whatwg.org/multipage/web-sockets.html#make-disappear\n  _makeDisappear() {\n    this._eventListeners = Object.create(null);\n    this._ws.close(1001);\n  }\n  static cleanUpWindow(window) {\n    const openSocketsForWindow = openSockets.get(window._globalProxy);\n    if (openSocketsForWindow !== undefined) {\n      for (const ws of openSocketsForWindow) {\n        ws._makeDisappear();\n      }\n    }\n  }\n  get readyState() {\n    return this._ws.readyState;\n  }\n  get bufferedAmount() {\n    return this._ws.bufferedAmount;\n  }\n  get extensions() {\n    return this._ws.extensions;\n  }\n  get protocol() {\n    return this._ws.protocol;\n  }\n  close() {\n    let code = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n    let reason = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n    if (code !== undefined && code !== 1000 && !(code >= 3000 && code <= 4999)) {\n      throw new DOMException(`The code must be either 1000, or between 3000 and 4999. ${code} is neither.`, \"InvalidAccessError\");\n    }\n    if (reason !== undefined && Buffer.byteLength(reason, \"utf8\") > 123) {\n      throw new DOMException(\"The message must not be greater than 123 bytes.\", \"SyntaxError\");\n    }\n    return this._ws.close(code, reason);\n  }\n  get binaryType() {\n    return this._ws.binaryType;\n  }\n  set binaryType(val) {\n    this._ws.binaryType = val;\n  }\n  send(data) {\n    if (Blob.isImpl(data)) {\n      data = data._buffer;\n    }\n    this._ws.send(data);\n  }\n}\nsetupForSimpleEventAccessors(WebSocketImpl.prototype, [\"open\", \"message\", \"error\", \"close\"]);\nexports.implementation = WebSocketImpl;","map":{"version":3,"names":["DOMException","require","parseURL","serializeURL","serializeURLOrigin","setupForSimpleEventAccessors","EventTargetImpl","implementation","idlUtils","Blob","CloseEvent","Event","MessageEvent","productions","token","verifySecWebSocketProtocol","str","test","openSockets","WeakMap","WebSocketImpl","constructor","constructorArgs","privateData","window","_ownerDocument","implForWrapper","_document","url","protocols","undefined","urlRecord","scheme","fragment","protocolSet","Set","protocol","lowered","toLowerCase","has","add","_urlRecord","_ws","WebSocket","onopen","_dispatch","createImpl","isTrusted","onerror","onclose","event","wasClean","code","reason","onmessage","data","origin","openSocketsForWindow","get","_globalProxy","set","_makeDisappear","_eventListeners","Object","create","close","cleanUpWindow","ws","readyState","bufferedAmount","extensions","arguments","length","Buffer","byteLength","binaryType","val","send","isImpl","_buffer","prototype","exports"],"sources":["G:/scientificKeyboard/keyboard/node_modules/mathjax-node/node_modules/jsdom/lib/jsdom/living/websockets/WebSocket-impl-browser.js"],"sourcesContent":["/* eslint-env browser */\n\n\"use strict\";\n\nconst DOMException = require(\"domexception\");\nconst { parseURL, serializeURL, serializeURLOrigin } = require(\"whatwg-url\");\n\nconst { setupForSimpleEventAccessors } = require(\"../helpers/create-event-accessor\");\n\nconst EventTargetImpl = require(\"../events/EventTarget-impl\").implementation;\n\nconst idlUtils = require(\"../generated/utils\");\nconst Blob = require(\"../generated/Blob\");\nconst CloseEvent = require(\"../generated/CloseEvent\");\nconst Event = require(\"../generated/Event\");\nconst MessageEvent = require(\"../generated/MessageEvent\");\n\nconst productions = {\n  // https://tools.ietf.org/html/rfc7230#section-3.2.6\n  token: /^[!#$%&'*+\\-.^_`|~\\dA-Za-z]+$/\n};\n\n// https://tools.ietf.org/html/rfc6455#section-4.3\n// See Sec-WebSocket-Protocol-Client, which is for the syntax of an entire header value. This function checks if a\n// single header conforms to the rules.\nfunction verifySecWebSocketProtocol(str) {\n  return productions.token.test(str);\n}\n\nconst openSockets = new WeakMap();\n\nclass WebSocketImpl extends EventTargetImpl {\n  constructor(constructorArgs, privateData) {\n    super([], privateData);\n    const { window } = privateData;\n    this._ownerDocument = idlUtils.implForWrapper(window._document);\n\n    const url = constructorArgs[0];\n    let protocols = constructorArgs[1] !== undefined ? constructorArgs[1] : [];\n\n    const urlRecord = parseURL(url);\n    if (urlRecord === null) {\n      throw new DOMException(`The URL '${url}' is invalid.`, \"SyntaxError\");\n    }\n    if (urlRecord.scheme !== \"ws\" && urlRecord.scheme !== \"wss\") {\n      throw new DOMException(\n        `The URL's scheme must be either 'ws' or 'wss'. '${urlRecord.scheme}' is not allowed.`,\n        \"SyntaxError\"\n      );\n    }\n    if (urlRecord.fragment !== null) {\n      throw new DOMException(`The URL contains a fragment identifier ('${urlRecord.fragment}'). Fragment identifiers ` +\n                             \"are not allowed in WebSocket URLs.\", \"SyntaxError\");\n    }\n\n    if (typeof protocols === \"string\") {\n      protocols = [protocols];\n    }\n    const protocolSet = new Set();\n    for (const protocol of protocols) {\n      if (!verifySecWebSocketProtocol(protocol)) {\n        throw new DOMException(`The subprotocol '${protocol}' is invalid.`, \"SyntaxError\");\n      }\n      const lowered = protocol.toLowerCase();\n      if (protocolSet.has(lowered)) {\n        throw new DOMException(`The subprotocol '${protocol}' is duplicated.`, \"SyntaxError\");\n      }\n      protocolSet.add(lowered);\n    }\n\n    this._urlRecord = urlRecord;\n    this.url = serializeURL(urlRecord);\n\n    this._ws = new WebSocket(this.url, protocols);\n\n    this._ws.onopen = () => {\n      this._dispatch(Event.createImpl([\"open\"], { isTrusted: true }));\n    };\n    this._ws.onerror = () => {\n      this._dispatch(Event.createImpl([\"error\"], { isTrusted: true }));\n    };\n    this._ws.onclose = event => {\n      this._dispatch(CloseEvent.createImpl([\n        \"close\", {\n          wasClean: event.wasClean,\n          code: event.code,\n          reason: event.reason\n        }\n      ], { isTrusted: true }));\n    };\n    this._ws.onmessage = event => {\n      this._dispatch(MessageEvent.createImpl([\n        \"message\", {\n          data: event.data,\n          origin: serializeURLOrigin(this._urlRecord)\n        }\n      ], {\n        isTrusted: true\n      }));\n    };\n\n    let openSocketsForWindow = openSockets.get(window._globalProxy);\n    if (openSocketsForWindow === undefined) {\n      openSocketsForWindow = new Set();\n      openSockets.set(window._globalProxy, openSocketsForWindow);\n    }\n    openSocketsForWindow.add(this);\n  }\n\n  // https://html.spec.whatwg.org/multipage/web-sockets.html#make-disappear\n  _makeDisappear() {\n    this._eventListeners = Object.create(null);\n    this._ws.close(1001);\n  }\n\n  static cleanUpWindow(window) {\n    const openSocketsForWindow = openSockets.get(window._globalProxy);\n    if (openSocketsForWindow !== undefined) {\n      for (const ws of openSocketsForWindow) {\n        ws._makeDisappear();\n      }\n    }\n  }\n\n  get readyState() {\n    return this._ws.readyState;\n  }\n\n  get bufferedAmount() {\n    return this._ws.bufferedAmount;\n  }\n\n  get extensions() {\n    return this._ws.extensions;\n  }\n\n  get protocol() {\n    return this._ws.protocol;\n  }\n\n  close(code = undefined, reason = undefined) {\n    if (code !== undefined && code !== 1000 && !(code >= 3000 && code <= 4999)) {\n      throw new DOMException(\n        `The code must be either 1000, or between 3000 and 4999. ${code} is neither.`,\n        \"InvalidAccessError\"\n      );\n    }\n    if (reason !== undefined && Buffer.byteLength(reason, \"utf8\") > 123) {\n      throw new DOMException(\"The message must not be greater than 123 bytes.\", \"SyntaxError\");\n    }\n    return this._ws.close(code, reason);\n  }\n\n  get binaryType() {\n    return this._ws.binaryType;\n  }\n\n  set binaryType(val) {\n    this._ws.binaryType = val;\n  }\n\n  send(data) {\n    if (Blob.isImpl(data)) {\n      data = data._buffer;\n    }\n    this._ws.send(data);\n  }\n}\n\nsetupForSimpleEventAccessors(WebSocketImpl.prototype, [\"open\", \"message\", \"error\", \"close\"]);\n\nexports.implementation = WebSocketImpl;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}