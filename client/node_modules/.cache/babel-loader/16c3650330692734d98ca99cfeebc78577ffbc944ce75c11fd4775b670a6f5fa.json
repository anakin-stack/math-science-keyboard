{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\nconst isNode = require(\"./Node.js\").is;\nconst impl = utils.implSymbol;\nfunction ChildNode() {\n  throw new TypeError(\"Illegal constructor\");\n}\nObject.defineProperty(ChildNode, \"prototype\", {\n  value: ChildNode.prototype,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\nChildNode.prototype.before = function before() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  const args = [];\n  for (let i = 0; i < arguments.length; i++) {\n    let curArg = arguments[i];\n    if (isNode(curArg)) {\n      curArg = utils.implForWrapper(curArg);\n    } else {\n      curArg = conversions[\"DOMString\"](curArg, {\n        context: \"Failed to execute 'before' on 'ChildNode': parameter \" + (i + 1)\n      });\n    }\n    args.push(curArg);\n  }\n  return this[impl].before(...args);\n};\nChildNode.prototype.after = function after() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  const args = [];\n  for (let i = 0; i < arguments.length; i++) {\n    let curArg = arguments[i];\n    if (isNode(curArg)) {\n      curArg = utils.implForWrapper(curArg);\n    } else {\n      curArg = conversions[\"DOMString\"](curArg, {\n        context: \"Failed to execute 'after' on 'ChildNode': parameter \" + (i + 1)\n      });\n    }\n    args.push(curArg);\n  }\n  return this[impl].after(...args);\n};\nChildNode.prototype.replaceWith = function replaceWith() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  const args = [];\n  for (let i = 0; i < arguments.length; i++) {\n    let curArg = arguments[i];\n    if (isNode(curArg)) {\n      curArg = utils.implForWrapper(curArg);\n    } else {\n      curArg = conversions[\"DOMString\"](curArg, {\n        context: \"Failed to execute 'replaceWith' on 'ChildNode': parameter \" + (i + 1)\n      });\n    }\n    args.push(curArg);\n  }\n  return this[impl].replaceWith(...args);\n};\nChildNode.prototype.remove = function remove() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  return this[impl].remove();\n};\nObject.defineProperty(ChildNode.prototype, Symbol.unscopables, {\n  value: {\n    before: true,\n    after: true,\n    replaceWith: true,\n    remove: true\n  },\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\nObject.defineProperty(ChildNode.prototype, Symbol.toStringTag, {\n  value: \"ChildNode\",\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj) {\n    let {\n      context = \"The provided value\"\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'ChildNode'.`);\n  },\n  create(constructorArgs, privateData) {\n    let obj = Object.create(ChildNode.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(ChildNode.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {},\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: ChildNode,\n  expose: {}\n}; // iface\nmodule.exports = iface;\nconst Impl = require(\"../nodes/ChildNode-impl.js\");","map":{"version":3,"names":["conversions","require","utils","isNode","is","impl","implSymbol","ChildNode","TypeError","Object","defineProperty","value","prototype","writable","enumerable","configurable","before","module","exports","args","i","arguments","length","curArg","implForWrapper","context","push","after","replaceWith","remove","Symbol","unscopables","toStringTag","iface","_mixedIntoPredicates","obj","hasOwn","Impl","implementation","isMixedInto","isImpl","wrapper","wrapperForImpl","convert","undefined","create","constructorArgs","privateData","setup","createImpl","_internalSetup","wrapperSymbol","init","interface","expose"],"sources":["G:/scientificKeyboard/keyboard/node_modules/mathjax-node/node_modules/jsdom/lib/jsdom/living/generated/ChildNode.js"],"sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst isNode = require(\"./Node.js\").is;\nconst impl = utils.implSymbol;\n\nfunction ChildNode() {\n  throw new TypeError(\"Illegal constructor\");\n}\n\nObject.defineProperty(ChildNode, \"prototype\", {\n  value: ChildNode.prototype,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\n\nChildNode.prototype.before = function before() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  const args = [];\n  for (let i = 0; i < arguments.length; i++) {\n    let curArg = arguments[i];\n    if (isNode(curArg)) {\n      curArg = utils.implForWrapper(curArg);\n    } else {\n      curArg = conversions[\"DOMString\"](curArg, {\n        context: \"Failed to execute 'before' on 'ChildNode': parameter \" + (i + 1)\n      });\n    }\n    args.push(curArg);\n  }\n  return this[impl].before(...args);\n};\n\nChildNode.prototype.after = function after() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  const args = [];\n  for (let i = 0; i < arguments.length; i++) {\n    let curArg = arguments[i];\n    if (isNode(curArg)) {\n      curArg = utils.implForWrapper(curArg);\n    } else {\n      curArg = conversions[\"DOMString\"](curArg, {\n        context: \"Failed to execute 'after' on 'ChildNode': parameter \" + (i + 1)\n      });\n    }\n    args.push(curArg);\n  }\n  return this[impl].after(...args);\n};\n\nChildNode.prototype.replaceWith = function replaceWith() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  const args = [];\n  for (let i = 0; i < arguments.length; i++) {\n    let curArg = arguments[i];\n    if (isNode(curArg)) {\n      curArg = utils.implForWrapper(curArg);\n    } else {\n      curArg = conversions[\"DOMString\"](curArg, {\n        context: \"Failed to execute 'replaceWith' on 'ChildNode': parameter \" + (i + 1)\n      });\n    }\n    args.push(curArg);\n  }\n  return this[impl].replaceWith(...args);\n};\n\nChildNode.prototype.remove = function remove() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  return this[impl].remove();\n};\n\nObject.defineProperty(ChildNode.prototype, Symbol.unscopables, {\n  value: {\n    before: true,\n    after: true,\n    replaceWith: true,\n    remove: true\n  },\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\n\nObject.defineProperty(ChildNode.prototype, Symbol.toStringTag, {\n  value: \"ChildNode\",\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\n\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj, { context = \"The provided value\" } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'ChildNode'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(ChildNode.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(ChildNode.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {},\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: ChildNode,\n  expose: {}\n}; // iface\nmodule.exports = iface;\n\nconst Impl = require(\"../nodes/ChildNode-impl.js\");\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,WAAW,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AACjD,MAAMC,KAAK,GAAGD,OAAO,CAAC,YAAY,CAAC;AAEnC,MAAME,MAAM,GAAGF,OAAO,CAAC,WAAW,CAAC,CAACG,EAAE;AACtC,MAAMC,IAAI,GAAGH,KAAK,CAACI,UAAU;AAE7B,SAASC,SAASA,CAAA,EAAG;EACnB,MAAM,IAAIC,SAAS,CAAC,qBAAqB,CAAC;AAC5C;AAEAC,MAAM,CAACC,cAAc,CAACH,SAAS,EAAE,WAAW,EAAE;EAC5CI,KAAK,EAAEJ,SAAS,CAACK,SAAS;EAC1BC,QAAQ,EAAE,KAAK;EACfC,UAAU,EAAE,KAAK;EACjBC,YAAY,EAAE;AAChB,CAAC,CAAC;AAEFR,SAAS,CAACK,SAAS,CAACI,MAAM,GAAG,SAASA,MAAMA,CAAA,EAAG;EAC7C,IAAI,CAAC,IAAI,IAAI,CAACC,MAAM,CAACC,OAAO,CAACd,EAAE,CAAC,IAAI,CAAC,EAAE;IACrC,MAAM,IAAII,SAAS,CAAC,oBAAoB,CAAC;EAC3C;EACA,MAAMW,IAAI,GAAG,EAAE;EACf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,SAAS,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;IACzC,IAAIG,MAAM,GAAGF,SAAS,CAACD,CAAC,CAAC;IACzB,IAAIjB,MAAM,CAACoB,MAAM,CAAC,EAAE;MAClBA,MAAM,GAAGrB,KAAK,CAACsB,cAAc,CAACD,MAAM,CAAC;IACvC,CAAC,MAAM;MACLA,MAAM,GAAGvB,WAAW,CAAC,WAAW,CAAC,CAACuB,MAAM,EAAE;QACxCE,OAAO,EAAE,uDAAuD,IAAIL,CAAC,GAAG,CAAC;MAC3E,CAAC,CAAC;IACJ;IACAD,IAAI,CAACO,IAAI,CAACH,MAAM,CAAC;EACnB;EACA,OAAO,IAAI,CAAClB,IAAI,CAAC,CAACW,MAAM,CAAC,GAAGG,IAAI,CAAC;AACnC,CAAC;AAEDZ,SAAS,CAACK,SAAS,CAACe,KAAK,GAAG,SAASA,KAAKA,CAAA,EAAG;EAC3C,IAAI,CAAC,IAAI,IAAI,CAACV,MAAM,CAACC,OAAO,CAACd,EAAE,CAAC,IAAI,CAAC,EAAE;IACrC,MAAM,IAAII,SAAS,CAAC,oBAAoB,CAAC;EAC3C;EACA,MAAMW,IAAI,GAAG,EAAE;EACf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,SAAS,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;IACzC,IAAIG,MAAM,GAAGF,SAAS,CAACD,CAAC,CAAC;IACzB,IAAIjB,MAAM,CAACoB,MAAM,CAAC,EAAE;MAClBA,MAAM,GAAGrB,KAAK,CAACsB,cAAc,CAACD,MAAM,CAAC;IACvC,CAAC,MAAM;MACLA,MAAM,GAAGvB,WAAW,CAAC,WAAW,CAAC,CAACuB,MAAM,EAAE;QACxCE,OAAO,EAAE,sDAAsD,IAAIL,CAAC,GAAG,CAAC;MAC1E,CAAC,CAAC;IACJ;IACAD,IAAI,CAACO,IAAI,CAACH,MAAM,CAAC;EACnB;EACA,OAAO,IAAI,CAAClB,IAAI,CAAC,CAACsB,KAAK,CAAC,GAAGR,IAAI,CAAC;AAClC,CAAC;AAEDZ,SAAS,CAACK,SAAS,CAACgB,WAAW,GAAG,SAASA,WAAWA,CAAA,EAAG;EACvD,IAAI,CAAC,IAAI,IAAI,CAACX,MAAM,CAACC,OAAO,CAACd,EAAE,CAAC,IAAI,CAAC,EAAE;IACrC,MAAM,IAAII,SAAS,CAAC,oBAAoB,CAAC;EAC3C;EACA,MAAMW,IAAI,GAAG,EAAE;EACf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,SAAS,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;IACzC,IAAIG,MAAM,GAAGF,SAAS,CAACD,CAAC,CAAC;IACzB,IAAIjB,MAAM,CAACoB,MAAM,CAAC,EAAE;MAClBA,MAAM,GAAGrB,KAAK,CAACsB,cAAc,CAACD,MAAM,CAAC;IACvC,CAAC,MAAM;MACLA,MAAM,GAAGvB,WAAW,CAAC,WAAW,CAAC,CAACuB,MAAM,EAAE;QACxCE,OAAO,EAAE,4DAA4D,IAAIL,CAAC,GAAG,CAAC;MAChF,CAAC,CAAC;IACJ;IACAD,IAAI,CAACO,IAAI,CAACH,MAAM,CAAC;EACnB;EACA,OAAO,IAAI,CAAClB,IAAI,CAAC,CAACuB,WAAW,CAAC,GAAGT,IAAI,CAAC;AACxC,CAAC;AAEDZ,SAAS,CAACK,SAAS,CAACiB,MAAM,GAAG,SAASA,MAAMA,CAAA,EAAG;EAC7C,IAAI,CAAC,IAAI,IAAI,CAACZ,MAAM,CAACC,OAAO,CAACd,EAAE,CAAC,IAAI,CAAC,EAAE;IACrC,MAAM,IAAII,SAAS,CAAC,oBAAoB,CAAC;EAC3C;EAEA,OAAO,IAAI,CAACH,IAAI,CAAC,CAACwB,MAAM,CAAC,CAAC;AAC5B,CAAC;AAEDpB,MAAM,CAACC,cAAc,CAACH,SAAS,CAACK,SAAS,EAAEkB,MAAM,CAACC,WAAW,EAAE;EAC7DpB,KAAK,EAAE;IACLK,MAAM,EAAE,IAAI;IACZW,KAAK,EAAE,IAAI;IACXC,WAAW,EAAE,IAAI;IACjBC,MAAM,EAAE;EACV,CAAC;EACDhB,QAAQ,EAAE,KAAK;EACfC,UAAU,EAAE,KAAK;EACjBC,YAAY,EAAE;AAChB,CAAC,CAAC;AAEFN,MAAM,CAACC,cAAc,CAACH,SAAS,CAACK,SAAS,EAAEkB,MAAM,CAACE,WAAW,EAAE;EAC7DrB,KAAK,EAAE,WAAW;EAClBE,QAAQ,EAAE,KAAK;EACfC,UAAU,EAAE,KAAK;EACjBC,YAAY,EAAE;AAChB,CAAC,CAAC;AAEF,MAAMkB,KAAK,GAAG;EACZ;EACA;EACA;EACAC,oBAAoB,EAAE,EAAE;EACxB9B,EAAEA,CAAC+B,GAAG,EAAE;IACN,IAAIA,GAAG,EAAE;MACP,IAAIjC,KAAK,CAACkC,MAAM,CAACD,GAAG,EAAE9B,IAAI,CAAC,IAAI8B,GAAG,CAAC9B,IAAI,CAAC,YAAYgC,IAAI,CAACC,cAAc,EAAE;QACvE,OAAO,IAAI;MACb;MACA,KAAK,MAAMC,WAAW,IAAItB,MAAM,CAACC,OAAO,CAACgB,oBAAoB,EAAE;QAC7D,IAAIK,WAAW,CAACJ,GAAG,CAAC,EAAE;UACpB,OAAO,IAAI;QACb;MACF;IACF;IACA,OAAO,KAAK;EACd,CAAC;EACDK,MAAMA,CAACL,GAAG,EAAE;IACV,IAAIA,GAAG,EAAE;MACP,IAAIA,GAAG,YAAYE,IAAI,CAACC,cAAc,EAAE;QACtC,OAAO,IAAI;MACb;MAEA,MAAMG,OAAO,GAAGvC,KAAK,CAACwC,cAAc,CAACP,GAAG,CAAC;MACzC,KAAK,MAAMI,WAAW,IAAItB,MAAM,CAACC,OAAO,CAACgB,oBAAoB,EAAE;QAC7D,IAAIK,WAAW,CAACE,OAAO,CAAC,EAAE;UACxB,OAAO,IAAI;QACb;MACF;IACF;IACA,OAAO,KAAK;EACd,CAAC;EACDE,OAAOA,CAACR,GAAG,EAA2C;IAAA,IAAzC;MAAEV,OAAO,GAAG;IAAqB,CAAC,GAAAJ,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAuB,SAAA,GAAAvB,SAAA,MAAG,CAAC,CAAC;IAClD,IAAIJ,MAAM,CAACC,OAAO,CAACd,EAAE,CAAC+B,GAAG,CAAC,EAAE;MAC1B,OAAOjC,KAAK,CAACsB,cAAc,CAACW,GAAG,CAAC;IAClC;IACA,MAAM,IAAI3B,SAAS,CAAE,GAAEiB,OAAQ,8BAA6B,CAAC;EAC/D,CAAC;EAEDoB,MAAMA,CAACC,eAAe,EAAEC,WAAW,EAAE;IACnC,IAAIZ,GAAG,GAAG1B,MAAM,CAACoC,MAAM,CAACtC,SAAS,CAACK,SAAS,CAAC;IAC5CuB,GAAG,GAAG,IAAI,CAACa,KAAK,CAACb,GAAG,EAAEW,eAAe,EAAEC,WAAW,CAAC;IACnD,OAAOZ,GAAG;EACZ,CAAC;EACDc,UAAUA,CAACH,eAAe,EAAEC,WAAW,EAAE;IACvC,IAAIZ,GAAG,GAAG1B,MAAM,CAACoC,MAAM,CAACtC,SAAS,CAACK,SAAS,CAAC;IAC5CuB,GAAG,GAAG,IAAI,CAACa,KAAK,CAACb,GAAG,EAAEW,eAAe,EAAEC,WAAW,CAAC;IACnD,OAAO7C,KAAK,CAACsB,cAAc,CAACW,GAAG,CAAC;EAClC,CAAC;EACDe,cAAcA,CAACf,GAAG,EAAE,CAAC,CAAC;EACtBa,KAAKA,CAACb,GAAG,EAAEW,eAAe,EAAEC,WAAW,EAAE;IACvC,IAAI,CAACA,WAAW,EAAEA,WAAW,GAAG,CAAC,CAAC;IAElCA,WAAW,CAACN,OAAO,GAAGN,GAAG;IAEzB,IAAI,CAACe,cAAc,CAACf,GAAG,CAAC;IACxB1B,MAAM,CAACC,cAAc,CAACyB,GAAG,EAAE9B,IAAI,EAAE;MAC/BM,KAAK,EAAE,IAAI0B,IAAI,CAACC,cAAc,CAACQ,eAAe,EAAEC,WAAW,CAAC;MAC5DlC,QAAQ,EAAE,KAAK;MACfC,UAAU,EAAE,KAAK;MACjBC,YAAY,EAAE;IAChB,CAAC,CAAC;IAEFoB,GAAG,CAAC9B,IAAI,CAAC,CAACH,KAAK,CAACiD,aAAa,CAAC,GAAGhB,GAAG;IACpC,IAAIE,IAAI,CAACe,IAAI,EAAE;MACbf,IAAI,CAACe,IAAI,CAACjB,GAAG,CAAC9B,IAAI,CAAC,EAAE0C,WAAW,CAAC;IACnC;IACA,OAAOZ,GAAG;EACZ,CAAC;EACDkB,SAAS,EAAE9C,SAAS;EACpB+C,MAAM,EAAE,CAAC;AACX,CAAC,CAAC,CAAC;AACHrC,MAAM,CAACC,OAAO,GAAGe,KAAK;AAEtB,MAAMI,IAAI,GAAGpC,OAAO,CAAC,4BAA4B,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}