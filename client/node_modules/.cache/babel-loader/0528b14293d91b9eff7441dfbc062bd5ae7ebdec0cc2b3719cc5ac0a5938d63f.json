{"ast":null,"code":"\"use strict\";\n\nconst DOMException = require(\"domexception\");\nconst attrGenerated = require(\"./generated/Attr\");\nconst {\n  asciiLowercase\n} = require(\"./helpers/strings\");\nconst {\n  HTML_NS\n} = require(\"./helpers/namespaces\");\n\n// The following three are for https://dom.spec.whatwg.org/#concept-element-attribute-has. We don't just have a\n// predicate tester since removing that kind of flexibility gives us the potential for better future optimizations.\n\nexports.hasAttribute = function (element, A) {\n  return element._attributeList.includes(A);\n};\nexports.hasAttributeByName = function (element, name) {\n  return element._attributesByNameMap.has(name);\n};\nexports.hasAttributeByNameNS = function (element, namespace, localName) {\n  return element._attributeList.some(attribute => {\n    return attribute._localName === localName && attribute._namespace === namespace;\n  });\n};\nexports.changeAttribute = function (element, attribute, value) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-change\n\n  const oldValue = attribute._value;\n  attribute._value = value;\n\n  // Run jsdom hooks; roughly correspond to spec's \"An attribute is set and an attribute is changed.\"\n  element._attrModified(attribute._qualifiedName, value, oldValue);\n};\nexports.appendAttribute = function (element, attribute) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-append\n\n  const attributeList = element._attributeList;\n\n  // TODO mutation observer stuff\n\n  attributeList.push(attribute);\n  attribute._element = element;\n\n  // Sync name cache\n  const name = attribute._qualifiedName;\n  const cache = element._attributesByNameMap;\n  let entry = cache.get(name);\n  if (!entry) {\n    entry = [];\n    cache.set(name, entry);\n  }\n  entry.push(attribute);\n\n  // Run jsdom hooks; roughly correspond to spec's \"An attribute is set and an attribute is added.\"\n  element._attrModified(name, attribute._value, null);\n};\nexports.removeAttribute = function (element, attribute) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-remove\n\n  const attributeList = element._attributeList;\n\n  // TODO mutation observer stuff\n\n  for (let i = 0; i < attributeList.length; ++i) {\n    if (attributeList[i] === attribute) {\n      attributeList.splice(i, 1);\n      attribute._element = null;\n\n      // Sync name cache\n      const name = attribute._qualifiedName;\n      const cache = element._attributesByNameMap;\n      const entry = cache.get(name);\n      entry.splice(entry.indexOf(attribute), 1);\n      if (entry.length === 0) {\n        cache.delete(name);\n      }\n\n      // Run jsdom hooks; roughly correspond to spec's \"An attribute is removed.\"\n      element._attrModified(name, null, attribute._value);\n      return;\n    }\n  }\n};\nexports.replaceAttribute = function (element, oldAttr, newAttr) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-replace\n\n  const attributeList = element._attributeList;\n\n  // TODO mutation observer stuff\n\n  for (let i = 0; i < attributeList.length; ++i) {\n    if (attributeList[i] === oldAttr) {\n      attributeList.splice(i, 1, newAttr);\n      oldAttr._element = null;\n      newAttr._element = element;\n\n      // Sync name cache\n      const name = newAttr._qualifiedName;\n      const cache = element._attributesByNameMap;\n      let entry = cache.get(name);\n      if (!entry) {\n        entry = [];\n        cache.set(name, entry);\n      }\n      entry.splice(entry.indexOf(oldAttr), 1, newAttr);\n\n      // Run jsdom hooks; roughly correspond to spec's \"An attribute is set and an attribute is changed.\"\n      element._attrModified(name, newAttr._value, oldAttr._value);\n      return;\n    }\n  }\n};\nexports.getAttributeByName = function (element, name) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-get-by-name\n\n  if (element._namespaceURI === HTML_NS && element._ownerDocument._parsingMode === \"html\") {\n    name = asciiLowercase(name);\n  }\n  const cache = element._attributesByNameMap;\n  const entry = cache.get(name);\n  if (!entry) {\n    return null;\n  }\n  return entry[0];\n};\nexports.getAttributeByNameNS = function (element, namespace, localName) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-get-by-namespace\n\n  if (namespace === \"\") {\n    namespace = null;\n  }\n  const attributeList = element._attributeList;\n  for (let i = 0; i < attributeList.length; ++i) {\n    const attr = attributeList[i];\n    if (attr._namespace === namespace && attr._localName === localName) {\n      return attr;\n    }\n  }\n  return null;\n};\n\n// Both of the following functions implement https://dom.spec.whatwg.org/#concept-element-attributes-get-value.\n// Separated them into two to keep symmetry with other functions.\nexports.getAttributeValue = function (element, localName) {\n  const attr = exports.getAttributeByNameNS(element, null, localName);\n  if (!attr) {\n    return \"\";\n  }\n  return attr._value;\n};\nexports.getAttributeValueNS = function (element, namespace, localName) {\n  const attr = exports.getAttributeByNameNS(element, namespace, localName);\n  if (!attr) {\n    return \"\";\n  }\n  return attr._value;\n};\nexports.setAttribute = function (element, attr) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-set\n\n  if (attr._element !== null && attr._element !== element) {\n    throw new DOMException(\"The attribute is in use.\", \"InUseAttributeError\");\n  }\n  const oldAttr = exports.getAttributeByNameNS(element, attr._namespace, attr._localName);\n  if (oldAttr === attr) {\n    return attr;\n  }\n  if (oldAttr !== null) {\n    exports.replaceAttribute(element, oldAttr, attr);\n  } else {\n    exports.appendAttribute(element, attr);\n  }\n  return oldAttr;\n};\nexports.setAttributeValue = function (element, localName, value, prefix, namespace) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-set-value\n\n  if (prefix === undefined) {\n    prefix = null;\n  }\n  if (namespace === undefined) {\n    namespace = null;\n  }\n  const attribute = exports.getAttributeByNameNS(element, namespace, localName);\n  if (attribute === null) {\n    const newAttribute = attrGenerated.createImpl([], {\n      namespace,\n      namespacePrefix: prefix,\n      localName,\n      value\n    });\n    exports.appendAttribute(element, newAttribute);\n    return;\n  }\n  exports.changeAttribute(element, attribute, value);\n};\nexports.setAnExistingAttributeValue = (attribute, value) => {\n  if (attribute._element === null) {\n    attribute._value = value;\n  }\n  exports.changeAttribute(attribute._element, attribute, value);\n};\nexports.removeAttributeByName = function (element, name) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-remove-by-name\n\n  const attr = exports.getAttributeByName(element, name);\n  if (attr !== null) {\n    exports.removeAttribute(element, attr);\n  }\n  return attr;\n};\nexports.removeAttributeByNameNS = function (element, namespace, localName) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-remove-by-namespace\n\n  const attr = exports.getAttributeByNameNS(element, namespace, localName);\n  if (attr !== null) {\n    exports.removeAttribute(element, attr);\n  }\n  return attr;\n};\nexports.copyAttributeList = function (sourceElement, destElement) {\n  // Needed by https://dom.spec.whatwg.org/#concept-node-clone\n\n  for (const sourceAttr of sourceElement._attributeList) {\n    const destAttr = attrGenerated.createImpl([], {\n      namespace: sourceAttr._namespace,\n      namespacePrefix: sourceAttr._namespacePrefix,\n      localName: sourceAttr._localName,\n      value: sourceAttr._value\n    });\n    exports.appendAttribute(destElement, destAttr);\n  }\n};\nexports.attributeListsEqual = function (elementA, elementB) {\n  // Needed by https://dom.spec.whatwg.org/#concept-node-equals\n\n  const listA = elementA._attributeList;\n  const listB = elementB._attributeList;\n  if (listA.length !== listB.length) {\n    return false;\n  }\n  for (let i = 0; i < listA.length; ++i) {\n    const attrA = listA[i];\n    if (!listB.some(attrB => equalsA(attrB))) {\n      return false;\n    }\n    function equalsA(attrB) {\n      return attrA._namespace === attrB._namespace && attrA._localName === attrB._localName && attrA._value === attrB._value;\n    }\n  }\n  return true;\n};\nexports.attributeNames = function (element) {\n  // Needed by https://dom.spec.whatwg.org/#dom-element-getattributenames\n\n  return element._attributeList.map(a => a._qualifiedName);\n};\nexports.hasAttributes = function (element) {\n  // Needed by https://dom.spec.whatwg.org/#dom-element-hasattributes\n\n  return element._attributeList.length > 0;\n};","map":{"version":3,"names":["DOMException","require","attrGenerated","asciiLowercase","HTML_NS","exports","hasAttribute","element","A","_attributeList","includes","hasAttributeByName","name","_attributesByNameMap","has","hasAttributeByNameNS","namespace","localName","some","attribute","_localName","_namespace","changeAttribute","value","oldValue","_value","_attrModified","_qualifiedName","appendAttribute","attributeList","push","_element","cache","entry","get","set","removeAttribute","i","length","splice","indexOf","delete","replaceAttribute","oldAttr","newAttr","getAttributeByName","_namespaceURI","_ownerDocument","_parsingMode","getAttributeByNameNS","attr","getAttributeValue","getAttributeValueNS","setAttribute","setAttributeValue","prefix","undefined","newAttribute","createImpl","namespacePrefix","setAnExistingAttributeValue","removeAttributeByName","removeAttributeByNameNS","copyAttributeList","sourceElement","destElement","sourceAttr","destAttr","_namespacePrefix","attributeListsEqual","elementA","elementB","listA","listB","attrA","attrB","equalsA","attributeNames","map","a","hasAttributes"],"sources":["G:/scientificKeyboard/keyboard/node_modules/mathjax-node/node_modules/jsdom/lib/jsdom/living/attributes.js"],"sourcesContent":["\"use strict\";\nconst DOMException = require(\"domexception\");\nconst attrGenerated = require(\"./generated/Attr\");\nconst { asciiLowercase } = require(\"./helpers/strings\");\nconst { HTML_NS } = require(\"./helpers/namespaces\");\n\n// The following three are for https://dom.spec.whatwg.org/#concept-element-attribute-has. We don't just have a\n// predicate tester since removing that kind of flexibility gives us the potential for better future optimizations.\n\nexports.hasAttribute = function (element, A) {\n  return element._attributeList.includes(A);\n};\n\nexports.hasAttributeByName = function (element, name) {\n  return element._attributesByNameMap.has(name);\n};\n\nexports.hasAttributeByNameNS = function (element, namespace, localName) {\n  return element._attributeList.some(attribute => {\n    return attribute._localName === localName && attribute._namespace === namespace;\n  });\n};\n\nexports.changeAttribute = function (element, attribute, value) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-change\n\n  const oldValue = attribute._value;\n  attribute._value = value;\n\n  // Run jsdom hooks; roughly correspond to spec's \"An attribute is set and an attribute is changed.\"\n  element._attrModified(attribute._qualifiedName, value, oldValue);\n};\n\nexports.appendAttribute = function (element, attribute) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-append\n\n  const attributeList = element._attributeList;\n\n  // TODO mutation observer stuff\n\n  attributeList.push(attribute);\n  attribute._element = element;\n\n  // Sync name cache\n  const name = attribute._qualifiedName;\n  const cache = element._attributesByNameMap;\n  let entry = cache.get(name);\n  if (!entry) {\n    entry = [];\n    cache.set(name, entry);\n  }\n  entry.push(attribute);\n\n  // Run jsdom hooks; roughly correspond to spec's \"An attribute is set and an attribute is added.\"\n  element._attrModified(name, attribute._value, null);\n};\n\nexports.removeAttribute = function (element, attribute) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-remove\n\n  const attributeList = element._attributeList;\n\n  // TODO mutation observer stuff\n\n  for (let i = 0; i < attributeList.length; ++i) {\n    if (attributeList[i] === attribute) {\n      attributeList.splice(i, 1);\n      attribute._element = null;\n\n      // Sync name cache\n      const name = attribute._qualifiedName;\n      const cache = element._attributesByNameMap;\n      const entry = cache.get(name);\n      entry.splice(entry.indexOf(attribute), 1);\n      if (entry.length === 0) {\n        cache.delete(name);\n      }\n\n      // Run jsdom hooks; roughly correspond to spec's \"An attribute is removed.\"\n      element._attrModified(name, null, attribute._value);\n\n      return;\n    }\n  }\n};\n\nexports.replaceAttribute = function (element, oldAttr, newAttr) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-replace\n\n  const attributeList = element._attributeList;\n\n  // TODO mutation observer stuff\n\n  for (let i = 0; i < attributeList.length; ++i) {\n    if (attributeList[i] === oldAttr) {\n      attributeList.splice(i, 1, newAttr);\n      oldAttr._element = null;\n      newAttr._element = element;\n\n      // Sync name cache\n      const name = newAttr._qualifiedName;\n      const cache = element._attributesByNameMap;\n      let entry = cache.get(name);\n      if (!entry) {\n        entry = [];\n        cache.set(name, entry);\n      }\n      entry.splice(entry.indexOf(oldAttr), 1, newAttr);\n\n      // Run jsdom hooks; roughly correspond to spec's \"An attribute is set and an attribute is changed.\"\n      element._attrModified(name, newAttr._value, oldAttr._value);\n\n      return;\n    }\n  }\n};\n\nexports.getAttributeByName = function (element, name) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-get-by-name\n\n  if (element._namespaceURI === HTML_NS &&\n      element._ownerDocument._parsingMode === \"html\") {\n    name = asciiLowercase(name);\n  }\n\n  const cache = element._attributesByNameMap;\n  const entry = cache.get(name);\n  if (!entry) {\n    return null;\n  }\n\n  return entry[0];\n};\n\nexports.getAttributeByNameNS = function (element, namespace, localName) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-get-by-namespace\n\n  if (namespace === \"\") {\n    namespace = null;\n  }\n\n  const attributeList = element._attributeList;\n  for (let i = 0; i < attributeList.length; ++i) {\n    const attr = attributeList[i];\n    if (attr._namespace === namespace && attr._localName === localName) {\n      return attr;\n    }\n  }\n\n  return null;\n};\n\n// Both of the following functions implement https://dom.spec.whatwg.org/#concept-element-attributes-get-value.\n// Separated them into two to keep symmetry with other functions.\nexports.getAttributeValue = function (element, localName) {\n  const attr = exports.getAttributeByNameNS(element, null, localName);\n\n  if (!attr) {\n    return \"\";\n  }\n\n  return attr._value;\n};\n\nexports.getAttributeValueNS = function (element, namespace, localName) {\n  const attr = exports.getAttributeByNameNS(element, namespace, localName);\n\n  if (!attr) {\n    return \"\";\n  }\n\n  return attr._value;\n};\n\nexports.setAttribute = function (element, attr) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-set\n\n  if (attr._element !== null && attr._element !== element) {\n    throw new DOMException(\"The attribute is in use.\", \"InUseAttributeError\");\n  }\n\n  const oldAttr = exports.getAttributeByNameNS(element, attr._namespace, attr._localName);\n  if (oldAttr === attr) {\n    return attr;\n  }\n\n  if (oldAttr !== null) {\n    exports.replaceAttribute(element, oldAttr, attr);\n  } else {\n    exports.appendAttribute(element, attr);\n  }\n\n  return oldAttr;\n};\n\nexports.setAttributeValue = function (element, localName, value, prefix, namespace) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-set-value\n\n  if (prefix === undefined) {\n    prefix = null;\n  }\n  if (namespace === undefined) {\n    namespace = null;\n  }\n\n  const attribute = exports.getAttributeByNameNS(element, namespace, localName);\n  if (attribute === null) {\n    const newAttribute = attrGenerated.createImpl([], { namespace, namespacePrefix: prefix, localName, value });\n    exports.appendAttribute(element, newAttribute);\n    return;\n  }\n\n  exports.changeAttribute(element, attribute, value);\n};\n\nexports.setAnExistingAttributeValue = (attribute, value) => {\n  if (attribute._element === null) {\n    attribute._value = value;\n  }\n\n  exports.changeAttribute(attribute._element, attribute, value);\n};\n\nexports.removeAttributeByName = function (element, name) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-remove-by-name\n\n  const attr = exports.getAttributeByName(element, name);\n\n  if (attr !== null) {\n    exports.removeAttribute(element, attr);\n  }\n\n  return attr;\n};\n\nexports.removeAttributeByNameNS = function (element, namespace, localName) {\n  // https://dom.spec.whatwg.org/#concept-element-attributes-remove-by-namespace\n\n  const attr = exports.getAttributeByNameNS(element, namespace, localName);\n\n  if (attr !== null) {\n    exports.removeAttribute(element, attr);\n  }\n\n  return attr;\n};\n\nexports.copyAttributeList = function (sourceElement, destElement) {\n  // Needed by https://dom.spec.whatwg.org/#concept-node-clone\n\n  for (const sourceAttr of sourceElement._attributeList) {\n    const destAttr = attrGenerated.createImpl([], {\n      namespace: sourceAttr._namespace,\n      namespacePrefix: sourceAttr._namespacePrefix,\n      localName: sourceAttr._localName,\n      value: sourceAttr._value\n    });\n\n    exports.appendAttribute(destElement, destAttr);\n  }\n};\n\nexports.attributeListsEqual = function (elementA, elementB) {\n  // Needed by https://dom.spec.whatwg.org/#concept-node-equals\n\n  const listA = elementA._attributeList;\n  const listB = elementB._attributeList;\n\n  if (listA.length !== listB.length) {\n    return false;\n  }\n\n  for (let i = 0; i < listA.length; ++i) {\n    const attrA = listA[i];\n\n    if (!listB.some(attrB => equalsA(attrB))) {\n      return false;\n    }\n\n    function equalsA(attrB) {\n      return attrA._namespace === attrB._namespace && attrA._localName === attrB._localName &&\n             attrA._value === attrB._value;\n    }\n  }\n\n  return true;\n};\n\nexports.attributeNames = function (element) {\n  // Needed by https://dom.spec.whatwg.org/#dom-element-getattributenames\n\n  return element._attributeList.map(a => a._qualifiedName);\n};\n\nexports.hasAttributes = function (element) {\n  // Needed by https://dom.spec.whatwg.org/#dom-element-hasattributes\n\n  return element._attributeList.length > 0;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}