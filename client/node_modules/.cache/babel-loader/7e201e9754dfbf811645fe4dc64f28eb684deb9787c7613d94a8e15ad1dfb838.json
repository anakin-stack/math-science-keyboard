{"ast":null,"code":"\"use strict\";\n\nconst ValidityState = require(\"../generated/ValidityState\");\nconst Event = require(\"../generated/Event\");\nconst {\n  isDisabled\n} = require(\"../helpers/form-controls\");\nconst {\n  closest\n} = require(\"../helpers/traversal\");\nexports.implementation = class DefaultConstraintValidationImpl {\n  // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#dom-cva-willvalidate\n  get willValidate() {\n    return this._isCandidateForConstraintValidation();\n  }\n  get validity() {\n    if (!this._validity) {\n      this._validity = ValidityState.createImpl(this);\n    }\n    return this._validity;\n  }\n\n  // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#dom-cva-checkvalidity\n  checkValidity() {\n    if (!this._isCandidateForConstraintValidation()) {\n      return true;\n    }\n    if (this._satisfiesConstraints()) {\n      return true;\n    }\n    this.dispatchEvent(Event.createImpl([\"invalid\", {\n      cancelable: true\n    }]));\n    return false;\n  }\n\n  // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#dom-cva-setcustomvalidity\n  setCustomValidity(message) {\n    this._customValidityErrorMessage = message;\n  }\n\n  // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#dom-cva-reportvalidity\n  // Since jsdom has no user interaction, it's the same as #checkValidity\n  reportValidity() {\n    return this.checkValidity();\n  }\n\n  // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#dom-cva-validationmessage\n  get validationMessage() {\n    const {\n      validity\n    } = this;\n    if (!this._isCandidateForConstraintValidation() || this._satisfiesConstraints()) {\n      return \"\";\n    }\n    const isSufferingFromCustomError = validity.customError;\n    if (isSufferingFromCustomError) {\n      return this._customValidityErrorMessage;\n    }\n    return \"Constraints not satisfied\";\n  }\n  _isCandidateForConstraintValidation() {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#attr-fe-disabled\n    return !isDisabled(this) &&\n    // If an element has a datalist element ancestor,\n    // it is barred from constraint validation.\n    closest(this, \"datalist\") === null && !this._barredFromConstraintValidationSpecialization();\n  }\n  _isBarredFromConstraintValidation() {\n    return !this._isCandidateForConstraintValidation();\n  }\n  _satisfiesConstraints() {\n    return this.validity.valid;\n  }\n};","map":{"version":3,"names":["ValidityState","require","Event","isDisabled","closest","exports","implementation","DefaultConstraintValidationImpl","willValidate","_isCandidateForConstraintValidation","validity","_validity","createImpl","checkValidity","_satisfiesConstraints","dispatchEvent","cancelable","setCustomValidity","message","_customValidityErrorMessage","reportValidity","validationMessage","isSufferingFromCustomError","customError","_barredFromConstraintValidationSpecialization","_isBarredFromConstraintValidation","valid"],"sources":["G:/scientificKeyboard/keyboard/node_modules/mathjax-node/node_modules/jsdom/lib/jsdom/living/constraint-validation/DefaultConstraintValidation-impl.js"],"sourcesContent":["\"use strict\";\n\nconst ValidityState = require(\"../generated/ValidityState\");\nconst Event = require(\"../generated/Event\");\nconst { isDisabled } = require(\"../helpers/form-controls\");\nconst { closest } = require(\"../helpers/traversal\");\n\nexports.implementation = class DefaultConstraintValidationImpl {\n  // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#dom-cva-willvalidate\n  get willValidate() {\n    return this._isCandidateForConstraintValidation();\n  }\n\n  get validity() {\n    if (!this._validity) {\n      this._validity = ValidityState.createImpl(this);\n    }\n    return this._validity;\n  }\n\n  // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#dom-cva-checkvalidity\n  checkValidity() {\n    if (!this._isCandidateForConstraintValidation()) {\n      return true;\n    }\n    if (this._satisfiesConstraints()) {\n      return true;\n    }\n    this.dispatchEvent(Event.createImpl([\"invalid\", { cancelable: true }]));\n    return false;\n  }\n\n  // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#dom-cva-setcustomvalidity\n  setCustomValidity(message) {\n    this._customValidityErrorMessage = message;\n  }\n\n  // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#dom-cva-reportvalidity\n  // Since jsdom has no user interaction, it's the same as #checkValidity\n  reportValidity() {\n    return this.checkValidity();\n  }\n\n  // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#dom-cva-validationmessage\n  get validationMessage() {\n    const { validity } = this;\n    if (!this._isCandidateForConstraintValidation() || this._satisfiesConstraints()) {\n      return \"\";\n    }\n    const isSufferingFromCustomError = validity.customError;\n    if (isSufferingFromCustomError) {\n      return this._customValidityErrorMessage;\n    }\n    return \"Constraints not satisfied\";\n  }\n\n  _isCandidateForConstraintValidation() {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#attr-fe-disabled\n    return !isDisabled(this) &&\n      // If an element has a datalist element ancestor,\n      // it is barred from constraint validation.\n      closest(this, \"datalist\") === null &&\n      !this._barredFromConstraintValidationSpecialization();\n  }\n\n  _isBarredFromConstraintValidation() {\n    return !this._isCandidateForConstraintValidation();\n  }\n\n  _satisfiesConstraints() {\n    return this.validity.valid;\n  }\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,aAAa,GAAGC,OAAO,CAAC,4BAA4B,CAAC;AAC3D,MAAMC,KAAK,GAAGD,OAAO,CAAC,oBAAoB,CAAC;AAC3C,MAAM;EAAEE;AAAW,CAAC,GAAGF,OAAO,CAAC,0BAA0B,CAAC;AAC1D,MAAM;EAAEG;AAAQ,CAAC,GAAGH,OAAO,CAAC,sBAAsB,CAAC;AAEnDI,OAAO,CAACC,cAAc,GAAG,MAAMC,+BAA+B,CAAC;EAC7D;EACA,IAAIC,YAAYA,CAAA,EAAG;IACjB,OAAO,IAAI,CAACC,mCAAmC,CAAC,CAAC;EACnD;EAEA,IAAIC,QAAQA,CAAA,EAAG;IACb,IAAI,CAAC,IAAI,CAACC,SAAS,EAAE;MACnB,IAAI,CAACA,SAAS,GAAGX,aAAa,CAACY,UAAU,CAAC,IAAI,CAAC;IACjD;IACA,OAAO,IAAI,CAACD,SAAS;EACvB;;EAEA;EACAE,aAAaA,CAAA,EAAG;IACd,IAAI,CAAC,IAAI,CAACJ,mCAAmC,CAAC,CAAC,EAAE;MAC/C,OAAO,IAAI;IACb;IACA,IAAI,IAAI,CAACK,qBAAqB,CAAC,CAAC,EAAE;MAChC,OAAO,IAAI;IACb;IACA,IAAI,CAACC,aAAa,CAACb,KAAK,CAACU,UAAU,CAAC,CAAC,SAAS,EAAE;MAAEI,UAAU,EAAE;IAAK,CAAC,CAAC,CAAC,CAAC;IACvE,OAAO,KAAK;EACd;;EAEA;EACAC,iBAAiBA,CAACC,OAAO,EAAE;IACzB,IAAI,CAACC,2BAA2B,GAAGD,OAAO;EAC5C;;EAEA;EACA;EACAE,cAAcA,CAAA,EAAG;IACf,OAAO,IAAI,CAACP,aAAa,CAAC,CAAC;EAC7B;;EAEA;EACA,IAAIQ,iBAAiBA,CAAA,EAAG;IACtB,MAAM;MAAEX;IAAS,CAAC,GAAG,IAAI;IACzB,IAAI,CAAC,IAAI,CAACD,mCAAmC,CAAC,CAAC,IAAI,IAAI,CAACK,qBAAqB,CAAC,CAAC,EAAE;MAC/E,OAAO,EAAE;IACX;IACA,MAAMQ,0BAA0B,GAAGZ,QAAQ,CAACa,WAAW;IACvD,IAAID,0BAA0B,EAAE;MAC9B,OAAO,IAAI,CAACH,2BAA2B;IACzC;IACA,OAAO,2BAA2B;EACpC;EAEAV,mCAAmCA,CAAA,EAAG;IACpC;IACA,OAAO,CAACN,UAAU,CAAC,IAAI,CAAC;IACtB;IACA;IACAC,OAAO,CAAC,IAAI,EAAE,UAAU,CAAC,KAAK,IAAI,IAClC,CAAC,IAAI,CAACoB,6CAA6C,CAAC,CAAC;EACzD;EAEAC,iCAAiCA,CAAA,EAAG;IAClC,OAAO,CAAC,IAAI,CAAChB,mCAAmC,CAAC,CAAC;EACpD;EAEAK,qBAAqBA,CAAA,EAAG;IACtB,OAAO,IAAI,CAACJ,QAAQ,CAACgB,KAAK;EAC5B;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}