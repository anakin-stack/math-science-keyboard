{"ast":null,"code":"\"use strict\";\n\nconst request = require(\"request\");\nconst {\n  EventEmitter\n} = require(\"events\");\nconst Event = require(\"./generated/Event\");\nconst ProgressEvent = require(\"./generated/ProgressEvent\");\nconst fs = require(\"fs\");\nconst {\n  URL\n} = require(\"whatwg-url\");\nconst parseDataURL = require(\"data-urls\");\nconst DOMException = require(\"domexception\");\nconst xhrSymbols = require(\"./xmlhttprequest-symbols\");\nconst headerListSeparatorRegexp = /,[ \\t]*/;\nconst simpleMethods = new Set([\"GET\", \"HEAD\", \"POST\"]);\nconst simpleHeaders = new Set([\"accept\", \"accept-language\", \"content-language\", \"content-type\"]);\nconst preflightHeaders = new Set([\"access-control-expose-headers\", \"access-control-allow-headers\", \"access-control-allow-credentials\", \"access-control-allow-origin\"]);\nfunction wrapCookieJarForRequest(cookieJar) {\n  const jarWrapper = request.jar();\n  jarWrapper._jar = cookieJar;\n  return jarWrapper;\n}\nfunction getRequestHeader(requestHeaders, header) {\n  const lcHeader = header.toLowerCase();\n  const keys = Object.keys(requestHeaders);\n  let n = keys.length;\n  while (n--) {\n    const key = keys[n];\n    if (key.toLowerCase() === lcHeader) {\n      return requestHeaders[key];\n    }\n  }\n  return null;\n}\nfunction updateRequestHeader(requestHeaders, header, newValue) {\n  const lcHeader = header.toLowerCase();\n  const keys = Object.keys(requestHeaders);\n  let n = keys.length;\n  while (n--) {\n    const key = keys[n];\n    if (key.toLowerCase() === lcHeader) {\n      requestHeaders[key] = newValue;\n    }\n  }\n}\nfunction mergeHeaders(lhs, rhs) {\n  const rhsParts = rhs.split(\",\");\n  const lhsParts = lhs.split(\",\");\n  return rhsParts.concat(lhsParts.filter(p => rhsParts.indexOf(p) < 0)).join(\",\");\n}\nfunction dispatchError(xhr) {\n  const errMessage = xhr[xhrSymbols.properties].error;\n  requestErrorSteps(xhr, \"error\", new DOMException(errMessage, \"NetworkError\"));\n  if (xhr._ownerDocument) {\n    const error = new Error(errMessage);\n    error.type = \"XMLHttpRequest\";\n    xhr._ownerDocument._defaultView._virtualConsole.emit(\"jsdomError\", error);\n  }\n}\nfunction validCORSHeaders(xhr, response, flag, properties, origin) {\n  const acaoStr = response.headers[\"access-control-allow-origin\"];\n  const acao = acaoStr ? acaoStr.trim() : null;\n  if (acao !== \"*\" && acao !== origin) {\n    properties.error = \"Cross origin \" + origin + \" forbidden\";\n    dispatchError(xhr);\n    return false;\n  }\n  const acacStr = response.headers[\"access-control-allow-credentials\"];\n  const acac = acacStr ? acacStr.trim() : null;\n  if (flag.withCredentials && acac !== \"true\") {\n    properties.error = \"Credentials forbidden\";\n    dispatchError(xhr);\n    return false;\n  }\n  return true;\n}\nfunction validCORSPreflightHeaders(xhr, response, flag, properties) {\n  if (!validCORSHeaders(xhr, response, flag, properties, properties.origin)) {\n    return false;\n  }\n  const acahStr = response.headers[\"access-control-allow-headers\"];\n  const acah = new Set(acahStr ? acahStr.trim().toLowerCase().split(headerListSeparatorRegexp) : []);\n  const forbiddenHeaders = Object.keys(flag.requestHeaders).filter(header => {\n    const lcHeader = header.toLowerCase();\n    return !simpleHeaders.has(lcHeader) && !acah.has(lcHeader);\n  });\n  if (forbiddenHeaders.length > 0) {\n    properties.error = \"Headers \" + forbiddenHeaders + \" forbidden\";\n    dispatchError(xhr);\n    return false;\n  }\n  return true;\n}\nfunction requestErrorSteps(xhr, event, exception) {\n  const properties = xhr[xhrSymbols.properties];\n  const flag = xhr[xhrSymbols.flag];\n  properties.readyState = xhr.DONE;\n  properties.send = false;\n  setResponseToNetworkError(xhr);\n  if (flag.synchronous) {\n    throw exception;\n  }\n  xhr.dispatchEvent(Event.create([\"readystatechange\"]));\n  if (!properties.uploadComplete) {\n    properties.uploadComplete = true;\n    if (properties.uploadListener) {\n      xhr.upload.dispatchEvent(ProgressEvent.create([event, {\n        loaded: 0,\n        total: 0,\n        lengthComputable: false\n      }]));\n      xhr.upload.dispatchEvent(ProgressEvent.create([\"loadend\", {\n        loaded: 0,\n        total: 0,\n        lengthComputable: false\n      }]));\n    }\n  }\n  xhr.dispatchEvent(ProgressEvent.create([event, {\n    loaded: 0,\n    total: 0,\n    lengthComputable: false\n  }]));\n  xhr.dispatchEvent(ProgressEvent.create([\"loadend\", {\n    loaded: 0,\n    total: 0,\n    lengthComputable: false\n  }]));\n}\nfunction setResponseToNetworkError(xhr) {\n  const properties = xhr[xhrSymbols.properties];\n  properties.responseCache = properties.responseTextCache = properties.responseXMLCache = null;\n  properties.responseHeaders = {};\n  properties.status = 0;\n  properties.statusText = \"\";\n}\n\n// return a \"request\" client object or an event emitter matching the same behaviour for unsupported protocols\n// the callback should be called with a \"request\" response object or an event emitter matching the same behaviour too\nfunction createClient(xhr) {\n  const flag = xhr[xhrSymbols.flag];\n  const properties = xhr[xhrSymbols.properties];\n  const urlObj = new URL(flag.uri);\n  const uri = urlObj.href;\n  const ucMethod = flag.method.toUpperCase();\n  const {\n    requestManager\n  } = flag;\n  if (urlObj.protocol === \"file:\") {\n    const response = new EventEmitter();\n    response.statusCode = 200;\n    response.rawHeaders = [];\n    response.headers = {};\n    response.request = {\n      uri: urlObj\n    };\n    const filePath = urlObj.pathname.replace(/^file:\\/\\//, \"\").replace(/^\\/([a-z]):\\//i, \"$1:/\").replace(/%20/g, \" \");\n    const client = new EventEmitter();\n    const readableStream = fs.createReadStream(filePath, {\n      encoding: null\n    });\n    readableStream.on(\"data\", chunk => {\n      response.emit(\"data\", chunk);\n      client.emit(\"data\", chunk);\n    });\n    readableStream.on(\"end\", () => {\n      response.emit(\"end\");\n      client.emit(\"end\");\n    });\n    readableStream.on(\"error\", err => {\n      response.emit(\"error\", err);\n      client.emit(\"error\", err);\n    });\n    client.abort = function () {\n      readableStream.destroy();\n      client.emit(\"abort\");\n    };\n    if (requestManager) {\n      const req = {\n        abort() {\n          properties.abortError = true;\n          xhr.abort();\n        }\n      };\n      requestManager.add(req);\n      const rmReq = requestManager.remove.bind(requestManager, req);\n      client.on(\"abort\", rmReq);\n      client.on(\"error\", rmReq);\n      client.on(\"end\", rmReq);\n    }\n    process.nextTick(() => client.emit(\"response\", response));\n    return client;\n  }\n  if (urlObj.protocol === \"data:\") {\n    const response = new EventEmitter();\n    response.request = {\n      uri: urlObj\n    };\n    const client = new EventEmitter();\n    let buffer;\n    try {\n      const parsed = parseDataURL(uri);\n      const contentType = parsed.mimeType.toString();\n      buffer = parsed.body;\n      response.statusCode = 200;\n      response.rawHeaders = [\"Content-Type\", contentType];\n      response.headers = {\n        \"content-type\": contentType\n      };\n    } catch (err) {\n      process.nextTick(() => client.emit(\"error\", err));\n      return client;\n    }\n    client.abort = () => {\n      // do nothing\n    };\n    process.nextTick(() => {\n      client.emit(\"response\", response);\n      process.nextTick(() => {\n        response.emit(\"data\", buffer);\n        client.emit(\"data\", buffer);\n        response.emit(\"end\");\n        client.emit(\"end\");\n      });\n    });\n    return client;\n  }\n  const requestHeaders = {};\n  for (const header in flag.requestHeaders) {\n    requestHeaders[header] = flag.requestHeaders[header];\n  }\n  if (getRequestHeader(flag.requestHeaders, \"referer\") === null) {\n    requestHeaders.Referer = flag.referrer;\n  }\n  if (getRequestHeader(flag.requestHeaders, \"user-agent\") === null) {\n    requestHeaders[\"User-Agent\"] = flag.userAgent;\n  }\n  if (getRequestHeader(flag.requestHeaders, \"accept-language\") === null) {\n    requestHeaders[\"Accept-Language\"] = \"en\";\n  }\n  if (getRequestHeader(flag.requestHeaders, \"accept\") === null) {\n    requestHeaders.Accept = \"*/*\";\n  }\n  const crossOrigin = flag.origin !== urlObj.origin;\n  if (crossOrigin) {\n    requestHeaders.Origin = flag.origin;\n  }\n  const options = {\n    uri,\n    method: flag.method,\n    headers: requestHeaders,\n    gzip: true,\n    maxRedirects: 21,\n    followAllRedirects: true,\n    encoding: null,\n    pool: flag.pool,\n    agentOptions: flag.agentOptions,\n    strictSSL: flag.strictSSL\n  };\n  if (flag.auth) {\n    options.auth = {\n      user: flag.auth.user || \"\",\n      pass: flag.auth.pass || \"\",\n      sendImmediately: false\n    };\n  }\n  if (flag.cookieJar && (!crossOrigin || flag.withCredentials)) {\n    options.jar = wrapCookieJarForRequest(flag.cookieJar);\n  }\n  if (flag.proxy) {\n    options.proxy = flag.proxy;\n  }\n  const {\n    body\n  } = flag;\n  const hasBody = body !== undefined && body !== null && body !== \"\" && !(ucMethod === \"HEAD\" || ucMethod === \"GET\");\n  if (hasBody && !flag.formData) {\n    options.body = body;\n  }\n  if (hasBody && getRequestHeader(flag.requestHeaders, \"content-type\") === null) {\n    requestHeaders[\"Content-Type\"] = \"text/plain;charset=UTF-8\";\n  }\n  function doRequest() {\n    try {\n      const client = request(options);\n      if (hasBody && flag.formData) {\n        const form = client.form();\n        for (const entry of body) {\n          form.append(entry.name, entry.value, entry.options);\n        }\n      }\n      return client;\n    } catch (e) {\n      const client = new EventEmitter();\n      process.nextTick(() => client.emit(\"error\", e));\n      return client;\n    }\n  }\n  let client;\n  const nonSimpleHeaders = Object.keys(flag.requestHeaders).filter(header => !simpleHeaders.has(header.toLowerCase()));\n  if (crossOrigin && (!simpleMethods.has(ucMethod) || nonSimpleHeaders.length > 0 || properties.uploadListener)) {\n    client = new EventEmitter();\n    const preflightRequestHeaders = [];\n    for (const header in requestHeaders) {\n      // the only existing request headers the cors spec allows on the preflight request are Origin and Referrer\n      const lcHeader = header.toLowerCase();\n      if (lcHeader === \"origin\" || lcHeader === \"referrer\") {\n        preflightRequestHeaders[header] = requestHeaders[header];\n      }\n    }\n    preflightRequestHeaders[\"Access-Control-Request-Method\"] = flag.method;\n    if (nonSimpleHeaders.length > 0) {\n      preflightRequestHeaders[\"Access-Control-Request-Headers\"] = nonSimpleHeaders.join(\", \");\n    }\n    preflightRequestHeaders[\"User-Agent\"] = flag.userAgent;\n    flag.preflight = true;\n    const preflightOptions = {\n      uri,\n      method: \"OPTIONS\",\n      headers: preflightRequestHeaders,\n      followRedirect: false,\n      encoding: null,\n      pool: flag.pool,\n      agentOptions: flag.agentOptions,\n      strictSSL: flag.strictSSL\n    };\n    if (flag.proxy) {\n      preflightOptions.proxy = flag.proxy;\n    }\n    const preflightClient = request(preflightOptions);\n    preflightClient.on(\"response\", resp => {\n      // don't send the real request if the preflight request returned an error\n      if (resp.statusCode < 200 || resp.statusCode > 299) {\n        client.emit(\"error\", new Error(\"Response for preflight has invalid HTTP status code \" + resp.statusCode));\n        return;\n      }\n      // don't send the real request if we aren't allowed to use the headers\n      if (!validCORSPreflightHeaders(xhr, resp, flag, properties)) {\n        setResponseToNetworkError(xhr);\n        return;\n      }\n      const realClient = doRequest();\n      realClient.on(\"response\", res => {\n        for (const header in resp.headers) {\n          if (preflightHeaders.has(header)) {\n            res.headers[header] = Object.prototype.hasOwnProperty.call(res.headers, header) ? mergeHeaders(res.headers[header], resp.headers[header]) : resp.headers[header];\n          }\n        }\n        client.emit(\"response\", res);\n      });\n      realClient.on(\"data\", chunk => client.emit(\"data\", chunk));\n      realClient.on(\"end\", () => client.emit(\"end\"));\n      realClient.on(\"abort\", () => client.emit(\"abort\"));\n      realClient.on(\"request\", req => {\n        client.headers = realClient.headers;\n        client.emit(\"request\", req);\n      });\n      realClient.on(\"redirect\", () => {\n        client.response = realClient.response;\n        client.emit(\"redirect\");\n      });\n      realClient.on(\"error\", err => client.emit(\"error\", err));\n      client.abort = () => {\n        realClient.abort();\n      };\n    });\n    preflightClient.on(\"error\", err => client.emit(\"error\", err));\n    client.abort = () => {\n      preflightClient.abort();\n    };\n  } else {\n    client = doRequest();\n  }\n  if (requestManager) {\n    const req = {\n      abort() {\n        properties.abortError = true;\n        xhr.abort();\n      }\n    };\n    requestManager.add(req);\n    const rmReq = requestManager.remove.bind(requestManager, req);\n    client.on(\"abort\", rmReq);\n    client.on(\"error\", rmReq);\n    client.on(\"end\", rmReq);\n  }\n  return client;\n}\nexports.headerListSeparatorRegexp = headerListSeparatorRegexp;\nexports.simpleHeaders = simpleHeaders;\nexports.preflightHeaders = preflightHeaders;\nexports.wrapCookieJarForRequest = wrapCookieJarForRequest;\nexports.getRequestHeader = getRequestHeader;\nexports.updateRequestHeader = updateRequestHeader;\nexports.dispatchError = dispatchError;\nexports.validCORSHeaders = validCORSHeaders;\nexports.requestErrorSteps = requestErrorSteps;\nexports.setResponseToNetworkError = setResponseToNetworkError;\nexports.createClient = createClient;","map":{"version":3,"names":["request","require","EventEmitter","Event","ProgressEvent","fs","URL","parseDataURL","DOMException","xhrSymbols","headerListSeparatorRegexp","simpleMethods","Set","simpleHeaders","preflightHeaders","wrapCookieJarForRequest","cookieJar","jarWrapper","jar","_jar","getRequestHeader","requestHeaders","header","lcHeader","toLowerCase","keys","Object","n","length","key","updateRequestHeader","newValue","mergeHeaders","lhs","rhs","rhsParts","split","lhsParts","concat","filter","p","indexOf","join","dispatchError","xhr","errMessage","properties","error","requestErrorSteps","_ownerDocument","Error","type","_defaultView","_virtualConsole","emit","validCORSHeaders","response","flag","origin","acaoStr","headers","acao","trim","acacStr","acac","withCredentials","validCORSPreflightHeaders","acahStr","acah","forbiddenHeaders","has","event","exception","readyState","DONE","send","setResponseToNetworkError","synchronous","dispatchEvent","create","uploadComplete","uploadListener","upload","loaded","total","lengthComputable","responseCache","responseTextCache","responseXMLCache","responseHeaders","status","statusText","createClient","urlObj","uri","href","ucMethod","method","toUpperCase","requestManager","protocol","statusCode","rawHeaders","filePath","pathname","replace","client","readableStream","createReadStream","encoding","on","chunk","err","abort","destroy","req","abortError","add","rmReq","remove","bind","process","nextTick","buffer","parsed","contentType","mimeType","toString","body","Referer","referrer","userAgent","Accept","crossOrigin","Origin","options","gzip","maxRedirects","followAllRedirects","pool","agentOptions","strictSSL","auth","user","pass","sendImmediately","proxy","hasBody","undefined","formData","doRequest","form","entry","append","name","value","e","nonSimpleHeaders","preflightRequestHeaders","preflight","preflightOptions","followRedirect","preflightClient","resp","realClient","res","prototype","hasOwnProperty","call","exports"],"sources":["G:/scientificKeyboard/keyboard/node_modules/mathjax-node/node_modules/jsdom/lib/jsdom/living/xhr-utils.js"],"sourcesContent":["\"use strict\";\nconst request = require(\"request\");\nconst { EventEmitter } = require(\"events\");\nconst Event = require(\"./generated/Event\");\nconst ProgressEvent = require(\"./generated/ProgressEvent\");\nconst fs = require(\"fs\");\nconst { URL } = require(\"whatwg-url\");\nconst parseDataURL = require(\"data-urls\");\n\nconst DOMException = require(\"domexception\");\nconst xhrSymbols = require(\"./xmlhttprequest-symbols\");\n\nconst headerListSeparatorRegexp = /,[ \\t]*/;\nconst simpleMethods = new Set([\"GET\", \"HEAD\", \"POST\"]);\nconst simpleHeaders = new Set([\"accept\", \"accept-language\", \"content-language\", \"content-type\"]);\nconst preflightHeaders = new Set([\n  \"access-control-expose-headers\",\n  \"access-control-allow-headers\",\n  \"access-control-allow-credentials\",\n  \"access-control-allow-origin\"\n]);\n\nfunction wrapCookieJarForRequest(cookieJar) {\n  const jarWrapper = request.jar();\n  jarWrapper._jar = cookieJar;\n  return jarWrapper;\n}\n\nfunction getRequestHeader(requestHeaders, header) {\n  const lcHeader = header.toLowerCase();\n  const keys = Object.keys(requestHeaders);\n  let n = keys.length;\n  while (n--) {\n    const key = keys[n];\n    if (key.toLowerCase() === lcHeader) {\n      return requestHeaders[key];\n    }\n  }\n  return null;\n}\n\nfunction updateRequestHeader(requestHeaders, header, newValue) {\n  const lcHeader = header.toLowerCase();\n  const keys = Object.keys(requestHeaders);\n  let n = keys.length;\n  while (n--) {\n    const key = keys[n];\n    if (key.toLowerCase() === lcHeader) {\n      requestHeaders[key] = newValue;\n    }\n  }\n}\n\nfunction mergeHeaders(lhs, rhs) {\n  const rhsParts = rhs.split(\",\");\n  const lhsParts = lhs.split(\",\");\n  return rhsParts.concat(lhsParts.filter(p => rhsParts.indexOf(p) < 0)).join(\",\");\n}\n\nfunction dispatchError(xhr) {\n  const errMessage = xhr[xhrSymbols.properties].error;\n  requestErrorSteps(xhr, \"error\", new DOMException(errMessage, \"NetworkError\"));\n\n  if (xhr._ownerDocument) {\n    const error = new Error(errMessage);\n    error.type = \"XMLHttpRequest\";\n\n    xhr._ownerDocument._defaultView._virtualConsole.emit(\"jsdomError\", error);\n  }\n}\n\nfunction validCORSHeaders(xhr, response, flag, properties, origin) {\n  const acaoStr = response.headers[\"access-control-allow-origin\"];\n  const acao = acaoStr ? acaoStr.trim() : null;\n  if (acao !== \"*\" && acao !== origin) {\n    properties.error = \"Cross origin \" + origin + \" forbidden\";\n    dispatchError(xhr);\n    return false;\n  }\n  const acacStr = response.headers[\"access-control-allow-credentials\"];\n  const acac = acacStr ? acacStr.trim() : null;\n  if (flag.withCredentials && acac !== \"true\") {\n    properties.error = \"Credentials forbidden\";\n    dispatchError(xhr);\n    return false;\n  }\n  return true;\n}\n\nfunction validCORSPreflightHeaders(xhr, response, flag, properties) {\n  if (!validCORSHeaders(xhr, response, flag, properties, properties.origin)) {\n    return false;\n  }\n  const acahStr = response.headers[\"access-control-allow-headers\"];\n  const acah = new Set(acahStr ? acahStr.trim().toLowerCase().split(headerListSeparatorRegexp) : []);\n  const forbiddenHeaders = Object.keys(flag.requestHeaders).filter(header => {\n    const lcHeader = header.toLowerCase();\n    return !simpleHeaders.has(lcHeader) && !acah.has(lcHeader);\n  });\n  if (forbiddenHeaders.length > 0) {\n    properties.error = \"Headers \" + forbiddenHeaders + \" forbidden\";\n    dispatchError(xhr);\n    return false;\n  }\n  return true;\n}\n\nfunction requestErrorSteps(xhr, event, exception) {\n  const properties = xhr[xhrSymbols.properties];\n  const flag = xhr[xhrSymbols.flag];\n\n  properties.readyState = xhr.DONE;\n  properties.send = false;\n\n  setResponseToNetworkError(xhr);\n\n  if (flag.synchronous) {\n    throw exception;\n  }\n\n  xhr.dispatchEvent(Event.create([\"readystatechange\"]));\n\n  if (!properties.uploadComplete) {\n    properties.uploadComplete = true;\n\n    if (properties.uploadListener) {\n      xhr.upload.dispatchEvent(ProgressEvent.create([event, { loaded: 0, total: 0, lengthComputable: false }]));\n      xhr.upload.dispatchEvent(ProgressEvent.create([\"loadend\", { loaded: 0, total: 0, lengthComputable: false }]));\n    }\n  }\n\n  xhr.dispatchEvent(ProgressEvent.create([event, { loaded: 0, total: 0, lengthComputable: false }]));\n  xhr.dispatchEvent(ProgressEvent.create([\"loadend\", { loaded: 0, total: 0, lengthComputable: false }]));\n}\n\nfunction setResponseToNetworkError(xhr) {\n  const properties = xhr[xhrSymbols.properties];\n  properties.responseCache = properties.responseTextCache = properties.responseXMLCache = null;\n  properties.responseHeaders = {};\n  properties.status = 0;\n  properties.statusText = \"\";\n}\n\n// return a \"request\" client object or an event emitter matching the same behaviour for unsupported protocols\n// the callback should be called with a \"request\" response object or an event emitter matching the same behaviour too\nfunction createClient(xhr) {\n  const flag = xhr[xhrSymbols.flag];\n  const properties = xhr[xhrSymbols.properties];\n  const urlObj = new URL(flag.uri);\n  const uri = urlObj.href;\n  const ucMethod = flag.method.toUpperCase();\n\n  const { requestManager } = flag;\n\n  if (urlObj.protocol === \"file:\") {\n    const response = new EventEmitter();\n    response.statusCode = 200;\n    response.rawHeaders = [];\n    response.headers = {};\n    response.request = { uri: urlObj };\n    const filePath = urlObj.pathname\n      .replace(/^file:\\/\\//, \"\")\n      .replace(/^\\/([a-z]):\\//i, \"$1:/\")\n      .replace(/%20/g, \" \");\n\n    const client = new EventEmitter();\n\n    const readableStream = fs.createReadStream(filePath, { encoding: null });\n\n    readableStream.on(\"data\", chunk => {\n      response.emit(\"data\", chunk);\n      client.emit(\"data\", chunk);\n    });\n\n    readableStream.on(\"end\", () => {\n      response.emit(\"end\");\n      client.emit(\"end\");\n    });\n\n    readableStream.on(\"error\", err => {\n      response.emit(\"error\", err);\n      client.emit(\"error\", err);\n    });\n\n    client.abort = function () {\n      readableStream.destroy();\n      client.emit(\"abort\");\n    };\n\n    if (requestManager) {\n      const req = {\n        abort() {\n          properties.abortError = true;\n          xhr.abort();\n        }\n      };\n      requestManager.add(req);\n      const rmReq = requestManager.remove.bind(requestManager, req);\n      client.on(\"abort\", rmReq);\n      client.on(\"error\", rmReq);\n      client.on(\"end\", rmReq);\n    }\n\n    process.nextTick(() => client.emit(\"response\", response));\n\n    return client;\n  }\n\n  if (urlObj.protocol === \"data:\") {\n    const response = new EventEmitter();\n\n    response.request = { uri: urlObj };\n\n    const client = new EventEmitter();\n\n    let buffer;\n    try {\n      const parsed = parseDataURL(uri);\n      const contentType = parsed.mimeType.toString();\n      buffer = parsed.body;\n      response.statusCode = 200;\n      response.rawHeaders = [\"Content-Type\", contentType];\n      response.headers = { \"content-type\": contentType };\n    } catch (err) {\n      process.nextTick(() => client.emit(\"error\", err));\n      return client;\n    }\n\n    client.abort = () => {\n      // do nothing\n    };\n\n    process.nextTick(() => {\n      client.emit(\"response\", response);\n      process.nextTick(() => {\n        response.emit(\"data\", buffer);\n        client.emit(\"data\", buffer);\n        response.emit(\"end\");\n        client.emit(\"end\");\n      });\n    });\n\n    return client;\n  }\n\n  const requestHeaders = {};\n\n  for (const header in flag.requestHeaders) {\n    requestHeaders[header] = flag.requestHeaders[header];\n  }\n\n  if (getRequestHeader(flag.requestHeaders, \"referer\") === null) {\n    requestHeaders.Referer = flag.referrer;\n  }\n  if (getRequestHeader(flag.requestHeaders, \"user-agent\") === null) {\n    requestHeaders[\"User-Agent\"] = flag.userAgent;\n  }\n  if (getRequestHeader(flag.requestHeaders, \"accept-language\") === null) {\n    requestHeaders[\"Accept-Language\"] = \"en\";\n  }\n  if (getRequestHeader(flag.requestHeaders, \"accept\") === null) {\n    requestHeaders.Accept = \"*/*\";\n  }\n\n  const crossOrigin = flag.origin !== urlObj.origin;\n  if (crossOrigin) {\n    requestHeaders.Origin = flag.origin;\n  }\n\n  const options = {\n    uri,\n    method: flag.method,\n    headers: requestHeaders,\n    gzip: true,\n    maxRedirects: 21,\n    followAllRedirects: true,\n    encoding: null,\n    pool: flag.pool,\n    agentOptions: flag.agentOptions,\n    strictSSL: flag.strictSSL\n  };\n  if (flag.auth) {\n    options.auth = {\n      user: flag.auth.user || \"\",\n      pass: flag.auth.pass || \"\",\n      sendImmediately: false\n    };\n  }\n  if (flag.cookieJar && (!crossOrigin || flag.withCredentials)) {\n    options.jar = wrapCookieJarForRequest(flag.cookieJar);\n  }\n\n  if (flag.proxy) {\n    options.proxy = flag.proxy;\n  }\n\n  const { body } = flag;\n  const hasBody = body !== undefined &&\n                  body !== null &&\n                  body !== \"\" &&\n                  !(ucMethod === \"HEAD\" || ucMethod === \"GET\");\n\n  if (hasBody && !flag.formData) {\n    options.body = body;\n  }\n\n  if (hasBody && getRequestHeader(flag.requestHeaders, \"content-type\") === null) {\n    requestHeaders[\"Content-Type\"] = \"text/plain;charset=UTF-8\";\n  }\n\n  function doRequest() {\n    try {\n      const client = request(options);\n\n      if (hasBody && flag.formData) {\n        const form = client.form();\n        for (const entry of body) {\n          form.append(entry.name, entry.value, entry.options);\n        }\n      }\n\n      return client;\n    } catch (e) {\n      const client = new EventEmitter();\n      process.nextTick(() => client.emit(\"error\", e));\n      return client;\n    }\n  }\n\n  let client;\n\n  const nonSimpleHeaders = Object.keys(flag.requestHeaders)\n    .filter(header => !simpleHeaders.has(header.toLowerCase()));\n\n  if (crossOrigin && (!simpleMethods.has(ucMethod) || nonSimpleHeaders.length > 0 || properties.uploadListener)) {\n    client = new EventEmitter();\n\n    const preflightRequestHeaders = [];\n    for (const header in requestHeaders) {\n      // the only existing request headers the cors spec allows on the preflight request are Origin and Referrer\n      const lcHeader = header.toLowerCase();\n      if (lcHeader === \"origin\" || lcHeader === \"referrer\") {\n        preflightRequestHeaders[header] = requestHeaders[header];\n      }\n    }\n\n    preflightRequestHeaders[\"Access-Control-Request-Method\"] = flag.method;\n    if (nonSimpleHeaders.length > 0) {\n      preflightRequestHeaders[\"Access-Control-Request-Headers\"] = nonSimpleHeaders.join(\", \");\n    }\n\n    preflightRequestHeaders[\"User-Agent\"] = flag.userAgent;\n\n    flag.preflight = true;\n\n    const preflightOptions = {\n      uri,\n      method: \"OPTIONS\",\n      headers: preflightRequestHeaders,\n      followRedirect: false,\n      encoding: null,\n      pool: flag.pool,\n      agentOptions: flag.agentOptions,\n      strictSSL: flag.strictSSL\n    };\n\n    if (flag.proxy) {\n      preflightOptions.proxy = flag.proxy;\n    }\n\n    const preflightClient = request(preflightOptions);\n\n    preflightClient.on(\"response\", resp => {\n      // don't send the real request if the preflight request returned an error\n      if (resp.statusCode < 200 || resp.statusCode > 299) {\n        client.emit(\"error\", new Error(\"Response for preflight has invalid HTTP status code \" + resp.statusCode));\n        return;\n      }\n      // don't send the real request if we aren't allowed to use the headers\n      if (!validCORSPreflightHeaders(xhr, resp, flag, properties)) {\n        setResponseToNetworkError(xhr);\n        return;\n      }\n      const realClient = doRequest();\n      realClient.on(\"response\", res => {\n        for (const header in resp.headers) {\n          if (preflightHeaders.has(header)) {\n            res.headers[header] = Object.prototype.hasOwnProperty.call(res.headers, header) ?\n                                  mergeHeaders(res.headers[header], resp.headers[header]) :\n                                  resp.headers[header];\n          }\n        }\n        client.emit(\"response\", res);\n      });\n      realClient.on(\"data\", chunk => client.emit(\"data\", chunk));\n      realClient.on(\"end\", () => client.emit(\"end\"));\n      realClient.on(\"abort\", () => client.emit(\"abort\"));\n      realClient.on(\"request\", req => {\n        client.headers = realClient.headers;\n        client.emit(\"request\", req);\n      });\n      realClient.on(\"redirect\", () => {\n        client.response = realClient.response;\n        client.emit(\"redirect\");\n      });\n      realClient.on(\"error\", err => client.emit(\"error\", err));\n      client.abort = () => {\n        realClient.abort();\n      };\n    });\n\n    preflightClient.on(\"error\", err => client.emit(\"error\", err));\n\n    client.abort = () => {\n      preflightClient.abort();\n    };\n  } else {\n    client = doRequest();\n  }\n\n  if (requestManager) {\n    const req = {\n      abort() {\n        properties.abortError = true;\n        xhr.abort();\n      }\n    };\n    requestManager.add(req);\n    const rmReq = requestManager.remove.bind(requestManager, req);\n    client.on(\"abort\", rmReq);\n    client.on(\"error\", rmReq);\n    client.on(\"end\", rmReq);\n  }\n\n  return client;\n}\n\nexports.headerListSeparatorRegexp = headerListSeparatorRegexp;\nexports.simpleHeaders = simpleHeaders;\nexports.preflightHeaders = preflightHeaders;\nexports.wrapCookieJarForRequest = wrapCookieJarForRequest;\nexports.getRequestHeader = getRequestHeader;\nexports.updateRequestHeader = updateRequestHeader;\nexports.dispatchError = dispatchError;\nexports.validCORSHeaders = validCORSHeaders;\nexports.requestErrorSteps = requestErrorSteps;\nexports.setResponseToNetworkError = setResponseToNetworkError;\nexports.createClient = createClient;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}