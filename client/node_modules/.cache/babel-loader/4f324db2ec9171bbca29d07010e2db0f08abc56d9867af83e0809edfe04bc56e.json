{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\nconst convertAttr = require(\"./Attr.js\").convert;\nconst impl = utils.implSymbol;\nfunction NamedNodeMap() {\n  throw new TypeError(\"Illegal constructor\");\n}\nObject.defineProperty(NamedNodeMap, \"prototype\", {\n  value: NamedNodeMap.prototype,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\nObject.defineProperty(NamedNodeMap.prototype, Symbol.iterator, {\n  writable: true,\n  enumerable: false,\n  configurable: true,\n  value: Array.prototype[Symbol.iterator]\n});\nNamedNodeMap.prototype.item = function item(index) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  if (arguments.length < 1) {\n    throw new TypeError(\"Failed to execute 'item' on 'NamedNodeMap': 1 argument required, but only \" + arguments.length + \" present.\");\n  }\n  const args = [];\n  {\n    let curArg = arguments[0];\n    curArg = conversions[\"unsigned long\"](curArg, {\n      context: \"Failed to execute 'item' on 'NamedNodeMap': parameter 1\"\n    });\n    args.push(curArg);\n  }\n  return utils.tryWrapperForImpl(this[impl].item(...args));\n};\nNamedNodeMap.prototype.getNamedItem = function getNamedItem(qualifiedName) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  if (arguments.length < 1) {\n    throw new TypeError(\"Failed to execute 'getNamedItem' on 'NamedNodeMap': 1 argument required, but only \" + arguments.length + \" present.\");\n  }\n  const args = [];\n  {\n    let curArg = arguments[0];\n    curArg = conversions[\"DOMString\"](curArg, {\n      context: \"Failed to execute 'getNamedItem' on 'NamedNodeMap': parameter 1\"\n    });\n    args.push(curArg);\n  }\n  return utils.tryWrapperForImpl(this[impl].getNamedItem(...args));\n};\nNamedNodeMap.prototype.getNamedItemNS = function getNamedItemNS(namespace, localName) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  if (arguments.length < 2) {\n    throw new TypeError(\"Failed to execute 'getNamedItemNS' on 'NamedNodeMap': 2 arguments required, but only \" + arguments.length + \" present.\");\n  }\n  const args = [];\n  {\n    let curArg = arguments[0];\n    if (curArg === null || curArg === undefined) {\n      curArg = null;\n    } else {\n      curArg = conversions[\"DOMString\"](curArg, {\n        context: \"Failed to execute 'getNamedItemNS' on 'NamedNodeMap': parameter 1\"\n      });\n    }\n    args.push(curArg);\n  }\n  {\n    let curArg = arguments[1];\n    curArg = conversions[\"DOMString\"](curArg, {\n      context: \"Failed to execute 'getNamedItemNS' on 'NamedNodeMap': parameter 2\"\n    });\n    args.push(curArg);\n  }\n  return utils.tryWrapperForImpl(this[impl].getNamedItemNS(...args));\n};\nNamedNodeMap.prototype.setNamedItem = function setNamedItem(attr) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  if (arguments.length < 1) {\n    throw new TypeError(\"Failed to execute 'setNamedItem' on 'NamedNodeMap': 1 argument required, but only \" + arguments.length + \" present.\");\n  }\n  const args = [];\n  {\n    let curArg = arguments[0];\n    curArg = convertAttr(curArg, {\n      context: \"Failed to execute 'setNamedItem' on 'NamedNodeMap': parameter 1\"\n    });\n    args.push(curArg);\n  }\n  return utils.tryWrapperForImpl(this[impl].setNamedItem(...args));\n};\nNamedNodeMap.prototype.setNamedItemNS = function setNamedItemNS(attr) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  if (arguments.length < 1) {\n    throw new TypeError(\"Failed to execute 'setNamedItemNS' on 'NamedNodeMap': 1 argument required, but only \" + arguments.length + \" present.\");\n  }\n  const args = [];\n  {\n    let curArg = arguments[0];\n    curArg = convertAttr(curArg, {\n      context: \"Failed to execute 'setNamedItemNS' on 'NamedNodeMap': parameter 1\"\n    });\n    args.push(curArg);\n  }\n  return utils.tryWrapperForImpl(this[impl].setNamedItemNS(...args));\n};\nNamedNodeMap.prototype.removeNamedItem = function removeNamedItem(qualifiedName) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  if (arguments.length < 1) {\n    throw new TypeError(\"Failed to execute 'removeNamedItem' on 'NamedNodeMap': 1 argument required, but only \" + arguments.length + \" present.\");\n  }\n  const args = [];\n  {\n    let curArg = arguments[0];\n    curArg = conversions[\"DOMString\"](curArg, {\n      context: \"Failed to execute 'removeNamedItem' on 'NamedNodeMap': parameter 1\"\n    });\n    args.push(curArg);\n  }\n  return utils.tryWrapperForImpl(this[impl].removeNamedItem(...args));\n};\nNamedNodeMap.prototype.removeNamedItemNS = function removeNamedItemNS(namespace, localName) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  if (arguments.length < 2) {\n    throw new TypeError(\"Failed to execute 'removeNamedItemNS' on 'NamedNodeMap': 2 arguments required, but only \" + arguments.length + \" present.\");\n  }\n  const args = [];\n  {\n    let curArg = arguments[0];\n    if (curArg === null || curArg === undefined) {\n      curArg = null;\n    } else {\n      curArg = conversions[\"DOMString\"](curArg, {\n        context: \"Failed to execute 'removeNamedItemNS' on 'NamedNodeMap': parameter 1\"\n      });\n    }\n    args.push(curArg);\n  }\n  {\n    let curArg = arguments[1];\n    curArg = conversions[\"DOMString\"](curArg, {\n      context: \"Failed to execute 'removeNamedItemNS' on 'NamedNodeMap': parameter 2\"\n    });\n    args.push(curArg);\n  }\n  return utils.tryWrapperForImpl(this[impl].removeNamedItemNS(...args));\n};\nObject.defineProperty(NamedNodeMap.prototype, \"length\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n    return this[impl][\"length\"];\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(NamedNodeMap.prototype, Symbol.toStringTag, {\n  value: \"NamedNodeMap\",\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj) {\n    let {\n      context = \"The provided value\"\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'NamedNodeMap'.`);\n  },\n  create(constructorArgs, privateData) {\n    let obj = Object.create(NamedNodeMap.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(NamedNodeMap.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {},\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n    obj = new Proxy(obj, {\n      get(target, P, receiver) {\n        if (typeof P === \"symbol\") {\n          return Reflect.get(target, P, receiver);\n        }\n        const desc = this.getOwnPropertyDescriptor(target, P);\n        if (desc === undefined) {\n          const parent = Object.getPrototypeOf(target);\n          if (parent === null) {\n            return undefined;\n          }\n          return Reflect.get(target, P, receiver);\n        }\n        if (!desc.get && !desc.set) {\n          return desc.value;\n        }\n        const getter = desc.get;\n        if (getter === undefined) {\n          return undefined;\n        }\n        return Reflect.apply(getter, receiver, []);\n      },\n      has(target, P) {\n        if (typeof P === \"symbol\") {\n          return Reflect.has(target, P);\n        }\n        const desc = this.getOwnPropertyDescriptor(target, P);\n        if (desc !== undefined) {\n          return true;\n        }\n        const parent = Object.getPrototypeOf(target);\n        if (parent !== null) {\n          return Reflect.has(parent, P);\n        }\n        return false;\n      },\n      ownKeys(target) {\n        const keys = new Set();\n        for (const key of target[impl][utils.supportedPropertyIndices]) {\n          keys.add(`${key}`);\n        }\n        for (const key of target[impl][utils.supportedPropertyNames]) {\n          if (!(key in target)) {\n            keys.add(`${key}`);\n          }\n        }\n        for (const key of Reflect.ownKeys(target)) {\n          keys.add(key);\n        }\n        return [...keys];\n      },\n      getOwnPropertyDescriptor(target, P) {\n        if (typeof P === \"symbol\") {\n          return Reflect.getOwnPropertyDescriptor(target, P);\n        }\n        let ignoreNamedProps = false;\n        if (utils.isArrayIndexPropName(P)) {\n          const index = P >>> 0;\n          const indexedValue = target[impl].item(index);\n          if (indexedValue !== null) {\n            return {\n              writable: false,\n              enumerable: true,\n              configurable: true,\n              value: utils.tryWrapperForImpl(indexedValue)\n            };\n          }\n          ignoreNamedProps = true;\n        }\n        const namedValue = target[impl].getNamedItem(P);\n        if (namedValue !== null && !(P in target) && !ignoreNamedProps) {\n          return {\n            writable: false,\n            enumerable: false,\n            configurable: true,\n            value: utils.tryWrapperForImpl(namedValue)\n          };\n        }\n        return Reflect.getOwnPropertyDescriptor(target, P);\n      },\n      set(target, P, V, receiver) {\n        if (typeof P === \"symbol\") {\n          return Reflect.set(target, P, V, receiver);\n        }\n        if (target === receiver) {\n          utils.isArrayIndexPropName(P);\n          typeof P === \"string\" && !utils.isArrayIndexPropName(P);\n        }\n        let ownDesc;\n        if (utils.isArrayIndexPropName(P)) {\n          const index = P >>> 0;\n          const indexedValue = target[impl].item(index);\n          if (indexedValue !== null) {\n            ownDesc = {\n              writable: false,\n              enumerable: true,\n              configurable: true,\n              value: utils.tryWrapperForImpl(indexedValue)\n            };\n          }\n        }\n        if (ownDesc === undefined) {\n          ownDesc = Reflect.getOwnPropertyDescriptor(target, P);\n        }\n        if (ownDesc === undefined) {\n          const parent = Reflect.getPrototypeOf(target);\n          if (parent !== null) {\n            return Reflect.set(parent, P, V, receiver);\n          }\n          ownDesc = {\n            writable: true,\n            enumerable: true,\n            configurable: true,\n            value: undefined\n          };\n        }\n        if (!ownDesc.writable) {\n          return false;\n        }\n        if (!utils.isObject(receiver)) {\n          return false;\n        }\n        const existingDesc = Reflect.getOwnPropertyDescriptor(receiver, P);\n        let valueDesc;\n        if (existingDesc !== undefined) {\n          if (existingDesc.get || existingDesc.set) {\n            return false;\n          }\n          if (!existingDesc.writable) {\n            return false;\n          }\n          valueDesc = {\n            value: V\n          };\n        } else {\n          valueDesc = {\n            writable: true,\n            enumerable: true,\n            configurable: true,\n            value: V\n          };\n        }\n        return Reflect.defineProperty(receiver, P, valueDesc);\n      },\n      defineProperty(target, P, desc) {\n        if (typeof P === \"symbol\") {\n          return Reflect.defineProperty(target, P, desc);\n        }\n        if (utils.isArrayIndexPropName(P)) {\n          return false;\n        }\n        if (!utils.hasOwn(target, P)) {\n          const creating = !(target[impl].getNamedItem(P) !== null);\n          if (!creating) {\n            return false;\n          }\n        }\n        return Reflect.defineProperty(target, P, desc);\n      },\n      deleteProperty(target, P) {\n        if (typeof P === \"symbol\") {\n          return Reflect.deleteProperty(target, P);\n        }\n        if (utils.isArrayIndexPropName(P)) {\n          const index = P >>> 0;\n          return !(target[impl].item(index) !== null);\n        }\n        if (target[impl].getNamedItem(P) !== null && !(P in target)) {\n          return false;\n        }\n        return Reflect.deleteProperty(target, P);\n      },\n      preventExtensions() {\n        return false;\n      }\n    });\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: NamedNodeMap,\n  expose: {\n    Window: {\n      NamedNodeMap\n    }\n  }\n}; // iface\nmodule.exports = iface;\nconst Impl = require(\"../attributes/NamedNodeMap-impl.js\");","map":{"version":3,"names":["conversions","require","utils","convertAttr","convert","impl","implSymbol","NamedNodeMap","TypeError","Object","defineProperty","value","prototype","writable","enumerable","configurable","Symbol","iterator","Array","item","index","module","exports","is","arguments","length","args","curArg","context","push","tryWrapperForImpl","getNamedItem","qualifiedName","getNamedItemNS","namespace","localName","undefined","setNamedItem","attr","setNamedItemNS","removeNamedItem","removeNamedItemNS","get","toStringTag","iface","_mixedIntoPredicates","obj","hasOwn","Impl","implementation","isMixedInto","isImpl","wrapper","wrapperForImpl","implForWrapper","create","constructorArgs","privateData","setup","createImpl","_internalSetup","Proxy","target","P","receiver","Reflect","desc","getOwnPropertyDescriptor","parent","getPrototypeOf","set","getter","apply","has","ownKeys","keys","Set","key","supportedPropertyIndices","add","supportedPropertyNames","ignoreNamedProps","isArrayIndexPropName","indexedValue","namedValue","V","ownDesc","isObject","existingDesc","valueDesc","creating","deleteProperty","preventExtensions","wrapperSymbol","init","interface","expose","Window"],"sources":["G:/scientificKeyboard/keyboard/node_modules/mathjax-node/node_modules/jsdom/lib/jsdom/living/generated/NamedNodeMap.js"],"sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst convertAttr = require(\"./Attr.js\").convert;\nconst impl = utils.implSymbol;\n\nfunction NamedNodeMap() {\n  throw new TypeError(\"Illegal constructor\");\n}\n\nObject.defineProperty(NamedNodeMap, \"prototype\", {\n  value: NamedNodeMap.prototype,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\n\nObject.defineProperty(NamedNodeMap.prototype, Symbol.iterator, {\n  writable: true,\n  enumerable: false,\n  configurable: true,\n  value: Array.prototype[Symbol.iterator]\n});\n\nNamedNodeMap.prototype.item = function item(index) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  if (arguments.length < 1) {\n    throw new TypeError(\n      \"Failed to execute 'item' on 'NamedNodeMap': 1 argument required, but only \" + arguments.length + \" present.\"\n    );\n  }\n  const args = [];\n  {\n    let curArg = arguments[0];\n    curArg = conversions[\"unsigned long\"](curArg, {\n      context: \"Failed to execute 'item' on 'NamedNodeMap': parameter 1\"\n    });\n    args.push(curArg);\n  }\n  return utils.tryWrapperForImpl(this[impl].item(...args));\n};\n\nNamedNodeMap.prototype.getNamedItem = function getNamedItem(qualifiedName) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  if (arguments.length < 1) {\n    throw new TypeError(\n      \"Failed to execute 'getNamedItem' on 'NamedNodeMap': 1 argument required, but only \" +\n        arguments.length +\n        \" present.\"\n    );\n  }\n  const args = [];\n  {\n    let curArg = arguments[0];\n    curArg = conversions[\"DOMString\"](curArg, {\n      context: \"Failed to execute 'getNamedItem' on 'NamedNodeMap': parameter 1\"\n    });\n    args.push(curArg);\n  }\n  return utils.tryWrapperForImpl(this[impl].getNamedItem(...args));\n};\n\nNamedNodeMap.prototype.getNamedItemNS = function getNamedItemNS(namespace, localName) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  if (arguments.length < 2) {\n    throw new TypeError(\n      \"Failed to execute 'getNamedItemNS' on 'NamedNodeMap': 2 arguments required, but only \" +\n        arguments.length +\n        \" present.\"\n    );\n  }\n  const args = [];\n  {\n    let curArg = arguments[0];\n    if (curArg === null || curArg === undefined) {\n      curArg = null;\n    } else {\n      curArg = conversions[\"DOMString\"](curArg, {\n        context: \"Failed to execute 'getNamedItemNS' on 'NamedNodeMap': parameter 1\"\n      });\n    }\n    args.push(curArg);\n  }\n  {\n    let curArg = arguments[1];\n    curArg = conversions[\"DOMString\"](curArg, {\n      context: \"Failed to execute 'getNamedItemNS' on 'NamedNodeMap': parameter 2\"\n    });\n    args.push(curArg);\n  }\n  return utils.tryWrapperForImpl(this[impl].getNamedItemNS(...args));\n};\n\nNamedNodeMap.prototype.setNamedItem = function setNamedItem(attr) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  if (arguments.length < 1) {\n    throw new TypeError(\n      \"Failed to execute 'setNamedItem' on 'NamedNodeMap': 1 argument required, but only \" +\n        arguments.length +\n        \" present.\"\n    );\n  }\n  const args = [];\n  {\n    let curArg = arguments[0];\n    curArg = convertAttr(curArg, { context: \"Failed to execute 'setNamedItem' on 'NamedNodeMap': parameter 1\" });\n    args.push(curArg);\n  }\n  return utils.tryWrapperForImpl(this[impl].setNamedItem(...args));\n};\n\nNamedNodeMap.prototype.setNamedItemNS = function setNamedItemNS(attr) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  if (arguments.length < 1) {\n    throw new TypeError(\n      \"Failed to execute 'setNamedItemNS' on 'NamedNodeMap': 1 argument required, but only \" +\n        arguments.length +\n        \" present.\"\n    );\n  }\n  const args = [];\n  {\n    let curArg = arguments[0];\n    curArg = convertAttr(curArg, { context: \"Failed to execute 'setNamedItemNS' on 'NamedNodeMap': parameter 1\" });\n    args.push(curArg);\n  }\n  return utils.tryWrapperForImpl(this[impl].setNamedItemNS(...args));\n};\n\nNamedNodeMap.prototype.removeNamedItem = function removeNamedItem(qualifiedName) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  if (arguments.length < 1) {\n    throw new TypeError(\n      \"Failed to execute 'removeNamedItem' on 'NamedNodeMap': 1 argument required, but only \" +\n        arguments.length +\n        \" present.\"\n    );\n  }\n  const args = [];\n  {\n    let curArg = arguments[0];\n    curArg = conversions[\"DOMString\"](curArg, {\n      context: \"Failed to execute 'removeNamedItem' on 'NamedNodeMap': parameter 1\"\n    });\n    args.push(curArg);\n  }\n  return utils.tryWrapperForImpl(this[impl].removeNamedItem(...args));\n};\n\nNamedNodeMap.prototype.removeNamedItemNS = function removeNamedItemNS(namespace, localName) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  if (arguments.length < 2) {\n    throw new TypeError(\n      \"Failed to execute 'removeNamedItemNS' on 'NamedNodeMap': 2 arguments required, but only \" +\n        arguments.length +\n        \" present.\"\n    );\n  }\n  const args = [];\n  {\n    let curArg = arguments[0];\n    if (curArg === null || curArg === undefined) {\n      curArg = null;\n    } else {\n      curArg = conversions[\"DOMString\"](curArg, {\n        context: \"Failed to execute 'removeNamedItemNS' on 'NamedNodeMap': parameter 1\"\n      });\n    }\n    args.push(curArg);\n  }\n  {\n    let curArg = arguments[1];\n    curArg = conversions[\"DOMString\"](curArg, {\n      context: \"Failed to execute 'removeNamedItemNS' on 'NamedNodeMap': parameter 2\"\n    });\n    args.push(curArg);\n  }\n  return utils.tryWrapperForImpl(this[impl].removeNamedItemNS(...args));\n};\n\nObject.defineProperty(NamedNodeMap.prototype, \"length\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"length\"];\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(NamedNodeMap.prototype, Symbol.toStringTag, {\n  value: \"NamedNodeMap\",\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\n\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj, { context = \"The provided value\" } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'NamedNodeMap'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(NamedNodeMap.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(NamedNodeMap.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {},\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n\n    obj = new Proxy(obj, {\n      get(target, P, receiver) {\n        if (typeof P === \"symbol\") {\n          return Reflect.get(target, P, receiver);\n        }\n        const desc = this.getOwnPropertyDescriptor(target, P);\n        if (desc === undefined) {\n          const parent = Object.getPrototypeOf(target);\n          if (parent === null) {\n            return undefined;\n          }\n          return Reflect.get(target, P, receiver);\n        }\n        if (!desc.get && !desc.set) {\n          return desc.value;\n        }\n        const getter = desc.get;\n        if (getter === undefined) {\n          return undefined;\n        }\n        return Reflect.apply(getter, receiver, []);\n      },\n\n      has(target, P) {\n        if (typeof P === \"symbol\") {\n          return Reflect.has(target, P);\n        }\n        const desc = this.getOwnPropertyDescriptor(target, P);\n        if (desc !== undefined) {\n          return true;\n        }\n        const parent = Object.getPrototypeOf(target);\n        if (parent !== null) {\n          return Reflect.has(parent, P);\n        }\n        return false;\n      },\n\n      ownKeys(target) {\n        const keys = new Set();\n\n        for (const key of target[impl][utils.supportedPropertyIndices]) {\n          keys.add(`${key}`);\n        }\n\n        for (const key of target[impl][utils.supportedPropertyNames]) {\n          if (!(key in target)) {\n            keys.add(`${key}`);\n          }\n        }\n\n        for (const key of Reflect.ownKeys(target)) {\n          keys.add(key);\n        }\n        return [...keys];\n      },\n\n      getOwnPropertyDescriptor(target, P) {\n        if (typeof P === \"symbol\") {\n          return Reflect.getOwnPropertyDescriptor(target, P);\n        }\n        let ignoreNamedProps = false;\n\n        if (utils.isArrayIndexPropName(P)) {\n          const index = P >>> 0;\n          const indexedValue = target[impl].item(index);\n          if (indexedValue !== null) {\n            return {\n              writable: false,\n              enumerable: true,\n              configurable: true,\n              value: utils.tryWrapperForImpl(indexedValue)\n            };\n          }\n          ignoreNamedProps = true;\n        }\n\n        const namedValue = target[impl].getNamedItem(P);\n\n        if (namedValue !== null && !(P in target) && !ignoreNamedProps) {\n          return {\n            writable: false,\n            enumerable: false,\n            configurable: true,\n            value: utils.tryWrapperForImpl(namedValue)\n          };\n        }\n\n        return Reflect.getOwnPropertyDescriptor(target, P);\n      },\n\n      set(target, P, V, receiver) {\n        if (typeof P === \"symbol\") {\n          return Reflect.set(target, P, V, receiver);\n        }\n        if (target === receiver) {\n          utils.isArrayIndexPropName(P);\n\n          typeof P === \"string\" && !utils.isArrayIndexPropName(P);\n        }\n        let ownDesc;\n\n        if (utils.isArrayIndexPropName(P)) {\n          const index = P >>> 0;\n          const indexedValue = target[impl].item(index);\n          if (indexedValue !== null) {\n            ownDesc = {\n              writable: false,\n              enumerable: true,\n              configurable: true,\n              value: utils.tryWrapperForImpl(indexedValue)\n            };\n          }\n        }\n\n        if (ownDesc === undefined) {\n          ownDesc = Reflect.getOwnPropertyDescriptor(target, P);\n        }\n        if (ownDesc === undefined) {\n          const parent = Reflect.getPrototypeOf(target);\n          if (parent !== null) {\n            return Reflect.set(parent, P, V, receiver);\n          }\n          ownDesc = { writable: true, enumerable: true, configurable: true, value: undefined };\n        }\n        if (!ownDesc.writable) {\n          return false;\n        }\n        if (!utils.isObject(receiver)) {\n          return false;\n        }\n        const existingDesc = Reflect.getOwnPropertyDescriptor(receiver, P);\n        let valueDesc;\n        if (existingDesc !== undefined) {\n          if (existingDesc.get || existingDesc.set) {\n            return false;\n          }\n          if (!existingDesc.writable) {\n            return false;\n          }\n          valueDesc = { value: V };\n        } else {\n          valueDesc = { writable: true, enumerable: true, configurable: true, value: V };\n        }\n        return Reflect.defineProperty(receiver, P, valueDesc);\n      },\n\n      defineProperty(target, P, desc) {\n        if (typeof P === \"symbol\") {\n          return Reflect.defineProperty(target, P, desc);\n        }\n\n        if (utils.isArrayIndexPropName(P)) {\n          return false;\n        }\n        if (!utils.hasOwn(target, P)) {\n          const creating = !(target[impl].getNamedItem(P) !== null);\n          if (!creating) {\n            return false;\n          }\n        }\n        return Reflect.defineProperty(target, P, desc);\n      },\n\n      deleteProperty(target, P) {\n        if (typeof P === \"symbol\") {\n          return Reflect.deleteProperty(target, P);\n        }\n\n        if (utils.isArrayIndexPropName(P)) {\n          const index = P >>> 0;\n          return !(target[impl].item(index) !== null);\n        }\n\n        if (target[impl].getNamedItem(P) !== null && !(P in target)) {\n          return false;\n        }\n\n        return Reflect.deleteProperty(target, P);\n      },\n\n      preventExtensions() {\n        return false;\n      }\n    });\n\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: NamedNodeMap,\n  expose: {\n    Window: { NamedNodeMap }\n  }\n}; // iface\nmodule.exports = iface;\n\nconst Impl = require(\"../attributes/NamedNodeMap-impl.js\");\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}