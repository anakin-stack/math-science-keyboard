{"ast":null,"code":"var _jsxFileName = \"G:\\\\scientificKeyboard\\\\keyboard\\\\src\\\\components\\\\scientificKeyboard .js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport MathJax from 'mathjax';\nimport { Button, Grid, colors } from '@mui/material';\nimport \"../App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScientificKeyboard = _ref => {\n  _s();\n  let {\n    handleInput\n  } = _ref;\n  const [keys, setKeys] = useState([\"\\\\sin\", \"\\\\cos\", \"\\\\tan\", \"\\\\cot\", \"\\\\sec\", \"\\\\csc\", \"\\\\arcsin\", \"\\\\arccos\", \"\\\\arctan\", \"\\\\text{acot}\", \"\\\\text{asec}\", \"\\\\text{acsc}\", \"\\\\log\", \"\\\\ln\", \"\\\\exp\", \"\\\\sqrt{}\", \"x^n\", \"x^2\", \"x^3\", \"\\\\int\", \"\\\\iint\", \"\\\\iiint\", \"\\\\oint\", \"\\\\oiint\", \"\\\\oiiint\", \"\\\\nabla\", \"(\", \")\", \"[\", \"]\", \"{{}\", \"}\", \"\\\\pi\", \"\\\\text{e}\", \"\\\\varphi\", \"\\\\gamma\", \"\\\\phi\", \"\\\\theta\", \"\\\\lambda\", \"\\\\mu\", \"\\\\nu\", \"\\\\rho\", \"\\\\sigma\", \"\\\\tau\", \"\\\\omega\", \"<\", \">\", \"=\", \"\\\\neq\", \"\\\\approx\", \"\\\\cong\", \"\\\\equiv\", \"\\\\not\\\\equiv\", \"\\\\prec\", \"\\\\succ\", \"\\\\preceq\", \"\\\\succeq\", \"\\\\in\", \"\\\\notin\", \"\\\\ni\", \"\\\\not\\\\ni\", \"\\\\cup\", \"\\\\cap\", \"\\\\subseteq\", \"\\\\supseteq\", \"\\\\subset\", \"\\\\supset\", \"\\\\varnothing\", \"\\\\forall\", \"\\\\exists\", \"\\\\nexists\", \"\\\\Delta\", \"\\\\partial\", \"\\\\infty\", \"\\\\sum\", \"\\\\prod\", \"\\\\coprod\", \"!\", \"%\", \"\\\\pm\", \"/\", \"*\", \"-\", \"+\", \".\", \"\\\\wedge\", \"\\\\ldots\", \"\\\\vdots\", \"\\\\therefore\", \"\\\\leftrightarrow\", \"\\\\rightarrow\", \"\\\\leftarrow\", \"\\\\uparrow\", \"\\\\downarrow\", \"\\\\oplus\", \"\\\\otimes\", \"\\\\ominus\", \"\\\\oslash\", \"\\\\dotplus\", \"\\\\odot\", \"\\\\circledcirc\", \"\\\\circledast\", \"\\\\circledot\", \"\\\\boxplus\", \"\\\\boxminus\", \"\\\\boxtimes\", \"\\\\boxdot\", \"\\\\sqrt[3]{}\", \"\\\\sqrt[4]{}\", \"\\\\propto\", \"^\\\\circ\", \"\\\\rightangle\", \"\\\\angle\", \"\\\\measuredangle\", \"\\\\sphericalangle\", \"\\\\mid\", \"\\\\parallel\", \"\\\\nparallel\", \"\\\\land\", \"\\\\lor\", \"\\\\hbar\", \"\\\\sim\", \"\\\\backsim\", \"\\\\wr\", \"\\\\asymp\", \"\\\\nsim\", \"\\\\eqsim\", \"\\\\lesssim\", \"\\\\gtrsim\", \"\\\\lessapprox\", \"\\\\gtrapprox\", \"\\\\precapprox\", \"\\\\succapprox\", \"\\\\subsetneq\", \"\\\\supsetneq\", \"\\\\leq\", \"\\\\geq\", \"\\\\leqq\", \"\\\\geqq\", \"\\\\nleq\", \"\\\\ngeq\", \"\\\\ll\", \"\\\\gg\", \"\\\\between\", \"\\\\nasymp\", \"\\\\pitchfork\", \"\\\\because\"]);\n  const [input, setInput] = useState('');\n  const handleClick = value => {\n    handleInput(value);\n    console.log(\"clicked\", value);\n  };\n  useEffect(() => {\n    MathJax.Hub.Config({\n      tex2jax: {\n        inlineMath: [['$', '$'], ['\\\\(', '\\\\)']],\n        processEscapes: true\n      }\n    });\n    MathJax.Hub.Queue(['Typeset', MathJax.Hub]);\n  }, []);\n  const [numb, setNumb] = useState(\" \");\n  const handleChange = event => {\n    setNumb(event.target.value);\n    console.log(\"changed the value when pressed the numbers \");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"scientific-keyboard\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 0.6,\n      children: keys.map(symbol => /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          margin: '5px'\n        },\n        children: `$${symbol}$`\n      }, symbol, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(ScientificKeyboard, \"++kNxxF6kCY7BHaH603a/R6PP1w=\");\n_c = ScientificKeyboard;\nexport default ScientificKeyboard;\nvar _c;\n$RefreshReg$(_c, \"ScientificKeyboard\");","map":{"version":3,"names":["useState","MathJax","Button","Grid","colors","jsxDEV","_jsxDEV","ScientificKeyboard","_ref","_s","handleInput","keys","setKeys","input","setInput","handleClick","value","console","log","useEffect","Hub","Config","tex2jax","inlineMath","processEscapes","Queue","numb","setNumb","handleChange","event","target","className","children","container","spacing","map","symbol","style","margin","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["G:/scientificKeyboard/keyboard/src/components/scientificKeyboard .js"],"sourcesContent":["import  { useState } from \"react\";\r\nimport MathJax from 'mathjax';\r\n\r\n\r\n\r\nimport { Button, Grid, colors } from '@mui/material';\r\nimport \"../App.css\"\r\n\r\n\r\n\r\n\r\n\r\nconst ScientificKeyboard = ({ handleInput }) => {\r\n  const [keys, setKeys] = useState([\"\\\\sin\", \"\\\\cos\", \"\\\\tan\", \"\\\\cot\", \"\\\\sec\", \"\\\\csc\", \"\\\\arcsin\", \"\\\\arccos\", \"\\\\arctan\", \"\\\\text{acot}\", \"\\\\text{asec}\", \"\\\\text{acsc}\", \"\\\\log\", \"\\\\ln\", \"\\\\exp\", \"\\\\sqrt{}\", \"x^n\", \"x^2\", \"x^3\", \"\\\\int\", \"\\\\iint\", \"\\\\iiint\", \"\\\\oint\", \"\\\\oiint\", \"\\\\oiiint\", \"\\\\nabla\", \"(\", \")\", \"[\", \"]\", \"{{}\", \"}\", \"\\\\pi\", \"\\\\text{e}\", \"\\\\varphi\", \"\\\\gamma\", \"\\\\phi\", \"\\\\theta\", \"\\\\lambda\", \"\\\\mu\", \"\\\\nu\", \"\\\\rho\", \"\\\\sigma\", \"\\\\tau\", \"\\\\omega\", \"<\", \">\", \"=\", \"\\\\neq\", \"\\\\approx\", \"\\\\cong\", \"\\\\equiv\", \"\\\\not\\\\equiv\", \"\\\\prec\", \"\\\\succ\", \"\\\\preceq\", \"\\\\succeq\", \"\\\\in\", \"\\\\notin\", \"\\\\ni\", \"\\\\not\\\\ni\", \"\\\\cup\", \"\\\\cap\", \"\\\\subseteq\", \"\\\\supseteq\", \"\\\\subset\", \"\\\\supset\", \"\\\\varnothing\", \"\\\\forall\", \"\\\\exists\", \"\\\\nexists\", \"\\\\Delta\", \"\\\\partial\", \"\\\\infty\", \"\\\\sum\", \"\\\\prod\", \"\\\\coprod\", \"!\", \"%\", \"\\\\pm\", \"/\", \"*\", \"-\", \"+\", \".\", \"\\\\wedge\", \"\\\\ldots\", \"\\\\vdots\", \"\\\\therefore\", \"\\\\leftrightarrow\", \"\\\\rightarrow\", \"\\\\leftarrow\", \"\\\\uparrow\", \"\\\\downarrow\", \"\\\\oplus\", \"\\\\otimes\", \"\\\\ominus\", \"\\\\oslash\", \"\\\\dotplus\", \"\\\\odot\", \"\\\\circledcirc\", \"\\\\circledast\", \"\\\\circledot\", \"\\\\boxplus\", \"\\\\boxminus\", \"\\\\boxtimes\", \"\\\\boxdot\", \"\\\\sqrt[3]{}\", \"\\\\sqrt[4]{}\", \"\\\\propto\", \"^\\\\circ\", \"\\\\rightangle\", \"\\\\angle\", \"\\\\measuredangle\", \"\\\\sphericalangle\", \"\\\\mid\", \"\\\\parallel\", \"\\\\nparallel\", \"\\\\land\", \"\\\\lor\", \"\\\\hbar\", \"\\\\sim\", \"\\\\backsim\", \"\\\\wr\", \"\\\\asymp\", \"\\\\nsim\", \"\\\\eqsim\", \"\\\\lesssim\", \"\\\\gtrsim\", \"\\\\lessapprox\", \"\\\\gtrapprox\", \"\\\\precapprox\", \"\\\\succapprox\", \"\\\\subsetneq\", \"\\\\supsetneq\", \"\\\\leq\", \"\\\\geq\", \"\\\\leqq\", \"\\\\geqq\", \"\\\\nleq\", \"\\\\ngeq\", \"\\\\ll\", \"\\\\gg\", \"\\\\between\", \"\\\\nasymp\", \"\\\\pitchfork\", \"\\\\because\"]);\r\n\r\n\r\n\r\n  const [input, setInput] = useState('');\r\n\r\n  const handleClick = (value) => {\r\n\r\n    handleInput(value);\r\n    console.log(\"clicked\", value);\r\n\r\n\r\n\r\n  };\r\n  useEffect(() => {\r\n    MathJax.Hub.Config({\r\n      tex2jax: {\r\n        inlineMath: [['$', '$'], ['\\\\(', '\\\\)']],\r\n        processEscapes: true\r\n      }\r\n    });\r\n\r\n    MathJax.Hub.Queue(['Typeset', MathJax.Hub]);\r\n  }, []);\r\n\r\n\r\n\r\n  const [numb, setNumb] = useState(\" \")\r\n  const handleChange = (event) => {\r\n    setNumb(event.target.value);\r\n    console.log(\"changed the value when pressed the numbers \");\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"scientific-keyboard\">\r\n      <Grid container spacing={0.6}>\r\n      {keys.map(symbol => (\r\n        <span key={symbol} style={{ margin: '5px' }}>\r\n          {`$${symbol}$`}\r\n        </span>\r\n      ))}\r\n      </Grid>\r\n\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\n\r\n\r\n\r\nexport default ScientificKeyboard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}