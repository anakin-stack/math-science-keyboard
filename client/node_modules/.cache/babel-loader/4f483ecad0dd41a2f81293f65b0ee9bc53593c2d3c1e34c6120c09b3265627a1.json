{"ast":null,"code":"\"use strict\";\n\nconst idlUtils = require(\"../living/generated/utils\");\nconst nodeTypes = require(\"../living/node-type\");\nconst {\n  domSymbolTree\n} = require(\"../living/helpers/internal-constants\");\n// Serialization only requires a subset of the tree adapter interface.\n\n// Tree traversing\nexports.getFirstChild = node => node.firstChild;\nexports.getChildNodes = node => node.childNodesForSerializing || domSymbolTree.childrenToArray(node);\nexports.getParentNode = node => node.parentNode;\nexports.getAttrList = node => idlUtils.wrapperForImpl(node._attributes);\n\n// Node data\nexports.getTagName = element => element._qualifiedName; // https://github.com/inikulin/parse5/issues/231\n\nexports.getNamespaceURI = element => element.namespaceURI;\nexports.getTextNodeContent = exports.getCommentNodeContent = node => node.data;\nexports.getDocumentTypeNodeName = node => node.name;\nexports.getDocumentTypeNodePublicId = node => node.publicId;\nexports.getDocumentTypeNodeSystemId = node => node.systemId;\nexports.getTemplateContent = templateElement => templateElement._templateContents;\nexports.getDocumentMode = document => document._mode;\n\n// Node types\n\nexports.isTextNode = node => node.nodeType === nodeTypes.TEXT_NODE;\nexports.isCommentNode = node => node.nodeType === nodeTypes.COMMENT_NODE;\nexports.isDocumentTypeNode = node => node.nodeType === nodeTypes.DOCUMENT_TYPE_NODE;\nexports.isElementNode = node => node.nodeType === nodeTypes.ELEMENT_NODE;","map":{"version":3,"names":["idlUtils","require","nodeTypes","domSymbolTree","exports","getFirstChild","node","firstChild","getChildNodes","childNodesForSerializing","childrenToArray","getParentNode","parentNode","getAttrList","wrapperForImpl","_attributes","getTagName","element","_qualifiedName","getNamespaceURI","namespaceURI","getTextNodeContent","getCommentNodeContent","data","getDocumentTypeNodeName","name","getDocumentTypeNodePublicId","publicId","getDocumentTypeNodeSystemId","systemId","getTemplateContent","templateElement","_templateContents","getDocumentMode","document","_mode","isTextNode","nodeType","TEXT_NODE","isCommentNode","COMMENT_NODE","isDocumentTypeNode","DOCUMENT_TYPE_NODE","isElementNode","ELEMENT_NODE"],"sources":["G:/scientificKeyboard/keyboard/node_modules/mathjax-node/node_modules/jsdom/lib/jsdom/browser/parse5-adapter-serialization.js"],"sourcesContent":["\"use strict\";\nconst idlUtils = require(\"../living/generated/utils\");\nconst nodeTypes = require(\"../living/node-type\");\nconst { domSymbolTree } = require(\"../living/helpers/internal-constants\");\n// Serialization only requires a subset of the tree adapter interface.\n\n// Tree traversing\nexports.getFirstChild = node => node.firstChild;\n\nexports.getChildNodes = node => node.childNodesForSerializing || domSymbolTree.childrenToArray(node);\n\nexports.getParentNode = node => node.parentNode;\n\nexports.getAttrList = node => idlUtils.wrapperForImpl(node._attributes);\n\n// Node data\nexports.getTagName = element => element._qualifiedName; // https://github.com/inikulin/parse5/issues/231\n\nexports.getNamespaceURI = element => element.namespaceURI;\n\nexports.getTextNodeContent = exports.getCommentNodeContent = node => node.data;\n\nexports.getDocumentTypeNodeName = node => node.name;\n\nexports.getDocumentTypeNodePublicId = node => node.publicId;\n\nexports.getDocumentTypeNodeSystemId = node => node.systemId;\n\nexports.getTemplateContent = templateElement => templateElement._templateContents;\n\nexports.getDocumentMode = document => document._mode;\n\n// Node types\n\nexports.isTextNode = node => node.nodeType === nodeTypes.TEXT_NODE;\n\nexports.isCommentNode = node => node.nodeType === nodeTypes.COMMENT_NODE;\n\nexports.isDocumentTypeNode = node => node.nodeType === nodeTypes.DOCUMENT_TYPE_NODE;\n\nexports.isElementNode = node => node.nodeType === nodeTypes.ELEMENT_NODE;\n"],"mappings":"AAAA,YAAY;;AACZ,MAAMA,QAAQ,GAAGC,OAAO,CAAC,2BAA2B,CAAC;AACrD,MAAMC,SAAS,GAAGD,OAAO,CAAC,qBAAqB,CAAC;AAChD,MAAM;EAAEE;AAAc,CAAC,GAAGF,OAAO,CAAC,sCAAsC,CAAC;AACzE;;AAEA;AACAG,OAAO,CAACC,aAAa,GAAGC,IAAI,IAAIA,IAAI,CAACC,UAAU;AAE/CH,OAAO,CAACI,aAAa,GAAGF,IAAI,IAAIA,IAAI,CAACG,wBAAwB,IAAIN,aAAa,CAACO,eAAe,CAACJ,IAAI,CAAC;AAEpGF,OAAO,CAACO,aAAa,GAAGL,IAAI,IAAIA,IAAI,CAACM,UAAU;AAE/CR,OAAO,CAACS,WAAW,GAAGP,IAAI,IAAIN,QAAQ,CAACc,cAAc,CAACR,IAAI,CAACS,WAAW,CAAC;;AAEvE;AACAX,OAAO,CAACY,UAAU,GAAGC,OAAO,IAAIA,OAAO,CAACC,cAAc,CAAC,CAAC;;AAExDd,OAAO,CAACe,eAAe,GAAGF,OAAO,IAAIA,OAAO,CAACG,YAAY;AAEzDhB,OAAO,CAACiB,kBAAkB,GAAGjB,OAAO,CAACkB,qBAAqB,GAAGhB,IAAI,IAAIA,IAAI,CAACiB,IAAI;AAE9EnB,OAAO,CAACoB,uBAAuB,GAAGlB,IAAI,IAAIA,IAAI,CAACmB,IAAI;AAEnDrB,OAAO,CAACsB,2BAA2B,GAAGpB,IAAI,IAAIA,IAAI,CAACqB,QAAQ;AAE3DvB,OAAO,CAACwB,2BAA2B,GAAGtB,IAAI,IAAIA,IAAI,CAACuB,QAAQ;AAE3DzB,OAAO,CAAC0B,kBAAkB,GAAGC,eAAe,IAAIA,eAAe,CAACC,iBAAiB;AAEjF5B,OAAO,CAAC6B,eAAe,GAAGC,QAAQ,IAAIA,QAAQ,CAACC,KAAK;;AAEpD;;AAEA/B,OAAO,CAACgC,UAAU,GAAG9B,IAAI,IAAIA,IAAI,CAAC+B,QAAQ,KAAKnC,SAAS,CAACoC,SAAS;AAElElC,OAAO,CAACmC,aAAa,GAAGjC,IAAI,IAAIA,IAAI,CAAC+B,QAAQ,KAAKnC,SAAS,CAACsC,YAAY;AAExEpC,OAAO,CAACqC,kBAAkB,GAAGnC,IAAI,IAAIA,IAAI,CAAC+B,QAAQ,KAAKnC,SAAS,CAACwC,kBAAkB;AAEnFtC,OAAO,CAACuC,aAAa,GAAGrC,IAAI,IAAIA,IAAI,CAAC+B,QAAQ,KAAKnC,SAAS,CAAC0C,YAAY"},"metadata":{},"sourceType":"script","externalDependencies":[]}