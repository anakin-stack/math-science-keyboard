{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst DOMException = require(\"domexception\");\nconst Event = require(\"../generated/Event\");\nconst FileList = require(\"../generated/FileList\");\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\nconst idlUtils = require(\"../generated/utils\");\nconst DefaultConstraintValidationImpl = require(\"../constraint-validation/DefaultConstraintValidation-impl\").implementation;\nconst ValidityState = require(\"../generated/ValidityState\");\nconst {\n  mixin\n} = require(\"../../utils\");\nconst {\n  domSymbolTree,\n  cloningSteps\n} = require(\"../helpers/internal-constants\");\nconst {\n  closest\n} = require(\"../helpers/traversal\");\nconst {\n  getLabelsForLabelable\n} = require(\"../helpers/form-controls\");\nconst {\n  isDisabled,\n  isValidEmailAddress,\n  isValidAbsoluteURL,\n  sanitizeValueByType\n} = require(\"../helpers/form-controls\");\nconst {\n  parseFloatingPointNumber,\n  asciiCaseInsensitiveMatch,\n  splitOnCommas\n} = require(\"../helpers/strings\");\nconst {\n  parseDateString,\n  parseLocalDateAndTimeString,\n  parseMonthString,\n  parseTimeString,\n  parseWeekString\n} = require(\"../helpers/dates-and-times\");\nconst filesSymbol = Symbol(\"files\");\nconst selectAllowedTypes = new Set([\"text\", \"search\", \"tel\", \"url\", \"password\", \"email\", \"date\", \"month\", \"week\", \"time\", \"datetime-local\", \"color\", \"file\", \"number\"]);\nconst variableLengthSelectionAllowedTypes = new Set([\"text\", \"search\", \"tel\", \"url\", \"password\"]);\nconst maxMinStepTypes = new Set([\"date\", \"month\", \"week\", \"time\", \"datetime-local\", \"number\", \"range\", \"datetime\"]);\n\n// https://html.spec.whatwg.org/multipage/input.html#concept-input-apply\nconst applicableTypesForAttribute = {\n  max: maxMinStepTypes,\n  min: maxMinStepTypes,\n  step: maxMinStepTypes,\n  pattern: new Set([\"text\", \"search\", \"tel\", \"url\", \"email\", \"password\"])\n};\nfunction allowSelect(type) {\n  return selectAllowedTypes.has(type.toLowerCase());\n}\nfunction allowVariableLengthSelection(type) {\n  return variableLengthSelectionAllowedTypes.has(type.toLowerCase());\n}\nconst valueAttributeDefaultMode = new Set([\"hidden\", \"submit\", \"image\", \"reset\", \"button\"]);\nconst valueAttributeDefaultOnMode = new Set([\"checkbox\", \"radio\"]);\nfunction valueAttributeMode(type) {\n  if (valueAttributeDefaultMode.has(type)) {\n    return \"default\";\n  }\n  if (valueAttributeDefaultOnMode.has(type)) {\n    return \"default/on\";\n  }\n  if (type === \"file\") {\n    return \"filename\";\n  }\n  return \"value\";\n}\n\n// Necessary because Date.UTC() treats year within [0, 99] as [1900, 1999].\nfunction getUTCMs(year) {\n  let month = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  let day = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  let hour = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  let minute = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n  let second = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n  let millisecond = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 0;\n  if (year > 99 || year < 0) {\n    return Date.UTC(year, month - 1, day, hour, minute, second, millisecond);\n  }\n  const d = new Date(0);\n  d.setUTCFullYear(year);\n  d.setUTCMonth(month - 1);\n  d.setUTCDate(day);\n  d.setUTCHours(hour);\n  d.setUTCMinutes(minute);\n  d.setUTCSeconds(second, millisecond);\n  return d.valueOf();\n}\nconst dayOfWeekRelMondayLUT = [-1, 0, 1, 2, 3, -3, -2];\nconst convertStringToNumberByTypeMap = new Map([[\n// https://html.spec.whatwg.org/multipage/input.html#date-state-(type=date):concept-input-value-string-number\n\"date\", input => {\n  const date = parseDateString(input);\n  if (date === null) {\n    return NaN;\n  }\n  return getUTCMs(date.year, date.month, date.day);\n}], [\n// https://html.spec.whatwg.org/multipage/input.html#month-state-(type=month):concept-input-value-string-number\n\"month\", input => {\n  const date = parseMonthString(input);\n  if (date === null) {\n    return NaN;\n  }\n  return (date.year - 1970) * 12 + (date.month - 1);\n}], [\n// https://html.spec.whatwg.org/multipage/input.html#week-state-(type=week):concept-input-value-string-number\n\"week\", input => {\n  const date = parseWeekString(input);\n  if (date === null) {\n    return NaN;\n  }\n  const dateObj = new Date(getUTCMs(date.year));\n  // An HTML week starts on Monday, while 0 represents Sunday. Account for such.\n  const dayOfWeekRelMonday = dayOfWeekRelMondayLUT[dateObj.getUTCDay()];\n  return dateObj.setUTCDate(1 + 7 * (date.week - 1) - dayOfWeekRelMonday);\n}], [\n// https://html.spec.whatwg.org/multipage/input.html#time-state-(type=time):concept-input-value-string-number\n\"time\", input => {\n  const time = parseTimeString(input);\n  if (time === null) {\n    return NaN;\n  }\n  return ((time.hour * 60 + time.minute) * 60 + time.second) * 1000 + time.millisecond;\n}], [\n// https://html.spec.whatwg.org/multipage/input.html#local-date-and-time-state-(type=datetime-local):concept-input-value-string-number\n\"datetime-local\", input => {\n  const dateAndTime = parseLocalDateAndTimeString(input);\n  if (dateAndTime === null) {\n    return NaN;\n  }\n  const {\n    date: {\n      year,\n      month,\n      day\n    },\n    time: {\n      hour,\n      minute,\n      second,\n      millisecond\n    }\n  } = dateAndTime;\n  // Doesn't quite matter whether or not UTC is used, since the offset from 1970-01-01 local time is returned.\n  return getUTCMs(year, month, day, hour, minute, second, millisecond);\n}],\n// https://html.spec.whatwg.org/multipage/input.html#number-state-(type=number):concept-input-value-string-number\n[\"number\", parseFloatingPointNumber],\n// https://html.spec.whatwg.org/multipage/input.html#range-state-(type=range):concept-input-value-string-number\n[\"range\", parseFloatingPointNumber]]);\nclass HTMLInputElementImpl extends HTMLElementImpl {\n  constructor(args, privateData) {\n    super(args, privateData);\n    this._selectionStart = this._selectionEnd = 0;\n    this._selectionDirection = \"none\";\n    this._value = null;\n    this._dirtyValue = false;\n    this._checkedness = false;\n    this._dirtyCheckedness = false;\n\n    // This is used to implement the canceled activation steps for radio inputs:\n    // \"The canceled activation steps consist of setting the checkedness and the element's indeterminate IDL\n    // attribute back to the values they had before the pre-click activation steps were run.\"\n    this._preCheckedRadioState = null;\n    this.indeterminate = false;\n    this._customValidityErrorMessage = \"\";\n    this._labels = null;\n  }\n\n  // https://html.spec.whatwg.org/multipage/input.html#concept-input-value-string-number\n  get _convertStringToNumber() {\n    return convertStringToNumberByTypeMap.get(this.type);\n  }\n  _getValue() {\n    return this._value;\n  }\n  _preClickActivationSteps() {\n    if (this.type === \"checkbox\") {\n      this.checked = !this.checked;\n    } else if (this.type === \"radio\") {\n      this._preCheckedRadioState = this.checked;\n      this.checked = true;\n    }\n  }\n  _canceledActivationSteps() {\n    if (this.type === \"checkbox\") {\n      this.checked = !this.checked;\n    } else if (this.type === \"radio\") {\n      if (this._preCheckedRadioState !== null) {\n        this.checked = this._preCheckedRadioState;\n        this._preCheckedRadioState = null;\n      }\n    }\n  }\n  _activationBehavior() {\n    if (isDisabled(this)) {\n      return;\n    }\n    if (this.type === \"checkbox\" || this.type === \"radio\" && !this._preCheckedRadioState) {\n      const inputEvent = Event.createImpl([\"input\", {\n        isTrusted: true,\n        bubbles: true,\n        cancelable: true\n      }], {});\n      this.dispatchEvent(inputEvent);\n      const changeEvent = Event.createImpl([\"change\", {\n        bubbles: true,\n        cancelable: true\n      }], {});\n      this.dispatchEvent(changeEvent);\n    } else if (this.type === \"submit\") {\n      const {\n        form\n      } = this;\n      if (form) {\n        form._doSubmit();\n      }\n    }\n  }\n  _attrModified(name) {\n    const wrapper = idlUtils.wrapperForImpl(this);\n    if (!this._dirtyValue && name === \"value\") {\n      this._value = sanitizeValueByType(this, wrapper.defaultValue);\n    }\n    if (!this._dirtyCheckedness && name === \"checked\") {\n      this._checkedness = wrapper.defaultChecked;\n      if (this._checkedness) {\n        this._removeOtherRadioCheckedness();\n      }\n    }\n    if (name === \"name\" || name === \"type\") {\n      if (this._checkedness) {\n        this._removeOtherRadioCheckedness();\n      }\n    }\n    super._attrModified.apply(this, arguments);\n  }\n  _formReset() {\n    const wrapper = idlUtils.wrapperForImpl(this);\n    this._value = sanitizeValueByType(this, wrapper.defaultValue);\n    this._dirtyValue = false;\n    this._checkedness = wrapper.defaultChecked;\n    this._dirtyCheckedness = false;\n    if (this._checkedness) {\n      this._removeOtherRadioCheckedness();\n    }\n  }\n  _changedFormOwner() {\n    if (this._checkedness) {\n      this._removeOtherRadioCheckedness();\n    }\n  }\n  get _otherRadioGroupElements() {\n    const wrapper = idlUtils.wrapperForImpl(this);\n    const root = this._radioButtonGroupRoot;\n    if (!root) {\n      return [];\n    }\n    const result = [];\n    const name = wrapper.name.toLowerCase();\n    const descendants = domSymbolTree.treeIterator(root);\n    for (const candidate of descendants) {\n      if (candidate._radioButtonGroupRoot !== root) {\n        continue;\n      }\n      const candidateWrapper = idlUtils.wrapperForImpl(candidate);\n      if (!candidateWrapper.name || candidateWrapper.name.toLowerCase() !== name) {\n        continue;\n      }\n      if (candidate !== this) {\n        result.push(candidate);\n      }\n    }\n    return result;\n  }\n  _removeOtherRadioCheckedness() {\n    for (const radioGroupElement of this._otherRadioGroupElements) {\n      radioGroupElement._checkedness = false;\n    }\n  }\n  get _radioButtonGroupRoot() {\n    const wrapper = idlUtils.wrapperForImpl(this);\n    if (this.type !== \"radio\" || !wrapper.name) {\n      return null;\n    }\n    let e = domSymbolTree.parent(this);\n    while (e) {\n      // root node of this home sub tree\n      // or the form element we belong to\n      if (!domSymbolTree.parent(e) || e.nodeName.toUpperCase() === \"FORM\") {\n        return e;\n      }\n      e = domSymbolTree.parent(e);\n    }\n    return null;\n  }\n  _isRadioGroupChecked() {\n    if (this.checked) {\n      return true;\n    }\n    return this._otherRadioGroupElements.some(radioGroupElement => radioGroupElement.checked);\n  }\n  get labels() {\n    return getLabelsForLabelable(this);\n  }\n  get form() {\n    return closest(this, \"form\");\n  }\n  get checked() {\n    return this._checkedness;\n  }\n  set checked(checked) {\n    this._checkedness = Boolean(checked);\n    this._dirtyCheckedness = true;\n    if (this._checkedness) {\n      this._removeOtherRadioCheckedness();\n    }\n  }\n  get value() {\n    switch (valueAttributeMode(this.type)) {\n      // https://html.spec.whatwg.org/multipage/input.html#dom-input-value-value\n      case \"value\":\n        return this._value !== null ? this._value : \"\";\n      // https://html.spec.whatwg.org/multipage/input.html#dom-input-value-default\n      case \"default\":\n        {\n          const attr = this.getAttribute(\"value\");\n          return attr !== null ? attr : \"\";\n        }\n      // https://html.spec.whatwg.org/multipage/input.html#dom-input-value-default-on\n      case \"default/on\":\n        {\n          const attr = this.getAttribute(\"value\");\n          return attr !== null ? attr : \"on\";\n        }\n      // https://html.spec.whatwg.org/multipage/input.html#dom-input-value-filename\n      case \"filename\":\n        return this.files.length ? \"C:\\\\fakepath\\\\\" + this.files[0].name : \"\";\n      default:\n        throw new Error(\"jsdom internal error: unknown value attribute mode\");\n    }\n  }\n  set value(val) {\n    switch (valueAttributeMode(this.type)) {\n      // https://html.spec.whatwg.org/multipage/input.html#dom-input-value-value\n      case \"value\":\n        {\n          const oldValue = this._value;\n          if (val === null) {\n            this._value = null;\n          } else {\n            this._value = sanitizeValueByType(this, String(val));\n          }\n          this._dirtyValue = true;\n          if (oldValue !== this._value) {\n            this._selectionStart = 0;\n            this._selectionEnd = 0;\n            this._selectionDirection = \"none\";\n          }\n          break;\n        }\n\n      // https://html.spec.whatwg.org/multipage/input.html#dom-input-value-default\n      // https://html.spec.whatwg.org/multipage/input.html#dom-input-value-default-on\n      case \"default\":\n      case \"default/on\":\n        this.setAttribute(\"value\", val);\n        break;\n\n      // https://html.spec.whatwg.org/multipage/input.html#dom-input-value-filename\n      case \"filename\":\n        if (val === \"\") {\n          this.files.length = 0;\n        } else {\n          throw new DOMException(\"This input element accepts a filename, which may only be programmatically set to \" + \"the empty string.\", \"InvalidStateError\");\n        }\n        break;\n      default:\n        throw new Error(\"jsdom internal error: unknown value attribute mode\");\n    }\n  }\n  get files() {\n    if (this.type === \"file\") {\n      this[filesSymbol] = this[filesSymbol] || FileList.createImpl();\n    } else {\n      this[filesSymbol] = null;\n    }\n    return this[filesSymbol];\n  }\n  set files(value) {\n    if (this.type === \"file\" && value !== null) {\n      this[filesSymbol] = value;\n    }\n  }\n  get type() {\n    const type = this.getAttribute(\"type\");\n    return type ? type.toLowerCase() : \"text\";\n  }\n  set type(type) {\n    this.setAttribute(\"type\", type);\n  }\n  _dispatchSelectEvent() {\n    const event = this._ownerDocument.createEvent(\"HTMLEvents\");\n    event.initEvent(\"select\", true, true);\n    this.dispatchEvent(event);\n  }\n  _getValueLength() {\n    return typeof this.value === \"string\" ? this.value.length : 0;\n  }\n  select() {\n    if (!allowSelect(this.type)) {\n      return;\n    }\n    this._selectionStart = 0;\n    this._selectionEnd = this._getValueLength();\n    this._selectionDirection = \"none\";\n    this._dispatchSelectEvent();\n  }\n  get selectionStart() {\n    if (!allowVariableLengthSelection(this.type)) {\n      return null;\n    }\n    return this._selectionStart;\n  }\n  set selectionStart(start) {\n    if (!allowVariableLengthSelection(this.type)) {\n      throw new DOMException(\"The object is in an invalid state.\", \"InvalidStateError\");\n    }\n    this.setSelectionRange(start, Math.max(start, this._selectionEnd), this._selectionDirection);\n  }\n  get selectionEnd() {\n    if (!allowVariableLengthSelection(this.type)) {\n      return null;\n    }\n    return this._selectionEnd;\n  }\n  set selectionEnd(end) {\n    if (!allowVariableLengthSelection(this.type)) {\n      throw new DOMException(\"The object is in an invalid state.\", \"InvalidStateError\");\n    }\n    this.setSelectionRange(this._selectionStart, end, this._selectionDirection);\n  }\n  get selectionDirection() {\n    if (!allowVariableLengthSelection(this.type)) {\n      return null;\n    }\n    return this._selectionDirection;\n  }\n  set selectionDirection(dir) {\n    if (!allowVariableLengthSelection(this.type)) {\n      throw new DOMException(\"The object is in an invalid state.\", \"InvalidStateError\");\n    }\n    this.setSelectionRange(this._selectionStart, this._selectionEnd, dir);\n  }\n  setSelectionRange(start, end, dir) {\n    if (!allowVariableLengthSelection(this.type)) {\n      throw new DOMException(\"The object is in an invalid state.\", \"InvalidStateError\");\n    }\n    this._selectionEnd = Math.min(end, this._getValueLength());\n    this._selectionStart = Math.min(start, this._selectionEnd);\n    this._selectionDirection = dir === \"forward\" || dir === \"backward\" ? dir : \"none\";\n    this._dispatchSelectEvent();\n  }\n  setRangeText(repl, start, end) {\n    let selectionMode = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"preserve\";\n    if (!allowVariableLengthSelection(this.type)) {\n      throw new DOMException(\"The object is in an invalid state.\", \"InvalidStateError\");\n    }\n    if (arguments.length < 2) {\n      start = this._selectionStart;\n      end = this._selectionEnd;\n    } else if (start > end) {\n      throw new DOMException(\"The index is not in the allowed range.\", \"IndexSizeError\");\n    }\n    start = Math.min(start, this._getValueLength());\n    end = Math.min(end, this._getValueLength());\n    const val = this.value;\n    let selStart = this._selectionStart;\n    let selEnd = this._selectionEnd;\n    this.value = val.slice(0, start) + repl + val.slice(end);\n    const newEnd = start + this.value.length;\n    if (selectionMode === \"select\") {\n      this.setSelectionRange(start, newEnd);\n    } else if (selectionMode === \"start\") {\n      this.setSelectionRange(start, start);\n    } else if (selectionMode === \"end\") {\n      this.setSelectionRange(newEnd, newEnd);\n    } else {\n      // preserve\n      const delta = repl.length - (end - start);\n      if (selStart > end) {\n        selStart += delta;\n      } else if (selStart > start) {\n        selStart = start;\n      }\n      if (selEnd > end) {\n        selEnd += delta;\n      } else if (selEnd > start) {\n        selEnd = newEnd;\n      }\n      this.setSelectionRange(selStart, selEnd);\n    }\n  }\n  set maxLength(value) {\n    if (value < 0) {\n      throw new DOMException(\"The index is not in the allowed range.\", \"IndexSizeError\");\n    }\n    this.setAttribute(\"maxlength\", String(value));\n  }\n  get maxLength() {\n    if (!this.hasAttribute(\"maxlength\")) {\n      return 524288; // stole this from chrome\n    }\n\n    return parseInt(this.getAttribute(\"maxlength\"));\n  }\n  set minLength(value) {\n    if (value < 0) {\n      throw new DOMException(\"The index is not in the allowed range.\", \"IndexSizeError\");\n    }\n    this.setAttribute(\"minlength\", String(value));\n  }\n  get minLength() {\n    if (!this.hasAttribute(\"minlength\")) {\n      return 0;\n    }\n    return parseInt(this.getAttribute(\"minlength\"));\n  }\n  get size() {\n    if (!this.hasAttribute(\"size\")) {\n      return 20;\n    }\n    return parseInt(this.getAttribute(\"size\"));\n  }\n  set size(value) {\n    if (value <= 0) {\n      throw new DOMException(\"The index is not in the allowed range.\", \"IndexSizeError\");\n    }\n    this.setAttribute(\"size\", String(value));\n  }\n  get src() {\n    return conversions.USVString(this.getAttribute(\"src\"));\n  }\n  set src(value) {\n    this.setAttribute(\"src\", value);\n  }\n\n  // https://html.spec.whatwg.org/multipage/input.html#the-min-and-max-attributes\n  get _minimum() {\n    let min = this._defaultMinimum;\n    const attr = this.getAttribute(\"min\");\n    const convertStringToNumber = this._convertStringToNumber;\n    if (attr !== null && convertStringToNumber !== undefined) {\n      const parsed = convertStringToNumber(attr);\n      if (!isNaN(parsed)) {\n        min = parsed;\n      }\n    }\n    return min;\n  }\n  get _maximum() {\n    let max = this._defaultMaximum;\n    const attr = this.getAttribute(\"max\");\n    const convertStringToNumber = this._convertStringToNumber;\n    if (attr !== null && convertStringToNumber !== undefined) {\n      const parsed = convertStringToNumber(attr);\n      if (!isNaN(parsed)) {\n        max = parsed;\n      }\n    }\n    return max;\n  }\n  get _defaultMinimum() {\n    if (this.type === \"range\") {\n      return 0;\n    }\n    return null;\n  }\n  get _defaultMaximum() {\n    if (this.type === \"range\") {\n      return 100;\n    }\n    return null;\n  }\n  get _parsedValue() {\n    const converter = this._convertStringToNumber;\n    if (converter !== undefined) {\n      return converter(this.value);\n    }\n    return this.value;\n  }\n\n  // https://html.spec.whatwg.org/multipage/input.html#attr-input-step\n  get _step() {\n    let step = this._defaultStep;\n    if (this.hasAttribute(\"step\") && !asciiCaseInsensitiveMatch(this.getAttribute(\"step\"), \"any\")) {\n      const parsedStep = parseFloatingPointNumber(this.getAttribute(\"step\"));\n      if (!isNaN(parsedStep) && parsedStep > 0) {\n        step = parsedStep;\n      }\n    }\n    return step;\n  }\n\n  // https://html.spec.whatwg.org/multipage/input.html#concept-input-step-scale\n  get _stepScaleFactor() {\n    const dayInMilliseconds = 24 * 60 * 60 * 1000;\n    switch (this.type) {\n      case \"week\":\n        return 7 * dayInMilliseconds;\n      case \"date\":\n        return dayInMilliseconds;\n      case \"datetime-local\":\n      case \"datetime\":\n      case \"time\":\n        return 1000;\n    }\n    return 1;\n  }\n\n  // https://html.spec.whatwg.org/multipage/input.html#concept-input-step-default\n  get _defaultStep() {\n    if (this.type === \"datetime-local\" || this.type === \"datetime\" || this.type === \"time\") {\n      return 60;\n    }\n    return 1;\n  }\n\n  // https://html.spec.whatwg.org/multipage/input.html#concept-input-min-zero\n  get _stepBase() {\n    const parseAttribute = attributeName => parseFloatingPointNumber(this.getAttribute(attributeName));\n    if (this.hasAttribute(\"min\")) {\n      const min = parseAttribute(\"min\");\n      if (!isNaN(min)) {\n        return min;\n      }\n    }\n    if (this.hasAttribute(\"value\")) {\n      const value = parseAttribute(\"value\");\n      if (!isNaN(value)) {\n        return value;\n      }\n    }\n    return this._defaultStepBase;\n  }\n\n  // https://html.spec.whatwg.org/multipage/input.html#concept-input-step-default-base\n  get _defaultStepBase() {\n    if (this.type === \"week\") {\n      // The start of week 1970-W01\n      return 259200000;\n    }\n    return 0;\n  }\n  _attributeApplies(attribute) {\n    return applicableTypesForAttribute[attribute].has(this.type);\n  }\n  _barredFromConstraintValidationSpecialization() {\n    // https://html.spec.whatwg.org/multipage/input.html#hidden-state-(type=hidden)\n    // https://html.spec.whatwg.org/multipage/input.html#reset-button-state-(type=reset)\n    // https://html.spec.whatwg.org/multipage/input.html#button-state-(type=button)\n    const willNotValidateTypes = new Set([\"hidden\", \"reset\", \"button\"]);\n    // https://html.spec.whatwg.org/multipage/input.html#attr-input-readonly\n    const readOnly = this.hasAttribute(\"readonly\");\n\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#attr-fe-disabled\n    return willNotValidateTypes.has(this.type) || readOnly;\n  }\n  get validity() {\n    if (!this._validity) {\n      this._validity = ValidityState.createImpl(this, {\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#suffering-from-being-missing\n        valueMissing: () => {\n          if (!this.hasAttribute(\"required\")) {\n            return false;\n          }\n          if (this.type === \"checkbox\") {\n            // https://html.spec.whatwg.org/multipage/input.html#checkbox-state-(type=checkbox)\n            // Constraint validation: If the element is required and its checkedness is\n            // false, then the element is suffering from being missing.\n            return !this.checked;\n          } else if (this.type === \"radio\") {\n            // https://html.spec.whatwg.org/multipage/input.html#radio-button-state-(type=radio)\n            // Constraint validation: If an element in the radio button group is required,\n            // and all of the input elements in the radio button group have a checkedness\n            // that is false, then the element is suffering from being missing.\n            return !this._isRadioGroupChecked();\n          }\n          return this.value === \"\";\n        },\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#suffering-from-being-too-long\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#attr-fe-maxlength\n        // jsdom has no way at the moment to emulate a user interaction, so tooLong/tooShort have\n        // to be set to false.\n        tooLong: () => false,\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#suffering-from-being-too-short\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#attr-fe-minlength\n        tooShort: () => false,\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#suffering-from-an-overflow\n        // https://html.spec.whatwg.org/multipage/input.html#attr-input-max\n        rangeOverflow: () => this._attributeApplies(\"max\") && this._maximum !== null && this._parsedValue > this._maximum,\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#suffering-from-an-underflow\n        // https://html.spec.whatwg.org/multipage/input.html#attr-input-min\n        rangeUnderflow: () => this._attributeApplies(\"min\") && this._minimum !== null && this._parsedValue < this._minimum,\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#suffering-from-a-pattern-mismatch\n        patternMismatch: () => {\n          if (!this.hasAttribute(\"pattern\") || !this._attributeApplies(\"pattern\") || this.value === \"\") {\n            return false;\n          }\n          let regExp;\n          try {\n            regExp = new RegExp(this.getAttribute(\"pattern\"), \"u\");\n          } catch (e) {\n            return false;\n          }\n          if (this.type === \"email\" && this.hasAttribute(\"multiple\")) {\n            return splitOnCommas(this.value).every(value => regExp.test(value));\n          }\n          return !regExp.test(this.value);\n        },\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#suffering-from-a-step-mismatch\n        // https://html.spec.whatwg.org/multipage/input.html#attr-input-step\n        stepMismatch: () => {\n          // Constraint validation: When the element has an allowed value step, and the result of applying\n          // the algorithm to convert a string to a number to the string given by the element's value is a\n          // number, and that number subtracted from the step base is not an integral multiple of the\n          // allowed value step, the element is suffering from a step mismatch.\n          if (!this._attributeApplies(\"step\")) {\n            return false;\n          }\n          const step = parseFloatingPointNumber(this.getAttribute(\"step\"));\n          if (isNaN(step) || step <= 0) {\n            return false;\n          }\n          let number = this._parsedValue;\n          if (isNaN(number) || this.value === \"\") {\n            return false;\n          }\n          if (this._type === \"month\") {\n            number = parseMonthString(this.value).month - 1;\n          }\n          return number % (this._stepBase - this._step * this._stepScaleFactor) !== 0;\n        },\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#suffering-from-a-type-mismatch\n        typeMismatch: () => {\n          if (this.value === \"\") {\n            return false;\n          }\n          if (this.type === \"email\") {\n            // https://html.spec.whatwg.org/multipage/input.html#e-mail-state-(type=email)\n            // Constraint validation [multiple=false]: While the value of the element is neither the empty\n            // string nor a single valid e - mail address, the element is suffering from a type mismatch.\n\n            // Constraint validation [multiple=true]: While the value of the element is not a valid e-mail address list,\n            // the element is suffering from a type mismatch.\n            return !isValidEmailAddress(this.value, this.hasAttribute(\"multiple\"));\n          } else if (this.type === \"url\") {\n            // https://html.spec.whatwg.org/multipage/input.html#url-state-(type=url)\n            // Constraint validation: While the value of the element is neither the empty string\n            // nor a valid absolute URL, the element is suffering from a type mismatch.\n            return !isValidAbsoluteURL(this.value);\n          }\n          return false;\n        }\n      });\n    }\n    return this._validity;\n  }\n  [cloningSteps](copy, node) {\n    copy._value = node._value;\n    copy._checkedness = node._checkedness;\n    copy._dirtyValue = node._dirtyValue;\n    copy._dirtyCheckedness = node._dirtyCheckedness;\n  }\n}\nmixin(HTMLInputElementImpl.prototype, DefaultConstraintValidationImpl.prototype);\nmodule.exports = {\n  implementation: HTMLInputElementImpl\n};","map":{"version":3,"names":["conversions","require","DOMException","Event","FileList","HTMLElementImpl","implementation","idlUtils","DefaultConstraintValidationImpl","ValidityState","mixin","domSymbolTree","cloningSteps","closest","getLabelsForLabelable","isDisabled","isValidEmailAddress","isValidAbsoluteURL","sanitizeValueByType","parseFloatingPointNumber","asciiCaseInsensitiveMatch","splitOnCommas","parseDateString","parseLocalDateAndTimeString","parseMonthString","parseTimeString","parseWeekString","filesSymbol","Symbol","selectAllowedTypes","Set","variableLengthSelectionAllowedTypes","maxMinStepTypes","applicableTypesForAttribute","max","min","step","pattern","allowSelect","type","has","toLowerCase","allowVariableLengthSelection","valueAttributeDefaultMode","valueAttributeDefaultOnMode","valueAttributeMode","getUTCMs","year","month","arguments","length","undefined","day","hour","minute","second","millisecond","Date","UTC","d","setUTCFullYear","setUTCMonth","setUTCDate","setUTCHours","setUTCMinutes","setUTCSeconds","valueOf","dayOfWeekRelMondayLUT","convertStringToNumberByTypeMap","Map","input","date","NaN","dateObj","dayOfWeekRelMonday","getUTCDay","week","time","dateAndTime","HTMLInputElementImpl","constructor","args","privateData","_selectionStart","_selectionEnd","_selectionDirection","_value","_dirtyValue","_checkedness","_dirtyCheckedness","_preCheckedRadioState","indeterminate","_customValidityErrorMessage","_labels","_convertStringToNumber","get","_getValue","_preClickActivationSteps","checked","_canceledActivationSteps","_activationBehavior","inputEvent","createImpl","isTrusted","bubbles","cancelable","dispatchEvent","changeEvent","form","_doSubmit","_attrModified","name","wrapper","wrapperForImpl","defaultValue","defaultChecked","_removeOtherRadioCheckedness","apply","_formReset","_changedFormOwner","_otherRadioGroupElements","root","_radioButtonGroupRoot","result","descendants","treeIterator","candidate","candidateWrapper","push","radioGroupElement","e","parent","nodeName","toUpperCase","_isRadioGroupChecked","some","labels","Boolean","value","attr","getAttribute","files","Error","val","oldValue","String","setAttribute","_dispatchSelectEvent","event","_ownerDocument","createEvent","initEvent","_getValueLength","select","selectionStart","start","setSelectionRange","Math","selectionEnd","end","selectionDirection","dir","setRangeText","repl","selectionMode","selStart","selEnd","slice","newEnd","delta","maxLength","hasAttribute","parseInt","minLength","size","src","USVString","_minimum","_defaultMinimum","convertStringToNumber","parsed","isNaN","_maximum","_defaultMaximum","_parsedValue","converter","_step","_defaultStep","parsedStep","_stepScaleFactor","dayInMilliseconds","_stepBase","parseAttribute","attributeName","_defaultStepBase","_attributeApplies","attribute","_barredFromConstraintValidationSpecialization","willNotValidateTypes","readOnly","validity","_validity","valueMissing","tooLong","tooShort","rangeOverflow","rangeUnderflow","patternMismatch","regExp","RegExp","every","test","stepMismatch","number","_type","typeMismatch","copy","node","prototype","module","exports"],"sources":["G:/scientificKeyboard/keyboard/node_modules/mathjax-node/node_modules/jsdom/lib/jsdom/living/nodes/HTMLInputElement-impl.js"],"sourcesContent":["\"use strict\";\nconst conversions = require(\"webidl-conversions\");\nconst DOMException = require(\"domexception\");\nconst Event = require(\"../generated/Event\");\nconst FileList = require(\"../generated/FileList\");\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\nconst idlUtils = require(\"../generated/utils\");\nconst DefaultConstraintValidationImpl =\n  require(\"../constraint-validation/DefaultConstraintValidation-impl\").implementation;\nconst ValidityState = require(\"../generated/ValidityState\");\nconst { mixin } = require(\"../../utils\");\nconst { domSymbolTree, cloningSteps } = require(\"../helpers/internal-constants\");\nconst { closest } = require(\"../helpers/traversal\");\nconst { getLabelsForLabelable } = require(\"../helpers/form-controls\");\nconst {\n  isDisabled,\n  isValidEmailAddress,\n  isValidAbsoluteURL,\n  sanitizeValueByType\n} = require(\"../helpers/form-controls\");\nconst {\n  parseFloatingPointNumber,\n  asciiCaseInsensitiveMatch,\n  splitOnCommas\n} = require(\"../helpers/strings\");\nconst {\n  parseDateString,\n  parseLocalDateAndTimeString,\n  parseMonthString,\n  parseTimeString,\n  parseWeekString\n} = require(\"../helpers/dates-and-times\");\n\nconst filesSymbol = Symbol(\"files\");\n\nconst selectAllowedTypes = new Set([\n  \"text\", \"search\", \"tel\", \"url\", \"password\", \"email\", \"date\", \"month\", \"week\",\n  \"time\", \"datetime-local\", \"color\", \"file\", \"number\"\n]);\n\nconst variableLengthSelectionAllowedTypes = new Set([\"text\", \"search\", \"tel\", \"url\", \"password\"]);\n\nconst maxMinStepTypes = new Set([\"date\", \"month\", \"week\", \"time\", \"datetime-local\", \"number\", \"range\", \"datetime\"]);\n\n// https://html.spec.whatwg.org/multipage/input.html#concept-input-apply\nconst applicableTypesForAttribute = {\n  max: maxMinStepTypes,\n  min: maxMinStepTypes,\n  step: maxMinStepTypes,\n  pattern: new Set([\"text\", \"search\", \"tel\", \"url\", \"email\", \"password\"])\n};\n\nfunction allowSelect(type) {\n  return selectAllowedTypes.has(type.toLowerCase());\n}\n\nfunction allowVariableLengthSelection(type) {\n  return variableLengthSelectionAllowedTypes.has(type.toLowerCase());\n}\n\nconst valueAttributeDefaultMode = new Set([\"hidden\", \"submit\", \"image\", \"reset\", \"button\"]);\nconst valueAttributeDefaultOnMode = new Set([\"checkbox\", \"radio\"]);\n\nfunction valueAttributeMode(type) {\n  if (valueAttributeDefaultMode.has(type)) {\n    return \"default\";\n  }\n  if (valueAttributeDefaultOnMode.has(type)) {\n    return \"default/on\";\n  }\n  if (type === \"file\") {\n    return \"filename\";\n  }\n  return \"value\";\n}\n\n// Necessary because Date.UTC() treats year within [0, 99] as [1900, 1999].\nfunction getUTCMs(year, month = 1, day = 1, hour = 0, minute = 0, second = 0, millisecond = 0) {\n  if (year > 99 || year < 0) {\n    return Date.UTC(year, month - 1, day, hour, minute, second, millisecond);\n  }\n  const d = new Date(0);\n  d.setUTCFullYear(year);\n  d.setUTCMonth(month - 1);\n  d.setUTCDate(day);\n  d.setUTCHours(hour);\n  d.setUTCMinutes(minute);\n  d.setUTCSeconds(second, millisecond);\n  return d.valueOf();\n}\n\nconst dayOfWeekRelMondayLUT = [-1, 0, 1, 2, 3, -3, -2];\n\nconst convertStringToNumberByTypeMap = new Map([\n  [\n    // https://html.spec.whatwg.org/multipage/input.html#date-state-(type=date):concept-input-value-string-number\n    \"date\", input => {\n      const date = parseDateString(input);\n      if (date === null) {\n        return NaN;\n      }\n      return getUTCMs(date.year, date.month, date.day);\n    }\n  ],\n  [\n    // https://html.spec.whatwg.org/multipage/input.html#month-state-(type=month):concept-input-value-string-number\n    \"month\", input => {\n      const date = parseMonthString(input);\n      if (date === null) {\n        return NaN;\n      }\n      return (date.year - 1970) * 12 + (date.month - 1);\n    }\n  ],\n  [\n    // https://html.spec.whatwg.org/multipage/input.html#week-state-(type=week):concept-input-value-string-number\n    \"week\", input => {\n      const date = parseWeekString(input);\n      if (date === null) {\n        return NaN;\n      }\n      const dateObj = new Date(getUTCMs(date.year));\n      // An HTML week starts on Monday, while 0 represents Sunday. Account for such.\n      const dayOfWeekRelMonday = dayOfWeekRelMondayLUT[dateObj.getUTCDay()];\n      return dateObj.setUTCDate(1 + 7 * (date.week - 1) - dayOfWeekRelMonday);\n    }\n  ],\n  [\n    // https://html.spec.whatwg.org/multipage/input.html#time-state-(type=time):concept-input-value-string-number\n    \"time\", input => {\n      const time = parseTimeString(input);\n      if (time === null) {\n        return NaN;\n      }\n      return ((time.hour * 60 + time.minute) * 60 + time.second) * 1000 + time.millisecond;\n    }\n  ],\n  [\n    // https://html.spec.whatwg.org/multipage/input.html#local-date-and-time-state-(type=datetime-local):concept-input-value-string-number\n    \"datetime-local\", input => {\n      const dateAndTime = parseLocalDateAndTimeString(input);\n      if (dateAndTime === null) {\n        return NaN;\n      }\n      const { date: { year, month, day }, time: { hour, minute, second, millisecond } } = dateAndTime;\n      // Doesn't quite matter whether or not UTC is used, since the offset from 1970-01-01 local time is returned.\n      return getUTCMs(year, month, day, hour, minute, second, millisecond);\n    }\n  ],\n  // https://html.spec.whatwg.org/multipage/input.html#number-state-(type=number):concept-input-value-string-number\n  [\"number\", parseFloatingPointNumber],\n  // https://html.spec.whatwg.org/multipage/input.html#range-state-(type=range):concept-input-value-string-number\n  [\"range\", parseFloatingPointNumber]\n]);\n\nclass HTMLInputElementImpl extends HTMLElementImpl {\n  constructor(args, privateData) {\n    super(args, privateData);\n\n    this._selectionStart = this._selectionEnd = 0;\n    this._selectionDirection = \"none\";\n    this._value = null;\n    this._dirtyValue = false;\n    this._checkedness = false;\n    this._dirtyCheckedness = false;\n\n    // This is used to implement the canceled activation steps for radio inputs:\n    // \"The canceled activation steps consist of setting the checkedness and the element's indeterminate IDL\n    // attribute back to the values they had before the pre-click activation steps were run.\"\n    this._preCheckedRadioState = null;\n\n    this.indeterminate = false;\n\n    this._customValidityErrorMessage = \"\";\n\n    this._labels = null;\n  }\n\n  // https://html.spec.whatwg.org/multipage/input.html#concept-input-value-string-number\n  get _convertStringToNumber() {\n    return convertStringToNumberByTypeMap.get(this.type);\n  }\n\n  _getValue() {\n    return this._value;\n  }\n\n  _preClickActivationSteps() {\n    if (this.type === \"checkbox\") {\n      this.checked = !this.checked;\n    } else if (this.type === \"radio\") {\n      this._preCheckedRadioState = this.checked;\n      this.checked = true;\n    }\n  }\n\n  _canceledActivationSteps() {\n    if (this.type === \"checkbox\") {\n      this.checked = !this.checked;\n    } else if (this.type === \"radio\") {\n      if (this._preCheckedRadioState !== null) {\n        this.checked = this._preCheckedRadioState;\n        this._preCheckedRadioState = null;\n      }\n    }\n  }\n\n  _activationBehavior() {\n    if (isDisabled(this)) {\n      return;\n    }\n\n    if (this.type === \"checkbox\" || (this.type === \"radio\" && !this._preCheckedRadioState)) {\n      const inputEvent = Event.createImpl([\"input\", { isTrusted: true, bubbles: true, cancelable: true }], {});\n      this.dispatchEvent(inputEvent);\n\n      const changeEvent = Event.createImpl([\"change\", { bubbles: true, cancelable: true }], {});\n      this.dispatchEvent(changeEvent);\n    } else if (this.type === \"submit\") {\n      const { form } = this;\n      if (form) {\n        form._doSubmit();\n      }\n    }\n  }\n\n  _attrModified(name) {\n    const wrapper = idlUtils.wrapperForImpl(this);\n    if (!this._dirtyValue && name === \"value\") {\n      this._value = sanitizeValueByType(this, wrapper.defaultValue);\n    }\n    if (!this._dirtyCheckedness && name === \"checked\") {\n      this._checkedness = wrapper.defaultChecked;\n      if (this._checkedness) {\n        this._removeOtherRadioCheckedness();\n      }\n    }\n\n    if (name === \"name\" || name === \"type\") {\n      if (this._checkedness) {\n        this._removeOtherRadioCheckedness();\n      }\n    }\n\n    super._attrModified.apply(this, arguments);\n  }\n\n  _formReset() {\n    const wrapper = idlUtils.wrapperForImpl(this);\n    this._value = sanitizeValueByType(this, wrapper.defaultValue);\n    this._dirtyValue = false;\n    this._checkedness = wrapper.defaultChecked;\n    this._dirtyCheckedness = false;\n    if (this._checkedness) {\n      this._removeOtherRadioCheckedness();\n    }\n  }\n\n  _changedFormOwner() {\n    if (this._checkedness) {\n      this._removeOtherRadioCheckedness();\n    }\n  }\n\n  get _otherRadioGroupElements() {\n    const wrapper = idlUtils.wrapperForImpl(this);\n    const root = this._radioButtonGroupRoot;\n    if (!root) {\n      return [];\n    }\n\n    const result = [];\n\n    const name = wrapper.name.toLowerCase();\n\n    const descendants = domSymbolTree.treeIterator(root);\n    for (const candidate of descendants) {\n      if (candidate._radioButtonGroupRoot !== root) {\n        continue;\n      }\n\n      const candidateWrapper = idlUtils.wrapperForImpl(candidate);\n      if (!candidateWrapper.name || candidateWrapper.name.toLowerCase() !== name) {\n        continue;\n      }\n\n      if (candidate !== this) {\n        result.push(candidate);\n      }\n    }\n    return result;\n  }\n\n  _removeOtherRadioCheckedness() {\n    for (const radioGroupElement of this._otherRadioGroupElements) {\n      radioGroupElement._checkedness = false;\n    }\n  }\n\n  get _radioButtonGroupRoot() {\n    const wrapper = idlUtils.wrapperForImpl(this);\n    if (this.type !== \"radio\" || !wrapper.name) {\n      return null;\n    }\n\n    let e = domSymbolTree.parent(this);\n    while (e) {\n      // root node of this home sub tree\n      // or the form element we belong to\n      if (!domSymbolTree.parent(e) || e.nodeName.toUpperCase() === \"FORM\") {\n        return e;\n      }\n      e = domSymbolTree.parent(e);\n    }\n    return null;\n  }\n\n  _isRadioGroupChecked() {\n    if (this.checked) {\n      return true;\n    }\n    return this._otherRadioGroupElements.some(radioGroupElement => radioGroupElement.checked);\n  }\n\n  get labels() {\n    return getLabelsForLabelable(this);\n  }\n\n  get form() {\n    return closest(this, \"form\");\n  }\n\n  get checked() {\n    return this._checkedness;\n  }\n\n  set checked(checked) {\n    this._checkedness = Boolean(checked);\n    this._dirtyCheckedness = true;\n    if (this._checkedness) {\n      this._removeOtherRadioCheckedness();\n    }\n  }\n\n  get value() {\n    switch (valueAttributeMode(this.type)) {\n      // https://html.spec.whatwg.org/multipage/input.html#dom-input-value-value\n      case \"value\":\n        return this._value !== null ? this._value : \"\";\n      // https://html.spec.whatwg.org/multipage/input.html#dom-input-value-default\n      case \"default\": {\n        const attr = this.getAttribute(\"value\");\n        return attr !== null ? attr : \"\";\n      }\n      // https://html.spec.whatwg.org/multipage/input.html#dom-input-value-default-on\n      case \"default/on\": {\n        const attr = this.getAttribute(\"value\");\n        return attr !== null ? attr : \"on\";\n      }\n      // https://html.spec.whatwg.org/multipage/input.html#dom-input-value-filename\n      case \"filename\":\n        return this.files.length ? \"C:\\\\fakepath\\\\\" + this.files[0].name : \"\";\n      default:\n        throw new Error(\"jsdom internal error: unknown value attribute mode\");\n    }\n  }\n\n  set value(val) {\n    switch (valueAttributeMode(this.type)) {\n      // https://html.spec.whatwg.org/multipage/input.html#dom-input-value-value\n      case \"value\": {\n        const oldValue = this._value;\n        if (val === null) {\n          this._value = null;\n        } else {\n          this._value = sanitizeValueByType(this, String(val));\n        }\n        this._dirtyValue = true;\n\n        if (oldValue !== this._value) {\n          this._selectionStart = 0;\n          this._selectionEnd = 0;\n          this._selectionDirection = \"none\";\n        }\n        break;\n      }\n\n      // https://html.spec.whatwg.org/multipage/input.html#dom-input-value-default\n      // https://html.spec.whatwg.org/multipage/input.html#dom-input-value-default-on\n      case \"default\":\n      case \"default/on\":\n        this.setAttribute(\"value\", val);\n        break;\n\n      // https://html.spec.whatwg.org/multipage/input.html#dom-input-value-filename\n      case \"filename\":\n        if (val === \"\") {\n          this.files.length = 0;\n        } else {\n          throw new DOMException(\"This input element accepts a filename, which may only be programmatically set to \" +\n            \"the empty string.\", \"InvalidStateError\");\n        }\n        break;\n\n      default:\n        throw new Error(\"jsdom internal error: unknown value attribute mode\");\n    }\n  }\n\n  get files() {\n    if (this.type === \"file\") {\n      this[filesSymbol] = this[filesSymbol] || FileList.createImpl();\n    } else {\n      this[filesSymbol] = null;\n    }\n    return this[filesSymbol];\n  }\n\n  set files(value) {\n    if (this.type === \"file\" && value !== null) {\n      this[filesSymbol] = value;\n    }\n  }\n\n  get type() {\n    const type = this.getAttribute(\"type\");\n    return type ? type.toLowerCase() : \"text\";\n  }\n\n  set type(type) {\n    this.setAttribute(\"type\", type);\n  }\n\n  _dispatchSelectEvent() {\n    const event = this._ownerDocument.createEvent(\"HTMLEvents\");\n    event.initEvent(\"select\", true, true);\n    this.dispatchEvent(event);\n  }\n\n  _getValueLength() {\n    return typeof this.value === \"string\" ? this.value.length : 0;\n  }\n\n  select() {\n    if (!allowSelect(this.type)) {\n      return;\n    }\n\n    this._selectionStart = 0;\n    this._selectionEnd = this._getValueLength();\n    this._selectionDirection = \"none\";\n    this._dispatchSelectEvent();\n  }\n\n  get selectionStart() {\n    if (!allowVariableLengthSelection(this.type)) {\n      return null;\n    }\n\n    return this._selectionStart;\n  }\n\n  set selectionStart(start) {\n    if (!allowVariableLengthSelection(this.type)) {\n      throw new DOMException(\"The object is in an invalid state.\", \"InvalidStateError\");\n    }\n\n    this.setSelectionRange(start, Math.max(start, this._selectionEnd), this._selectionDirection);\n  }\n\n  get selectionEnd() {\n    if (!allowVariableLengthSelection(this.type)) {\n      return null;\n    }\n\n    return this._selectionEnd;\n  }\n\n  set selectionEnd(end) {\n    if (!allowVariableLengthSelection(this.type)) {\n      throw new DOMException(\"The object is in an invalid state.\", \"InvalidStateError\");\n    }\n\n    this.setSelectionRange(this._selectionStart, end, this._selectionDirection);\n  }\n\n  get selectionDirection() {\n    if (!allowVariableLengthSelection(this.type)) {\n      return null;\n    }\n\n    return this._selectionDirection;\n  }\n\n  set selectionDirection(dir) {\n    if (!allowVariableLengthSelection(this.type)) {\n      throw new DOMException(\"The object is in an invalid state.\", \"InvalidStateError\");\n    }\n\n    this.setSelectionRange(this._selectionStart, this._selectionEnd, dir);\n  }\n\n  setSelectionRange(start, end, dir) {\n    if (!allowVariableLengthSelection(this.type)) {\n      throw new DOMException(\"The object is in an invalid state.\", \"InvalidStateError\");\n    }\n\n    this._selectionEnd = Math.min(end, this._getValueLength());\n    this._selectionStart = Math.min(start, this._selectionEnd);\n    this._selectionDirection = dir === \"forward\" || dir === \"backward\" ? dir : \"none\";\n    this._dispatchSelectEvent();\n  }\n\n  setRangeText(repl, start, end, selectionMode = \"preserve\") {\n    if (!allowVariableLengthSelection(this.type)) {\n      throw new DOMException(\"The object is in an invalid state.\", \"InvalidStateError\");\n    }\n\n    if (arguments.length < 2) {\n      start = this._selectionStart;\n      end = this._selectionEnd;\n    } else if (start > end) {\n      throw new DOMException(\"The index is not in the allowed range.\", \"IndexSizeError\");\n    }\n\n    start = Math.min(start, this._getValueLength());\n    end = Math.min(end, this._getValueLength());\n\n    const val = this.value;\n    let selStart = this._selectionStart;\n    let selEnd = this._selectionEnd;\n\n    this.value = val.slice(0, start) + repl + val.slice(end);\n\n    const newEnd = start + this.value.length;\n\n    if (selectionMode === \"select\") {\n      this.setSelectionRange(start, newEnd);\n    } else if (selectionMode === \"start\") {\n      this.setSelectionRange(start, start);\n    } else if (selectionMode === \"end\") {\n      this.setSelectionRange(newEnd, newEnd);\n    } else { // preserve\n      const delta = repl.length - (end - start);\n\n      if (selStart > end) {\n        selStart += delta;\n      } else if (selStart > start) {\n        selStart = start;\n      }\n\n      if (selEnd > end) {\n        selEnd += delta;\n      } else if (selEnd > start) {\n        selEnd = newEnd;\n      }\n\n      this.setSelectionRange(selStart, selEnd);\n    }\n  }\n\n  set maxLength(value) {\n    if (value < 0) {\n      throw new DOMException(\"The index is not in the allowed range.\", \"IndexSizeError\");\n    }\n    this.setAttribute(\"maxlength\", String(value));\n  }\n\n  get maxLength() {\n    if (!this.hasAttribute(\"maxlength\")) {\n      return 524288; // stole this from chrome\n    }\n    return parseInt(this.getAttribute(\"maxlength\"));\n  }\n\n  set minLength(value) {\n    if (value < 0) {\n      throw new DOMException(\"The index is not in the allowed range.\", \"IndexSizeError\");\n    }\n    this.setAttribute(\"minlength\", String(value));\n  }\n\n  get minLength() {\n    if (!this.hasAttribute(\"minlength\")) {\n      return 0;\n    }\n    return parseInt(this.getAttribute(\"minlength\"));\n  }\n\n  get size() {\n    if (!this.hasAttribute(\"size\")) {\n      return 20;\n    }\n    return parseInt(this.getAttribute(\"size\"));\n  }\n\n  set size(value) {\n    if (value <= 0) {\n      throw new DOMException(\"The index is not in the allowed range.\", \"IndexSizeError\");\n    }\n    this.setAttribute(\"size\", String(value));\n  }\n\n  get src() {\n    return conversions.USVString(this.getAttribute(\"src\"));\n  }\n\n  set src(value) {\n    this.setAttribute(\"src\", value);\n  }\n\n  // https://html.spec.whatwg.org/multipage/input.html#the-min-and-max-attributes\n  get _minimum() {\n    let min = this._defaultMinimum;\n    const attr = this.getAttribute(\"min\");\n    const convertStringToNumber = this._convertStringToNumber;\n    if (attr !== null && convertStringToNumber !== undefined) {\n      const parsed = convertStringToNumber(attr);\n      if (!isNaN(parsed)) {\n        min = parsed;\n      }\n    }\n    return min;\n  }\n\n  get _maximum() {\n    let max = this._defaultMaximum;\n    const attr = this.getAttribute(\"max\");\n    const convertStringToNumber = this._convertStringToNumber;\n    if (attr !== null && convertStringToNumber !== undefined) {\n      const parsed = convertStringToNumber(attr);\n      if (!isNaN(parsed)) {\n        max = parsed;\n      }\n    }\n    return max;\n  }\n\n  get _defaultMinimum() {\n    if (this.type === \"range\") {\n      return 0;\n    }\n    return null;\n  }\n\n  get _defaultMaximum() {\n    if (this.type === \"range\") {\n      return 100;\n    }\n    return null;\n  }\n\n  get _parsedValue() {\n    const converter = this._convertStringToNumber;\n    if (converter !== undefined) {\n      return converter(this.value);\n    }\n    return this.value;\n  }\n\n  // https://html.spec.whatwg.org/multipage/input.html#attr-input-step\n  get _step() {\n    let step = this._defaultStep;\n    if (this.hasAttribute(\"step\") && !asciiCaseInsensitiveMatch(this.getAttribute(\"step\"), \"any\")) {\n      const parsedStep = parseFloatingPointNumber(this.getAttribute(\"step\"));\n      if (!isNaN(parsedStep) && parsedStep > 0) {\n        step = parsedStep;\n      }\n    }\n    return step;\n  }\n\n  // https://html.spec.whatwg.org/multipage/input.html#concept-input-step-scale\n  get _stepScaleFactor() {\n    const dayInMilliseconds = 24 * 60 * 60 * 1000;\n    switch (this.type) {\n      case \"week\":\n        return 7 * dayInMilliseconds;\n      case \"date\":\n        return dayInMilliseconds;\n      case \"datetime-local\":\n      case \"datetime\":\n      case \"time\":\n        return 1000;\n    }\n    return 1;\n  }\n\n  // https://html.spec.whatwg.org/multipage/input.html#concept-input-step-default\n  get _defaultStep() {\n    if (this.type === \"datetime-local\" || this.type === \"datetime\" || this.type === \"time\") {\n      return 60;\n    }\n    return 1;\n  }\n\n  // https://html.spec.whatwg.org/multipage/input.html#concept-input-min-zero\n  get _stepBase() {\n    const parseAttribute = attributeName => parseFloatingPointNumber(this.getAttribute(attributeName));\n    if (this.hasAttribute(\"min\")) {\n      const min = parseAttribute(\"min\");\n      if (!isNaN(min)) {\n        return min;\n      }\n    }\n    if (this.hasAttribute(\"value\")) {\n      const value = parseAttribute(\"value\");\n      if (!isNaN(value)) {\n        return value;\n      }\n    }\n    return this._defaultStepBase;\n  }\n\n  // https://html.spec.whatwg.org/multipage/input.html#concept-input-step-default-base\n  get _defaultStepBase() {\n    if (this.type === \"week\") {\n      // The start of week 1970-W01\n      return 259200000;\n    }\n    return 0;\n  }\n\n  _attributeApplies(attribute) {\n    return applicableTypesForAttribute[attribute].has(this.type);\n  }\n\n  _barredFromConstraintValidationSpecialization() {\n    // https://html.spec.whatwg.org/multipage/input.html#hidden-state-(type=hidden)\n    // https://html.spec.whatwg.org/multipage/input.html#reset-button-state-(type=reset)\n    // https://html.spec.whatwg.org/multipage/input.html#button-state-(type=button)\n    const willNotValidateTypes = new Set([\"hidden\", \"reset\", \"button\"]);\n    // https://html.spec.whatwg.org/multipage/input.html#attr-input-readonly\n    const readOnly = this.hasAttribute(\"readonly\");\n\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#attr-fe-disabled\n    return willNotValidateTypes.has(this.type) || readOnly;\n  }\n\n  get validity() {\n    if (!this._validity) {\n      this._validity = ValidityState.createImpl(this, {\n\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#suffering-from-being-missing\n        valueMissing: () => {\n          if (!this.hasAttribute(\"required\")) {\n            return false;\n          }\n          if (this.type === \"checkbox\") {\n            // https://html.spec.whatwg.org/multipage/input.html#checkbox-state-(type=checkbox)\n            // Constraint validation: If the element is required and its checkedness is\n            // false, then the element is suffering from being missing.\n            return !this.checked;\n          } else if (this.type === \"radio\") {\n            // https://html.spec.whatwg.org/multipage/input.html#radio-button-state-(type=radio)\n            // Constraint validation: If an element in the radio button group is required,\n            // and all of the input elements in the radio button group have a checkedness\n            // that is false, then the element is suffering from being missing.\n            return !this._isRadioGroupChecked();\n          }\n          return this.value === \"\";\n        },\n\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#suffering-from-being-too-long\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#attr-fe-maxlength\n        // jsdom has no way at the moment to emulate a user interaction, so tooLong/tooShort have\n        // to be set to false.\n        tooLong: () => false,\n\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#suffering-from-being-too-short\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#attr-fe-minlength\n        tooShort: () => false,\n\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#suffering-from-an-overflow\n        // https://html.spec.whatwg.org/multipage/input.html#attr-input-max\n        rangeOverflow: () => this._attributeApplies(\"max\") && this._maximum !== null &&\n          this._parsedValue > this._maximum,\n\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#suffering-from-an-underflow\n        // https://html.spec.whatwg.org/multipage/input.html#attr-input-min\n        rangeUnderflow: () => this._attributeApplies(\"min\") && this._minimum !== null &&\n          this._parsedValue < this._minimum,\n\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#suffering-from-a-pattern-mismatch\n        patternMismatch: () => {\n          if (!this.hasAttribute(\"pattern\") || !this._attributeApplies(\"pattern\") || this.value === \"\") {\n            return false;\n          }\n          let regExp;\n          try {\n            regExp = new RegExp(this.getAttribute(\"pattern\"), \"u\");\n          } catch (e) {\n            return false;\n          }\n          if (this.type === \"email\" && this.hasAttribute(\"multiple\")) {\n            return splitOnCommas(this.value).every(value => regExp.test(value));\n          }\n          return !regExp.test(this.value);\n        },\n\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#suffering-from-a-step-mismatch\n        // https://html.spec.whatwg.org/multipage/input.html#attr-input-step\n        stepMismatch: () => {\n          // Constraint validation: When the element has an allowed value step, and the result of applying\n          // the algorithm to convert a string to a number to the string given by the element's value is a\n          // number, and that number subtracted from the step base is not an integral multiple of the\n          // allowed value step, the element is suffering from a step mismatch.\n          if (!this._attributeApplies(\"step\")) {\n            return false;\n          }\n          const step = parseFloatingPointNumber(this.getAttribute(\"step\"));\n          if (isNaN(step) || step <= 0) {\n            return false;\n          }\n\n          let number = this._parsedValue;\n          if (isNaN(number) || this.value === \"\") {\n            return false;\n          }\n          if (this._type === \"month\") {\n            number = parseMonthString(this.value).month - 1;\n          }\n          return number % (this._stepBase - (this._step * this._stepScaleFactor)) !== 0;\n        },\n\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#suffering-from-a-type-mismatch\n        typeMismatch: () => {\n          if (this.value === \"\") {\n            return false;\n          }\n          if (this.type === \"email\") {\n            // https://html.spec.whatwg.org/multipage/input.html#e-mail-state-(type=email)\n            // Constraint validation [multiple=false]: While the value of the element is neither the empty\n            // string nor a single valid e - mail address, the element is suffering from a type mismatch.\n\n            // Constraint validation [multiple=true]: While the value of the element is not a valid e-mail address list,\n            // the element is suffering from a type mismatch.\n            return !isValidEmailAddress(this.value, this.hasAttribute(\"multiple\"));\n          } else if (this.type === \"url\") {\n            // https://html.spec.whatwg.org/multipage/input.html#url-state-(type=url)\n            // Constraint validation: While the value of the element is neither the empty string\n            // nor a valid absolute URL, the element is suffering from a type mismatch.\n            return !isValidAbsoluteURL(this.value);\n          }\n          return false;\n        }\n      });\n    }\n    return this._validity;\n  }\n\n  [cloningSteps](copy, node) {\n    copy._value = node._value;\n    copy._checkedness = node._checkedness;\n    copy._dirtyValue = node._dirtyValue;\n    copy._dirtyCheckedness = node._dirtyCheckedness;\n  }\n}\n\nmixin(HTMLInputElementImpl.prototype, DefaultConstraintValidationImpl.prototype);\n\nmodule.exports = {\n  implementation: HTMLInputElementImpl\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}