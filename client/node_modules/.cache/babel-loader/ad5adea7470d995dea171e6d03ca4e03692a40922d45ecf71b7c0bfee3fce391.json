{"ast":null,"code":"\"use strict\";\n\nconst {\n  mixin\n} = require(\"../../utils\");\nconst {\n  domSymbolTree\n} = require(\"../helpers/internal-constants\");\nconst NODE_TYPE = require(\"../node-type\");\nconst NodeImpl = require(\"./Node-impl\").implementation;\nconst NonElementParentNodeImpl = require(\"./NonElementParentNode-impl\").implementation;\nconst ParentNodeImpl = require(\"./ParentNode-impl\").implementation;\nclass DocumentFragmentImpl extends NodeImpl {\n  constructor(args, privateData) {\n    super(args, privateData);\n    this.nodeType = NODE_TYPE.DOCUMENT_FRAGMENT_NODE;\n  }\n\n  // This is implemented separately for Document (which has a _ids cache) and DocumentFragment (which does not).\n  getElementById(id) {\n    if (id === \"\") {\n      return null;\n    }\n    for (const descendant of domSymbolTree.treeIterator(this)) {\n      if (descendant.nodeType === NODE_TYPE.ELEMENT_NODE && descendant.getAttributeNS(null, \"id\") === id) {\n        return descendant;\n      }\n    }\n    return null;\n  }\n}\nmixin(DocumentFragmentImpl.prototype, NonElementParentNodeImpl.prototype);\nmixin(DocumentFragmentImpl.prototype, ParentNodeImpl.prototype);\nmodule.exports = {\n  implementation: DocumentFragmentImpl\n};","map":{"version":3,"names":["mixin","require","domSymbolTree","NODE_TYPE","NodeImpl","implementation","NonElementParentNodeImpl","ParentNodeImpl","DocumentFragmentImpl","constructor","args","privateData","nodeType","DOCUMENT_FRAGMENT_NODE","getElementById","id","descendant","treeIterator","ELEMENT_NODE","getAttributeNS","prototype","module","exports"],"sources":["G:/scientificKeyboard/keyboard/node_modules/mathjax-node/node_modules/jsdom/lib/jsdom/living/nodes/DocumentFragment-impl.js"],"sourcesContent":["\"use strict\";\nconst { mixin } = require(\"../../utils\");\nconst { domSymbolTree } = require(\"../helpers/internal-constants\");\nconst NODE_TYPE = require(\"../node-type\");\nconst NodeImpl = require(\"./Node-impl\").implementation;\nconst NonElementParentNodeImpl = require(\"./NonElementParentNode-impl\").implementation;\nconst ParentNodeImpl = require(\"./ParentNode-impl\").implementation;\n\nclass DocumentFragmentImpl extends NodeImpl {\n  constructor(args, privateData) {\n    super(args, privateData);\n\n    this.nodeType = NODE_TYPE.DOCUMENT_FRAGMENT_NODE;\n  }\n\n  // This is implemented separately for Document (which has a _ids cache) and DocumentFragment (which does not).\n  getElementById(id) {\n    if (id === \"\") {\n      return null;\n    }\n\n    for (const descendant of domSymbolTree.treeIterator(this)) {\n      if (descendant.nodeType === NODE_TYPE.ELEMENT_NODE && descendant.getAttributeNS(null, \"id\") === id) {\n        return descendant;\n      }\n    }\n\n    return null;\n  }\n}\n\nmixin(DocumentFragmentImpl.prototype, NonElementParentNodeImpl.prototype);\nmixin(DocumentFragmentImpl.prototype, ParentNodeImpl.prototype);\n\nmodule.exports = {\n  implementation: DocumentFragmentImpl\n};\n"],"mappings":"AAAA,YAAY;;AACZ,MAAM;EAAEA;AAAM,CAAC,GAAGC,OAAO,CAAC,aAAa,CAAC;AACxC,MAAM;EAAEC;AAAc,CAAC,GAAGD,OAAO,CAAC,+BAA+B,CAAC;AAClE,MAAME,SAAS,GAAGF,OAAO,CAAC,cAAc,CAAC;AACzC,MAAMG,QAAQ,GAAGH,OAAO,CAAC,aAAa,CAAC,CAACI,cAAc;AACtD,MAAMC,wBAAwB,GAAGL,OAAO,CAAC,6BAA6B,CAAC,CAACI,cAAc;AACtF,MAAME,cAAc,GAAGN,OAAO,CAAC,mBAAmB,CAAC,CAACI,cAAc;AAElE,MAAMG,oBAAoB,SAASJ,QAAQ,CAAC;EAC1CK,WAAWA,CAACC,IAAI,EAAEC,WAAW,EAAE;IAC7B,KAAK,CAACD,IAAI,EAAEC,WAAW,CAAC;IAExB,IAAI,CAACC,QAAQ,GAAGT,SAAS,CAACU,sBAAsB;EAClD;;EAEA;EACAC,cAAcA,CAACC,EAAE,EAAE;IACjB,IAAIA,EAAE,KAAK,EAAE,EAAE;MACb,OAAO,IAAI;IACb;IAEA,KAAK,MAAMC,UAAU,IAAId,aAAa,CAACe,YAAY,CAAC,IAAI,CAAC,EAAE;MACzD,IAAID,UAAU,CAACJ,QAAQ,KAAKT,SAAS,CAACe,YAAY,IAAIF,UAAU,CAACG,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,KAAKJ,EAAE,EAAE;QAClG,OAAOC,UAAU;MACnB;IACF;IAEA,OAAO,IAAI;EACb;AACF;AAEAhB,KAAK,CAACQ,oBAAoB,CAACY,SAAS,EAAEd,wBAAwB,CAACc,SAAS,CAAC;AACzEpB,KAAK,CAACQ,oBAAoB,CAACY,SAAS,EAAEb,cAAc,CAACa,SAAS,CAAC;AAE/DC,MAAM,CAACC,OAAO,GAAG;EACfjB,cAAc,EAAEG;AAClB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}