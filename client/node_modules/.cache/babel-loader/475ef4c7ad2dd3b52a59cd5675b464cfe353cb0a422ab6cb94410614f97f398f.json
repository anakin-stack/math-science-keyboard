{"ast":null,"code":"\"use strict\";\n\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\nconst DefaultConstraintValidationImpl = require(\"../constraint-validation/DefaultConstraintValidation-impl\").implementation;\nconst ValidityState = require(\"../generated/ValidityState\");\nconst {\n  mixin\n} = require(\"../../utils\");\nconst DOMException = require(\"domexception\");\nconst {\n  closest\n} = require(\"../helpers/traversal\");\nconst {\n  normalizeToCRLF,\n  getLabelsForLabelable\n} = require(\"../helpers/form-controls\");\nconst {\n  childTextContent\n} = require(\"../helpers/text\");\nclass HTMLTextAreaElementImpl extends HTMLElementImpl {\n  constructor(args, privateData) {\n    super(args, privateData);\n    this._rawValue = \"\";\n    this._dirtyValue = false;\n    this._customValidityErrorMessage = \"\";\n    this._labels = null;\n  }\n  _formReset() {\n    this._rawValue = childTextContent(this);\n    this._dirtyValue = false;\n  }\n  _getAPIValue() {\n    return this._rawValue.replace(/\\r\\n/g, \"\\n\").replace(/\\r/g, \"\\n\");\n  }\n  _getValue() {\n    // Hard-wrapping omitted, for now.\n    return normalizeToCRLF(this._rawValue);\n  }\n  _childTextContentChangeSteps() {\n    if (this._dirtyValue === false) {\n      this._rawValue = childTextContent(this);\n    }\n  }\n  get labels() {\n    return getLabelsForLabelable(this);\n  }\n  get form() {\n    return closest(this, \"form\");\n  }\n  get defaultValue() {\n    return childTextContent(this);\n  }\n  set defaultValue(val) {\n    this.textContent = val;\n  }\n  get value() {\n    return this._getAPIValue();\n  }\n  set value(val) {\n    this._rawValue = val;\n    this._dirtyValue = true;\n    this._selectionStart = 0;\n    this._selectionEnd = 0;\n    this._selectionDirection = \"none\";\n  }\n  get textLength() {\n    return this.value.length; // code unit length (16 bit)\n  }\n\n  get type() {\n    return \"textarea\";\n  }\n  _dispatchSelectEvent() {\n    const event = this._ownerDocument.createEvent(\"HTMLEvents\");\n    event.initEvent(\"select\", true, true);\n    this.dispatchEvent(event);\n  }\n  _getValueLength() {\n    return typeof this.value === \"string\" ? this.value.length : 0;\n  }\n  select() {\n    this._selectionStart = 0;\n    this._selectionEnd = this._getValueLength();\n    this._selectionDirection = \"none\";\n    this._dispatchSelectEvent();\n  }\n  get selectionStart() {\n    return this._selectionStart;\n  }\n  set selectionStart(start) {\n    this.setSelectionRange(start, Math.max(start, this._selectionEnd), this._selectionDirection);\n  }\n  get selectionEnd() {\n    return this._selectionEnd;\n  }\n  set selectionEnd(end) {\n    this.setSelectionRange(this._selectionStart, end, this._selectionDirection);\n  }\n  get selectionDirection() {\n    return this._selectionDirection;\n  }\n  set selectionDirection(dir) {\n    this.setSelectionRange(this._selectionStart, this._selectionEnd, dir);\n  }\n  setSelectionRange(start, end, dir) {\n    this._selectionEnd = Math.min(end, this._getValueLength());\n    this._selectionStart = Math.min(start, this._selectionEnd);\n    this._selectionDirection = dir === \"forward\" || dir === \"backward\" ? dir : \"none\";\n    this._dispatchSelectEvent();\n  }\n  setRangeText(repl, start, end) {\n    let selectionMode = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"preserve\";\n    if (arguments.length < 2) {\n      start = this._selectionStart;\n      end = this._selectionEnd;\n    } else if (start > end) {\n      throw new DOMException(\"The index is not in the allowed range.\", \"IndexSizeError\");\n    }\n    start = Math.min(start, this._getValueLength());\n    end = Math.min(end, this._getValueLength());\n    const val = this.value;\n    let selStart = this._selectionStart;\n    let selEnd = this._selectionEnd;\n    this.value = val.slice(0, start) + repl + val.slice(end);\n    const newEnd = start + this.value.length;\n    if (selectionMode === \"select\") {\n      this.setSelectionRange(start, newEnd);\n    } else if (selectionMode === \"start\") {\n      this.setSelectionRange(start, start);\n    } else if (selectionMode === \"end\") {\n      this.setSelectionRange(newEnd, newEnd);\n    } else {\n      // preserve\n      const delta = repl.length - (end - start);\n      if (selStart > end) {\n        selStart += delta;\n      } else if (selStart > start) {\n        selStart = start;\n      }\n      if (selEnd > end) {\n        selEnd += delta;\n      } else if (selEnd > start) {\n        selEnd = newEnd;\n      }\n      this.setSelectionRange(selStart, selEnd);\n    }\n  }\n  get cols() {\n    if (!this.hasAttribute(\"cols\")) {\n      return 20;\n    }\n    return parseInt(this.getAttribute(\"cols\"));\n  }\n  set cols(value) {\n    if (value <= 0) {\n      throw new DOMException(\"The index is not in the allowed range.\", \"IndexSizeError\");\n    }\n    this.setAttribute(\"cols\", String(value));\n  }\n  get rows() {\n    if (!this.hasAttribute(\"rows\")) {\n      return 2;\n    }\n    return parseInt(this.getAttribute(\"rows\"));\n  }\n  set rows(value) {\n    if (value <= 0) {\n      throw new DOMException(\"The index is not in the allowed range.\", \"IndexSizeError\");\n    }\n    this.setAttribute(\"rows\", String(value));\n  }\n  _barredFromConstraintValidationSpecialization() {\n    return this.hasAttribute(\"readonly\");\n  }\n\n  // https://html.spec.whatwg.org/multipage/form-elements.html#attr-textarea-required\n  get validity() {\n    if (!this._validity) {\n      this._validity = ValidityState.createImpl(this, {\n        valueMissing: () => this.hasAttribute(\"required\") && this.value === \"\"\n      });\n    }\n    return this._validity;\n  }\n}\nmixin(HTMLTextAreaElementImpl.prototype, DefaultConstraintValidationImpl.prototype);\nmodule.exports = {\n  implementation: HTMLTextAreaElementImpl\n};","map":{"version":3,"names":["HTMLElementImpl","require","implementation","DefaultConstraintValidationImpl","ValidityState","mixin","DOMException","closest","normalizeToCRLF","getLabelsForLabelable","childTextContent","HTMLTextAreaElementImpl","constructor","args","privateData","_rawValue","_dirtyValue","_customValidityErrorMessage","_labels","_formReset","_getAPIValue","replace","_getValue","_childTextContentChangeSteps","labels","form","defaultValue","val","textContent","value","_selectionStart","_selectionEnd","_selectionDirection","textLength","length","type","_dispatchSelectEvent","event","_ownerDocument","createEvent","initEvent","dispatchEvent","_getValueLength","select","selectionStart","start","setSelectionRange","Math","max","selectionEnd","end","selectionDirection","dir","min","setRangeText","repl","selectionMode","arguments","undefined","selStart","selEnd","slice","newEnd","delta","cols","hasAttribute","parseInt","getAttribute","setAttribute","String","rows","_barredFromConstraintValidationSpecialization","validity","_validity","createImpl","valueMissing","prototype","module","exports"],"sources":["G:/scientificKeyboard/keyboard/node_modules/mathjax-node/node_modules/jsdom/lib/jsdom/living/nodes/HTMLTextAreaElement-impl.js"],"sourcesContent":["\"use strict\";\n\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\n\nconst DefaultConstraintValidationImpl =\n  require(\"../constraint-validation/DefaultConstraintValidation-impl\").implementation;\nconst ValidityState = require(\"../generated/ValidityState\");\nconst { mixin } = require(\"../../utils\");\n\nconst DOMException = require(\"domexception\");\nconst { closest } = require(\"../helpers/traversal\");\nconst { normalizeToCRLF, getLabelsForLabelable } = require(\"../helpers/form-controls\");\nconst { childTextContent } = require(\"../helpers/text\");\n\nclass HTMLTextAreaElementImpl extends HTMLElementImpl {\n  constructor(args, privateData) {\n    super(args, privateData);\n\n    this._rawValue = \"\";\n    this._dirtyValue = false;\n\n    this._customValidityErrorMessage = \"\";\n\n    this._labels = null;\n  }\n\n  _formReset() {\n    this._rawValue = childTextContent(this);\n    this._dirtyValue = false;\n  }\n\n  _getAPIValue() {\n    return this._rawValue.replace(/\\r\\n/g, \"\\n\").replace(/\\r/g, \"\\n\");\n  }\n\n  _getValue() {\n    // Hard-wrapping omitted, for now.\n    return normalizeToCRLF(this._rawValue);\n  }\n\n  _childTextContentChangeSteps() {\n    if (this._dirtyValue === false) {\n      this._rawValue = childTextContent(this);\n    }\n  }\n\n  get labels() {\n    return getLabelsForLabelable(this);\n  }\n\n  get form() {\n    return closest(this, \"form\");\n  }\n\n  get defaultValue() {\n    return childTextContent(this);\n  }\n\n  set defaultValue(val) {\n    this.textContent = val;\n  }\n\n  get value() {\n    return this._getAPIValue();\n  }\n\n  set value(val) {\n    this._rawValue = val;\n    this._dirtyValue = true;\n\n    this._selectionStart = 0;\n    this._selectionEnd = 0;\n    this._selectionDirection = \"none\";\n  }\n\n  get textLength() {\n    return this.value.length; // code unit length (16 bit)\n  }\n\n  get type() {\n    return \"textarea\";\n  }\n\n  _dispatchSelectEvent() {\n    const event = this._ownerDocument.createEvent(\"HTMLEvents\");\n    event.initEvent(\"select\", true, true);\n    this.dispatchEvent(event);\n  }\n\n  _getValueLength() {\n    return typeof this.value === \"string\" ? this.value.length : 0;\n  }\n\n  select() {\n    this._selectionStart = 0;\n    this._selectionEnd = this._getValueLength();\n    this._selectionDirection = \"none\";\n    this._dispatchSelectEvent();\n  }\n\n  get selectionStart() {\n    return this._selectionStart;\n  }\n\n  set selectionStart(start) {\n    this.setSelectionRange(start, Math.max(start, this._selectionEnd), this._selectionDirection);\n  }\n\n  get selectionEnd() {\n    return this._selectionEnd;\n  }\n\n  set selectionEnd(end) {\n    this.setSelectionRange(this._selectionStart, end, this._selectionDirection);\n  }\n\n  get selectionDirection() {\n    return this._selectionDirection;\n  }\n\n  set selectionDirection(dir) {\n    this.setSelectionRange(this._selectionStart, this._selectionEnd, dir);\n  }\n\n  setSelectionRange(start, end, dir) {\n    this._selectionEnd = Math.min(end, this._getValueLength());\n    this._selectionStart = Math.min(start, this._selectionEnd);\n    this._selectionDirection = dir === \"forward\" || dir === \"backward\" ? dir : \"none\";\n    this._dispatchSelectEvent();\n  }\n\n  setRangeText(repl, start, end, selectionMode = \"preserve\") {\n    if (arguments.length < 2) {\n      start = this._selectionStart;\n      end = this._selectionEnd;\n    } else if (start > end) {\n      throw new DOMException(\"The index is not in the allowed range.\", \"IndexSizeError\");\n    }\n\n    start = Math.min(start, this._getValueLength());\n    end = Math.min(end, this._getValueLength());\n\n    const val = this.value;\n    let selStart = this._selectionStart;\n    let selEnd = this._selectionEnd;\n\n    this.value = val.slice(0, start) + repl + val.slice(end);\n\n    const newEnd = start + this.value.length;\n\n    if (selectionMode === \"select\") {\n      this.setSelectionRange(start, newEnd);\n    } else if (selectionMode === \"start\") {\n      this.setSelectionRange(start, start);\n    } else if (selectionMode === \"end\") {\n      this.setSelectionRange(newEnd, newEnd);\n    } else { // preserve\n      const delta = repl.length - (end - start);\n\n      if (selStart > end) {\n        selStart += delta;\n      } else if (selStart > start) {\n        selStart = start;\n      }\n\n      if (selEnd > end) {\n        selEnd += delta;\n      } else if (selEnd > start) {\n        selEnd = newEnd;\n      }\n\n      this.setSelectionRange(selStart, selEnd);\n    }\n  }\n\n  get cols() {\n    if (!this.hasAttribute(\"cols\")) {\n      return 20;\n    }\n    return parseInt(this.getAttribute(\"cols\"));\n  }\n\n  set cols(value) {\n    if (value <= 0) {\n      throw new DOMException(\"The index is not in the allowed range.\", \"IndexSizeError\");\n    }\n    this.setAttribute(\"cols\", String(value));\n  }\n\n  get rows() {\n    if (!this.hasAttribute(\"rows\")) {\n      return 2;\n    }\n    return parseInt(this.getAttribute(\"rows\"));\n  }\n\n  set rows(value) {\n    if (value <= 0) {\n      throw new DOMException(\"The index is not in the allowed range.\", \"IndexSizeError\");\n    }\n    this.setAttribute(\"rows\", String(value));\n  }\n\n  _barredFromConstraintValidationSpecialization() {\n    return this.hasAttribute(\"readonly\");\n  }\n\n  // https://html.spec.whatwg.org/multipage/form-elements.html#attr-textarea-required\n  get validity() {\n    if (!this._validity) {\n      this._validity = ValidityState.createImpl(this, {\n        valueMissing: () => this.hasAttribute(\"required\") && this.value === \"\"\n      });\n    }\n    return this._validity;\n  }\n}\n\nmixin(HTMLTextAreaElementImpl.prototype, DefaultConstraintValidationImpl.prototype);\n\nmodule.exports = {\n  implementation: HTMLTextAreaElementImpl\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}