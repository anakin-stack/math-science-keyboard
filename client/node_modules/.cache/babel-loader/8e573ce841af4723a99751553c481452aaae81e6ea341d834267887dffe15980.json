{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\nconst impl = utils.implSymbol;\nconst CharacterData = require(\"./CharacterData.js\");\nfunction Text() {\n  if (new.target === undefined) {\n    throw new TypeError(\"Failed to construct 'Text'. Please use the 'new' operator; this constructor \" + \"cannot be called as a function.\");\n  }\n  const args = [];\n  {\n    let curArg = arguments[0];\n    if (curArg !== undefined) {\n      curArg = conversions[\"DOMString\"](curArg, {\n        context: \"Failed to construct 'Text': parameter 1\"\n      });\n    } else {\n      curArg = \"\";\n    }\n    args.push(curArg);\n  }\n  iface.setup(this, args);\n}\nObject.setPrototypeOf(Text.prototype, CharacterData.interface.prototype);\nObject.setPrototypeOf(Text, CharacterData.interface);\nObject.defineProperty(Text, \"prototype\", {\n  value: Text.prototype,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\nText.prototype.splitText = function splitText(offset) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  if (arguments.length < 1) {\n    throw new TypeError(\"Failed to execute 'splitText' on 'Text': 1 argument required, but only \" + arguments.length + \" present.\");\n  }\n  const args = [];\n  {\n    let curArg = arguments[0];\n    curArg = conversions[\"unsigned long\"](curArg, {\n      context: \"Failed to execute 'splitText' on 'Text': parameter 1\"\n    });\n    args.push(curArg);\n  }\n  return utils.tryWrapperForImpl(this[impl].splitText(...args));\n};\nObject.defineProperty(Text.prototype, \"wholeText\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n    return this[impl][\"wholeText\"];\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(Text.prototype, Symbol.toStringTag, {\n  value: \"Text\",\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj) {\n    let {\n      context = \"The provided value\"\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'Text'.`);\n  },\n  create(constructorArgs, privateData) {\n    let obj = Object.create(Text.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(Text.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {\n    CharacterData._internalSetup(obj);\n  },\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: Text,\n  expose: {\n    Window: {\n      Text\n    }\n  }\n}; // iface\nmodule.exports = iface;\nconst Impl = require(\"../nodes/Text-impl.js\");","map":{"version":3,"names":["conversions","require","utils","impl","implSymbol","CharacterData","Text","new","target","undefined","TypeError","args","curArg","arguments","context","push","iface","setup","Object","setPrototypeOf","prototype","interface","defineProperty","value","writable","enumerable","configurable","splitText","offset","module","exports","is","length","tryWrapperForImpl","get","Symbol","toStringTag","_mixedIntoPredicates","obj","hasOwn","Impl","implementation","isMixedInto","isImpl","wrapper","wrapperForImpl","convert","implForWrapper","create","constructorArgs","privateData","createImpl","_internalSetup","wrapperSymbol","init","expose","Window"],"sources":["G:/scientificKeyboard/keyboard/node_modules/mathjax-node/node_modules/jsdom/lib/jsdom/living/generated/Text.js"],"sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst impl = utils.implSymbol;\nconst CharacterData = require(\"./CharacterData.js\");\n\nfunction Text() {\n  if (new.target === undefined) {\n    throw new TypeError(\n      \"Failed to construct 'Text'. Please use the 'new' operator; this constructor \" + \"cannot be called as a function.\"\n    );\n  }\n  const args = [];\n  {\n    let curArg = arguments[0];\n    if (curArg !== undefined) {\n      curArg = conversions[\"DOMString\"](curArg, { context: \"Failed to construct 'Text': parameter 1\" });\n    } else {\n      curArg = \"\";\n    }\n    args.push(curArg);\n  }\n\n  iface.setup(this, args);\n}\n\nObject.setPrototypeOf(Text.prototype, CharacterData.interface.prototype);\nObject.setPrototypeOf(Text, CharacterData.interface);\n\nObject.defineProperty(Text, \"prototype\", {\n  value: Text.prototype,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\n\nText.prototype.splitText = function splitText(offset) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  if (arguments.length < 1) {\n    throw new TypeError(\n      \"Failed to execute 'splitText' on 'Text': 1 argument required, but only \" + arguments.length + \" present.\"\n    );\n  }\n  const args = [];\n  {\n    let curArg = arguments[0];\n    curArg = conversions[\"unsigned long\"](curArg, { context: \"Failed to execute 'splitText' on 'Text': parameter 1\" });\n    args.push(curArg);\n  }\n  return utils.tryWrapperForImpl(this[impl].splitText(...args));\n};\n\nObject.defineProperty(Text.prototype, \"wholeText\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"wholeText\"];\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(Text.prototype, Symbol.toStringTag, {\n  value: \"Text\",\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\n\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj, { context = \"The provided value\" } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'Text'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(Text.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(Text.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {\n    CharacterData._internalSetup(obj);\n  },\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: Text,\n  expose: {\n    Window: { Text }\n  }\n}; // iface\nmodule.exports = iface;\n\nconst Impl = require(\"../nodes/Text-impl.js\");\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}