{"ast":null,"code":"\"use strict\";\n\nconst DOMException = require(\"domexception\");\nconst {\n  documentBaseURLSerialized,\n  parseURLToResultingURLRecord\n} = require(\"../helpers/document-base-url.js\");\n\n// https://html.spec.whatwg.org/#history-3\nexports.implementation = class HistoryImpl {\n  constructor(args, privateData) {\n    this._window = privateData.window;\n    this._document = privateData.document;\n    this._actAsIfLocationReloadCalled = privateData.actAsIfLocationReloadCalled;\n    this._state = null;\n  }\n  _guardAgainstInactiveDocuments() {\n    if (!this._window) {\n      throw new DOMException(\"History object is associated with a document that is not fully active.\", \"SecurityError\");\n    }\n  }\n  get length() {\n    this._guardAgainstInactiveDocuments();\n    return this._window._sessionHistory.length;\n  }\n  get state() {\n    this._guardAgainstInactiveDocuments();\n    return this._state;\n  }\n  go(delta) {\n    this._guardAgainstInactiveDocuments();\n    if (delta === 0) {\n      // When the go(delta) method is invoked, if delta is zero, the user agent must act as\n      // if the location.reload() method was called instead.\n      this._actAsIfLocationReloadCalled();\n    } else {\n      // Otherwise, the user agent must traverse the history by a delta whose value is delta\n      this._window._sessionHistory.traverseByDelta(delta);\n    }\n  }\n  back() {\n    this.go(-1);\n  }\n  forward() {\n    this.go(+1);\n  }\n  pushState(data, title, url) {\n    this._sharedPushAndReplaceState(data, title, url, \"pushState\");\n  }\n  replaceState(data, title, url) {\n    this._sharedPushAndReplaceState(data, title, url, \"replaceState\");\n  }\n\n  // https://html.spec.whatwg.org/#dom-history-pushstate\n  _sharedPushAndReplaceState(data, title, url, methodName) {\n    this._guardAgainstInactiveDocuments();\n\n    // TODO structured clone data\n\n    let newURL;\n    if (url !== null) {\n      // Not implemented: use of entry settings object's API base URL. Instead we just use the document base URL. The\n      // difference matters in the case of cross-frame calls.\n      newURL = parseURLToResultingURLRecord(url, this._document);\n      if (newURL === null) {\n        throw new DOMException(`Could not parse url argument \"${url}\" to ${methodName} ` + `against base URL \"${documentBaseURLSerialized(this._document)}\".`, \"SecurityError\");\n      }\n      if (newURL.scheme !== this._document._URL.scheme || newURL.username !== this._document._URL.username || newURL.password !== this._document._URL.password || newURL.host !== this._document._URL.host || newURL.port !== this._document._URL.port || newURL.cannotBeABaseURL !== this._document._URL.cannotBeABaseURL) {\n        throw new DOMException(`${methodName} cannot update history to a URL which ` + `differs in components other than in path, query, or fragment.`, \"SecurityError\");\n      }\n\n      // Not implemented: origin check (seems to only apply to documents with weird origins, e.g. sandboxed ones)\n    } else {\n      newURL = this._window._sessionHistory.currentEntry.url;\n    }\n    if (methodName === \"pushState\") {\n      this._window._sessionHistory.removeAllEntriesAfterCurrentEntry();\n      this._window._sessionHistory.clearHistoryTraversalTasks();\n      const newEntry = {\n        document: this._document,\n        stateObject: data,\n        title,\n        url: newURL\n      };\n      this._window._sessionHistory.addEntryAfterCurrentEntry(newEntry);\n      this._window._sessionHistory.updateCurrentEntry(newEntry);\n    } else {\n      const {\n        currentEntry\n      } = this._window._sessionHistory;\n      currentEntry.stateObject = data;\n      currentEntry.title = title;\n      currentEntry.url = newURL;\n    }\n\n    // TODO: If the current entry in the session history represents a non-GET request\n    // (e.g. it was the result of a POST submission) then update it to instead represent\n    // a GET request.\n\n    this._document._URL = newURL;\n\n    // arguably it's a bit odd that the state and latestEntry do not belong to the SessionHistory\n    // but the spec gives them to \"History\" and \"Document\" respecively.\n    this._state = data; // TODO clone again!! O_o\n    this._document._latestEntry = this._window._sessionHistory.currentEntry;\n  }\n};","map":{"version":3,"names":["DOMException","require","documentBaseURLSerialized","parseURLToResultingURLRecord","exports","implementation","HistoryImpl","constructor","args","privateData","_window","window","_document","document","_actAsIfLocationReloadCalled","actAsIfLocationReloadCalled","_state","_guardAgainstInactiveDocuments","length","_sessionHistory","state","go","delta","traverseByDelta","back","forward","pushState","data","title","url","_sharedPushAndReplaceState","replaceState","methodName","newURL","scheme","_URL","username","password","host","port","cannotBeABaseURL","currentEntry","removeAllEntriesAfterCurrentEntry","clearHistoryTraversalTasks","newEntry","stateObject","addEntryAfterCurrentEntry","updateCurrentEntry","_latestEntry"],"sources":["G:/scientificKeyboard/keyboard/node_modules/mathjax-node/node_modules/jsdom/lib/jsdom/living/window/History-impl.js"],"sourcesContent":["\"use strict\";\nconst DOMException = require(\"domexception\");\nconst { documentBaseURLSerialized, parseURLToResultingURLRecord } = require(\"../helpers/document-base-url.js\");\n\n// https://html.spec.whatwg.org/#history-3\nexports.implementation = class HistoryImpl {\n  constructor(args, privateData) {\n    this._window = privateData.window;\n    this._document = privateData.document;\n    this._actAsIfLocationReloadCalled = privateData.actAsIfLocationReloadCalled;\n    this._state = null;\n  }\n\n  _guardAgainstInactiveDocuments() {\n    if (!this._window) {\n      throw new DOMException(\"History object is associated with a document that is not fully active.\", \"SecurityError\");\n    }\n  }\n\n  get length() {\n    this._guardAgainstInactiveDocuments();\n\n    return this._window._sessionHistory.length;\n  }\n\n  get state() {\n    this._guardAgainstInactiveDocuments();\n\n    return this._state;\n  }\n\n  go(delta) {\n    this._guardAgainstInactiveDocuments();\n\n    if (delta === 0) {\n      // When the go(delta) method is invoked, if delta is zero, the user agent must act as\n      // if the location.reload() method was called instead.\n      this._actAsIfLocationReloadCalled();\n    } else {\n      // Otherwise, the user agent must traverse the history by a delta whose value is delta\n      this._window._sessionHistory.traverseByDelta(delta);\n    }\n  }\n\n  back() {\n    this.go(-1);\n  }\n\n  forward() {\n    this.go(+1);\n  }\n\n  pushState(data, title, url) {\n    this._sharedPushAndReplaceState(data, title, url, \"pushState\");\n  }\n  replaceState(data, title, url) {\n    this._sharedPushAndReplaceState(data, title, url, \"replaceState\");\n  }\n\n  // https://html.spec.whatwg.org/#dom-history-pushstate\n  _sharedPushAndReplaceState(data, title, url, methodName) {\n    this._guardAgainstInactiveDocuments();\n\n    // TODO structured clone data\n\n    let newURL;\n    if (url !== null) {\n      // Not implemented: use of entry settings object's API base URL. Instead we just use the document base URL. The\n      // difference matters in the case of cross-frame calls.\n      newURL = parseURLToResultingURLRecord(url, this._document);\n\n      if (newURL === null) {\n        throw new DOMException(`Could not parse url argument \"${url}\" to ${methodName} ` +\n          `against base URL \"${documentBaseURLSerialized(this._document)}\".`, \"SecurityError\");\n      }\n\n      if (newURL.scheme !== this._document._URL.scheme ||\n          newURL.username !== this._document._URL.username ||\n          newURL.password !== this._document._URL.password ||\n          newURL.host !== this._document._URL.host ||\n          newURL.port !== this._document._URL.port ||\n          newURL.cannotBeABaseURL !== this._document._URL.cannotBeABaseURL) {\n        throw new DOMException(`${methodName} cannot update history to a URL which ` +\n          `differs in components other than in path, query, or fragment.`, \"SecurityError\");\n      }\n\n      // Not implemented: origin check (seems to only apply to documents with weird origins, e.g. sandboxed ones)\n    } else {\n      newURL = this._window._sessionHistory.currentEntry.url;\n    }\n\n    if (methodName === \"pushState\") {\n      this._window._sessionHistory.removeAllEntriesAfterCurrentEntry();\n\n      this._window._sessionHistory.clearHistoryTraversalTasks();\n\n      const newEntry = {\n        document: this._document,\n        stateObject: data,\n        title,\n        url: newURL\n      };\n      this._window._sessionHistory.addEntryAfterCurrentEntry(newEntry);\n      this._window._sessionHistory.updateCurrentEntry(newEntry);\n    } else {\n      const { currentEntry } = this._window._sessionHistory;\n      currentEntry.stateObject = data;\n      currentEntry.title = title;\n      currentEntry.url = newURL;\n    }\n\n    // TODO: If the current entry in the session history represents a non-GET request\n    // (e.g. it was the result of a POST submission) then update it to instead represent\n    // a GET request.\n\n    this._document._URL = newURL;\n\n    // arguably it's a bit odd that the state and latestEntry do not belong to the SessionHistory\n    // but the spec gives them to \"History\" and \"Document\" respecively.\n    this._state = data; // TODO clone again!! O_o\n    this._document._latestEntry = this._window._sessionHistory.currentEntry;\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}