{"ast":null,"code":"\"use strict\";\n\n// TODO: use String.prototype.padStart instead when Node.js v8+ is required.\nconst leftPad = require(\"left-pad\");\nfunction isLeapYear(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}\n\n// https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#number-of-days-in-month-month-of-year-year\nconst daysInMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nfunction numberOfDaysInMonthOfYear(month, year) {\n  if (month === 2 && isLeapYear(year)) {\n    return 29;\n  }\n  return daysInMonth[month - 1];\n}\nconst monthRe = /^([0-9]{4,})-([0-9]{2})$/;\n\n// https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#parse-a-month-string\nfunction parseMonthString(str) {\n  const matches = monthRe.exec(str);\n  if (!matches) {\n    return null;\n  }\n  const year = Number(matches[1]);\n  if (year <= 0) {\n    return null;\n  }\n  const month = Number(matches[2]);\n  if (month < 1 || month > 12) {\n    return null;\n  }\n  return {\n    year,\n    month\n  };\n}\n\n// https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#valid-month-string\nfunction isValidMonthString(str) {\n  return parseMonthString(str) !== null;\n}\nfunction serializeMonth(_ref) {\n  let {\n    year,\n    month\n  } = _ref;\n  const yearStr = leftPad(`${year}`, 4, \"0\");\n  const monthStr = leftPad(`${month}`, 2, \"0\");\n  return `${yearStr}-${monthStr}`;\n}\nconst dateRe = /^([0-9]{4,})-([0-9]{2})-([0-9]{2})$/;\n\n// https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#parse-a-date-string\nfunction parseDateString(str) {\n  const matches = dateRe.exec(str);\n  if (!matches) {\n    return null;\n  }\n  const year = Number(matches[1]);\n  if (year <= 0) {\n    return null;\n  }\n  const month = Number(matches[2]);\n  if (month < 1 || month > 12) {\n    return null;\n  }\n  const day = Number(matches[3]);\n  if (day < 1 || day > numberOfDaysInMonthOfYear(month, year)) {\n    return null;\n  }\n  return {\n    year,\n    month,\n    day\n  };\n}\n\n// https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#valid-date-string\nfunction isValidDateString(str) {\n  return parseDateString(str) !== null;\n}\nfunction serializeDate(date) {\n  const dayStr = leftPad(`${date.day}`, 2, \"0\");\n  return `${serializeMonth(date)}-${dayStr}`;\n}\nconst yearlessDateRe = /^(?:--)?([0-9]{2})-([0-9]{2})$/;\n\n// https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#parse-a-yearless-date-string\nfunction parseYearlessDateString(str) {\n  const matches = yearlessDateRe.exec(str);\n  if (!matches) {\n    return null;\n  }\n  const month = Number(matches[1]);\n  if (month < 1 || month > 12) {\n    return null;\n  }\n  const day = Number(matches[2]);\n  if (day < 1 || day > numberOfDaysInMonthOfYear(month, 4)) {\n    return null;\n  }\n  return {\n    month,\n    day\n  };\n}\n\n// https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#valid-yearless-date-string\nfunction isValidYearlessDateString(str) {\n  return parseYearlessDateString(str) !== null;\n}\nfunction serializeYearlessDate(_ref2) {\n  let {\n    month,\n    day\n  } = _ref2;\n  const monthStr = leftPad(`${month}`, 2, \"0\");\n  const dayStr = leftPad(`${day}`, 2, \"0\");\n  return `${monthStr}-${dayStr}`;\n}\nconst timeRe = /^([0-9]{2}):([0-9]{2})(?::([0-9]{2}(?:\\.([0-9]{1,3}))?))?$/;\n\n// https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#parse-a-time-string\nfunction parseTimeString(str) {\n  const matches = timeRe.exec(str);\n  if (!matches) {\n    return null;\n  }\n  const hour = Number(matches[1]);\n  if (hour < 0 || hour > 23) {\n    return null;\n  }\n  const minute = Number(matches[2]);\n  if (minute < 0 || minute > 59) {\n    return null;\n  }\n  const second = matches[3] !== undefined ? Math.trunc(Number(matches[3])) : 0;\n  if (second < 0 || second >= 60) {\n    return null;\n  }\n  const millisecond = matches[4] !== undefined ? Number(matches[4]) : 0;\n  return {\n    hour,\n    minute,\n    second,\n    millisecond\n  };\n}\n\n// https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#valid-time-string\nfunction isValidTimeString(str) {\n  return parseTimeString(str) !== null;\n}\nfunction serializeTime(_ref3) {\n  let {\n    hour,\n    minute,\n    second,\n    millisecond\n  } = _ref3;\n  const hourStr = leftPad(`${hour}`, 2, \"0\");\n  const minuteStr = leftPad(`${minute}`, 2, \"0\");\n  if (millisecond === 0) {\n    return `${hourStr}:${minuteStr}`;\n  }\n  const secondStr = leftPad(second, 2, \"0\");\n  const millisecondStr = leftPad(millisecond, 3, \"0\");\n  return `${hourStr}:${minuteStr}:${secondStr}.${millisecondStr}`;\n}\n\n// https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#parse-a-local-date-and-time-string\nfunction parseLocalDateAndTimeString(str) {\n  let normalized = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  let separatorIdx = str.indexOf(\"T\");\n  if (separatorIdx < 0 && !normalized) {\n    separatorIdx = str.indexOf(\" \");\n  }\n  if (separatorIdx < 0) {\n    return null;\n  }\n  const date = parseDateString(str.slice(0, separatorIdx));\n  if (date === null) {\n    return null;\n  }\n  const time = parseTimeString(str.slice(separatorIdx + 1));\n  if (time === null) {\n    return null;\n  }\n  return {\n    date,\n    time\n  };\n}\n\n// https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#valid-local-date-and-time-string\nfunction isValidLocalDateAndTimeString(str) {\n  return parseLocalDateAndTimeString(str) !== null;\n}\n\n// https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#valid-normalised-local-date-and-time-string\nfunction isValidNormalizedLocalDateAndTimeString(str) {\n  return parseLocalDateAndTimeString(str, true) !== null;\n}\nfunction serializeNormalizedDateAndTime(_ref4) {\n  let {\n    date,\n    time\n  } = _ref4;\n  return `${serializeDate(date)}T${serializeTime(time)}`;\n}\n\n// https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#week-number-of-the-last-day\n// https://stackoverflow.com/a/18538272/1937836\nfunction weekNumberOfLastDay(year) {\n  const jan1 = new Date(year, 0);\n  return jan1.getDay() === 4 || isLeapYear(year) && jan1.getDay() === 3 ? 53 : 52;\n}\nconst weekRe = /^([0-9]{4,5})-W([0-9]{2})$/;\n\n// https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#parse-a-week-string\nfunction parseWeekString(str) {\n  const matches = weekRe.exec(str);\n  if (!matches) {\n    return null;\n  }\n  const year = Number(matches[1]);\n  if (year <= 0) {\n    return null;\n  }\n  const week = Number(matches[2]);\n  if (week < 1 || week > weekNumberOfLastDay(year)) {\n    return null;\n  }\n  return {\n    year,\n    week\n  };\n}\n\n// https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#valid-week-string\nfunction isValidWeekString(str) {\n  return parseWeekString(str) !== null;\n}\nfunction serializeWeek(_ref5) {\n  let {\n    year,\n    week\n  } = _ref5;\n  const yearStr = leftPad(`${year}`, 4, \"0\");\n  const weekStr = leftPad(`${week}`, 2, \"0\");\n  return `${yearStr}-W${weekStr}`;\n}\nmodule.exports = {\n  numberOfDaysInMonthOfYear,\n  parseMonthString,\n  isValidMonthString,\n  serializeMonth,\n  parseDateString,\n  isValidDateString,\n  serializeDate,\n  parseYearlessDateString,\n  isValidYearlessDateString,\n  serializeYearlessDate,\n  parseTimeString,\n  isValidTimeString,\n  serializeTime,\n  parseLocalDateAndTimeString,\n  isValidLocalDateAndTimeString,\n  isValidNormalizedLocalDateAndTimeString,\n  serializeNormalizedDateAndTime,\n  weekNumberOfLastDay,\n  parseWeekString,\n  isValidWeekString,\n  serializeWeek\n};","map":{"version":3,"names":["leftPad","require","isLeapYear","year","daysInMonth","numberOfDaysInMonthOfYear","month","monthRe","parseMonthString","str","matches","exec","Number","isValidMonthString","serializeMonth","_ref","yearStr","monthStr","dateRe","parseDateString","day","isValidDateString","serializeDate","date","dayStr","yearlessDateRe","parseYearlessDateString","isValidYearlessDateString","serializeYearlessDate","_ref2","timeRe","parseTimeString","hour","minute","second","undefined","Math","trunc","millisecond","isValidTimeString","serializeTime","_ref3","hourStr","minuteStr","secondStr","millisecondStr","parseLocalDateAndTimeString","normalized","arguments","length","separatorIdx","indexOf","slice","time","isValidLocalDateAndTimeString","isValidNormalizedLocalDateAndTimeString","serializeNormalizedDateAndTime","_ref4","weekNumberOfLastDay","jan1","Date","getDay","weekRe","parseWeekString","week","isValidWeekString","serializeWeek","_ref5","weekStr","module","exports"],"sources":["G:/scientificKeyboard/keyboard/node_modules/mathjax-node/node_modules/jsdom/lib/jsdom/living/helpers/dates-and-times.js"],"sourcesContent":["\"use strict\";\n\n// TODO: use String.prototype.padStart instead when Node.js v8+ is required.\nconst leftPad = require(\"left-pad\");\n\nfunction isLeapYear(year) {\n  return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0);\n}\n\n// https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#number-of-days-in-month-month-of-year-year\nconst daysInMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nfunction numberOfDaysInMonthOfYear(month, year) {\n  if (month === 2 && isLeapYear(year)) {\n    return 29;\n  }\n  return daysInMonth[month - 1];\n}\n\nconst monthRe = /^([0-9]{4,})-([0-9]{2})$/;\n\n// https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#parse-a-month-string\nfunction parseMonthString(str) {\n  const matches = monthRe.exec(str);\n  if (!matches) {\n    return null;\n  }\n  const year = Number(matches[1]);\n  if (year <= 0) {\n    return null;\n  }\n  const month = Number(matches[2]);\n  if (month < 1 || month > 12) {\n    return null;\n  }\n  return { year, month };\n}\n\n// https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#valid-month-string\nfunction isValidMonthString(str) {\n  return parseMonthString(str) !== null;\n}\nfunction serializeMonth({ year, month }) {\n  const yearStr = leftPad(`${year}`, 4, \"0\");\n  const monthStr = leftPad(`${month}`, 2, \"0\");\n  return `${yearStr}-${monthStr}`;\n}\n\nconst dateRe = /^([0-9]{4,})-([0-9]{2})-([0-9]{2})$/;\n\n// https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#parse-a-date-string\nfunction parseDateString(str) {\n  const matches = dateRe.exec(str);\n  if (!matches) {\n    return null;\n  }\n  const year = Number(matches[1]);\n  if (year <= 0) {\n    return null;\n  }\n  const month = Number(matches[2]);\n  if (month < 1 || month > 12) {\n    return null;\n  }\n  const day = Number(matches[3]);\n  if (day < 1 || day > numberOfDaysInMonthOfYear(month, year)) {\n    return null;\n  }\n  return { year, month, day };\n}\n\n// https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#valid-date-string\nfunction isValidDateString(str) {\n  return parseDateString(str) !== null;\n}\nfunction serializeDate(date) {\n  const dayStr = leftPad(`${date.day}`, 2, \"0\");\n  return `${serializeMonth(date)}-${dayStr}`;\n}\n\nconst yearlessDateRe = /^(?:--)?([0-9]{2})-([0-9]{2})$/;\n\n// https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#parse-a-yearless-date-string\nfunction parseYearlessDateString(str) {\n  const matches = yearlessDateRe.exec(str);\n  if (!matches) {\n    return null;\n  }\n  const month = Number(matches[1]);\n  if (month < 1 || month > 12) {\n    return null;\n  }\n  const day = Number(matches[2]);\n  if (day < 1 || day > numberOfDaysInMonthOfYear(month, 4)) {\n    return null;\n  }\n  return { month, day };\n}\n\n// https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#valid-yearless-date-string\nfunction isValidYearlessDateString(str) {\n  return parseYearlessDateString(str) !== null;\n}\nfunction serializeYearlessDate({ month, day }) {\n  const monthStr = leftPad(`${month}`, 2, \"0\");\n  const dayStr = leftPad(`${day}`, 2, \"0\");\n  return `${monthStr}-${dayStr}`;\n}\n\nconst timeRe = /^([0-9]{2}):([0-9]{2})(?::([0-9]{2}(?:\\.([0-9]{1,3}))?))?$/;\n\n// https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#parse-a-time-string\nfunction parseTimeString(str) {\n  const matches = timeRe.exec(str);\n  if (!matches) {\n    return null;\n  }\n  const hour = Number(matches[1]);\n  if (hour < 0 || hour > 23) {\n    return null;\n  }\n  const minute = Number(matches[2]);\n  if (minute < 0 || minute > 59) {\n    return null;\n  }\n  const second = matches[3] !== undefined ? Math.trunc(Number(matches[3])) : 0;\n  if (second < 0 || second >= 60) {\n    return null;\n  }\n  const millisecond = matches[4] !== undefined ? Number(matches[4]) : 0;\n  return { hour, minute, second, millisecond };\n}\n\n// https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#valid-time-string\nfunction isValidTimeString(str) {\n  return parseTimeString(str) !== null;\n}\n\nfunction serializeTime({ hour, minute, second, millisecond }) {\n  const hourStr = leftPad(`${hour}`, 2, \"0\");\n  const minuteStr = leftPad(`${minute}`, 2, \"0\");\n  if (millisecond === 0) {\n    return `${hourStr}:${minuteStr}`;\n  }\n  const secondStr = leftPad(second, 2, \"0\");\n  const millisecondStr = leftPad(millisecond, 3, \"0\");\n  return `${hourStr}:${minuteStr}:${secondStr}.${millisecondStr}`;\n}\n\n// https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#parse-a-local-date-and-time-string\nfunction parseLocalDateAndTimeString(str, normalized = false) {\n  let separatorIdx = str.indexOf(\"T\");\n  if (separatorIdx < 0 && !normalized) {\n    separatorIdx = str.indexOf(\" \");\n  }\n  if (separatorIdx < 0) {\n    return null;\n  }\n  const date = parseDateString(str.slice(0, separatorIdx));\n  if (date === null) {\n    return null;\n  }\n  const time = parseTimeString(str.slice(separatorIdx + 1));\n  if (time === null) {\n    return null;\n  }\n  return { date, time };\n}\n\n// https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#valid-local-date-and-time-string\nfunction isValidLocalDateAndTimeString(str) {\n  return parseLocalDateAndTimeString(str) !== null;\n}\n\n// https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#valid-normalised-local-date-and-time-string\nfunction isValidNormalizedLocalDateAndTimeString(str) {\n  return parseLocalDateAndTimeString(str, true) !== null;\n}\nfunction serializeNormalizedDateAndTime({ date, time }) {\n  return `${serializeDate(date)}T${serializeTime(time)}`;\n}\n\n// https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#week-number-of-the-last-day\n// https://stackoverflow.com/a/18538272/1937836\nfunction weekNumberOfLastDay(year) {\n  const jan1 = new Date(year, 0);\n  return jan1.getDay() === 4 || (isLeapYear(year) && jan1.getDay() === 3) ? 53 : 52;\n}\n\nconst weekRe = /^([0-9]{4,5})-W([0-9]{2})$/;\n\n// https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#parse-a-week-string\nfunction parseWeekString(str) {\n  const matches = weekRe.exec(str);\n  if (!matches) {\n    return null;\n  }\n  const year = Number(matches[1]);\n  if (year <= 0) {\n    return null;\n  }\n  const week = Number(matches[2]);\n  if (week < 1 || week > weekNumberOfLastDay(year)) {\n    return null;\n  }\n  return { year, week };\n}\n\n// https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#valid-week-string\nfunction isValidWeekString(str) {\n  return parseWeekString(str) !== null;\n}\nfunction serializeWeek({ year, week }) {\n  const yearStr = leftPad(`${year}`, 4, \"0\");\n  const weekStr = leftPad(`${week}`, 2, \"0\");\n  return `${yearStr}-W${weekStr}`;\n}\n\nmodule.exports = {\n  numberOfDaysInMonthOfYear,\n\n  parseMonthString,\n  isValidMonthString,\n  serializeMonth,\n\n  parseDateString,\n  isValidDateString,\n  serializeDate,\n\n  parseYearlessDateString,\n  isValidYearlessDateString,\n  serializeYearlessDate,\n\n  parseTimeString,\n  isValidTimeString,\n  serializeTime,\n\n  parseLocalDateAndTimeString,\n  isValidLocalDateAndTimeString,\n  isValidNormalizedLocalDateAndTimeString,\n  serializeNormalizedDateAndTime,\n\n  weekNumberOfLastDay,\n  parseWeekString,\n  isValidWeekString,\n  serializeWeek\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}