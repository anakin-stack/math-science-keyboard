{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\nconst convertHTMLFormElement = require(\"./HTMLFormElement.js\").convert;\nconst isBlob = require(\"./Blob.js\").is;\nconst convertBlob = require(\"./Blob.js\").convert;\nconst impl = utils.implSymbol;\nconst IteratorPrototype = Object.create(utils.IteratorPrototype, {\n  next: {\n    value: function next() {\n      const internal = this[utils.iterInternalSymbol];\n      const {\n        target,\n        kind,\n        index\n      } = internal;\n      const values = Array.from(target[impl]);\n      const len = values.length;\n      if (index >= len) {\n        return {\n          value: undefined,\n          done: true\n        };\n      }\n      const pair = values[index];\n      internal.index = index + 1;\n      const [key, value] = pair.map(utils.tryWrapperForImpl);\n      let result;\n      switch (kind) {\n        case \"key\":\n          result = key;\n          break;\n        case \"value\":\n          result = value;\n          break;\n        case \"key+value\":\n          result = [key, value];\n          break;\n      }\n      return {\n        value: result,\n        done: false\n      };\n    },\n    writable: true,\n    enumerable: true,\n    configurable: true\n  },\n  [Symbol.toStringTag]: {\n    value: \"FormDataIterator\",\n    writable: false,\n    enumerable: false,\n    configurable: true\n  }\n});\nfunction FormData() {\n  if (new.target === undefined) {\n    throw new TypeError(\"Failed to construct 'FormData'. Please use the 'new' operator; this constructor \" + \"cannot be called as a function.\");\n  }\n  const args = [];\n  {\n    let curArg = arguments[0];\n    if (curArg !== undefined) {\n      curArg = convertHTMLFormElement(curArg, {\n        context: \"Failed to construct 'FormData': parameter 1\"\n      });\n    }\n    args.push(curArg);\n  }\n  iface.setup(this, args);\n}\nObject.defineProperty(FormData, \"prototype\", {\n  value: FormData.prototype,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\nObject.defineProperty(FormData.prototype, Symbol.iterator, {\n  writable: true,\n  enumerable: false,\n  configurable: true,\n  value: function entries() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n    return module.exports.createDefaultIterator(this, \"key+value\");\n  }\n});\nFormData.prototype.forEach = function forEach(callback) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  if (arguments.length < 1) {\n    throw new TypeError(\"Failed to execute 'forEach' on 'FormData': 1 argument required, \" + \"but only 0 present.\");\n  }\n  if (typeof callback !== \"function\") {\n    throw new TypeError(\"Failed to execute 'forEach' on 'FormData': The callback provided \" + \"as parameter 1 is not a function.\");\n  }\n  const thisArg = arguments[1];\n  let pairs = Array.from(this[impl]);\n  let i = 0;\n  while (i < pairs.length) {\n    const [key, value] = pairs[i].map(utils.tryWrapperForImpl);\n    callback.call(thisArg, value, key, this);\n    pairs = Array.from(this[impl]);\n    i++;\n  }\n};\nFormData.prototype.append = function append(name, value) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  if (arguments.length < 2) {\n    throw new TypeError(\"Failed to execute 'append' on 'FormData': 2 arguments required, but only \" + arguments.length + \" present.\");\n  }\n  const args = [];\n  switch (arguments.length) {\n    case 2:\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'append' on 'FormData': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        if (isBlob(curArg)) {\n          {\n            let curArg = arguments[1];\n            curArg = convertBlob(curArg, {\n              context: \"Failed to execute 'append' on 'FormData': parameter 2\"\n            });\n            args.push(curArg);\n          }\n        } else {\n          {\n            let curArg = arguments[1];\n            curArg = conversions[\"USVString\"](curArg, {\n              context: \"Failed to execute 'append' on 'FormData': parameter 2\"\n            });\n            args.push(curArg);\n          }\n        }\n      }\n      break;\n    default:\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'append' on 'FormData': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = convertBlob(curArg, {\n          context: \"Failed to execute 'append' on 'FormData': parameter 2\"\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[2];\n        if (curArg !== undefined) {\n          curArg = conversions[\"USVString\"](curArg, {\n            context: \"Failed to execute 'append' on 'FormData': parameter 3\"\n          });\n        }\n        args.push(curArg);\n      }\n  }\n  return this[impl].append(...args);\n};\nFormData.prototype.delete = function _delete(name) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  if (arguments.length < 1) {\n    throw new TypeError(\"Failed to execute 'delete' on 'FormData': 1 argument required, but only \" + arguments.length + \" present.\");\n  }\n  const args = [];\n  {\n    let curArg = arguments[0];\n    curArg = conversions[\"USVString\"](curArg, {\n      context: \"Failed to execute 'delete' on 'FormData': parameter 1\"\n    });\n    args.push(curArg);\n  }\n  return this[impl].delete(...args);\n};\nFormData.prototype.get = function get(name) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  if (arguments.length < 1) {\n    throw new TypeError(\"Failed to execute 'get' on 'FormData': 1 argument required, but only \" + arguments.length + \" present.\");\n  }\n  const args = [];\n  {\n    let curArg = arguments[0];\n    curArg = conversions[\"USVString\"](curArg, {\n      context: \"Failed to execute 'get' on 'FormData': parameter 1\"\n    });\n    args.push(curArg);\n  }\n  return utils.tryWrapperForImpl(this[impl].get(...args));\n};\nFormData.prototype.getAll = function getAll(name) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  if (arguments.length < 1) {\n    throw new TypeError(\"Failed to execute 'getAll' on 'FormData': 1 argument required, but only \" + arguments.length + \" present.\");\n  }\n  const args = [];\n  {\n    let curArg = arguments[0];\n    curArg = conversions[\"USVString\"](curArg, {\n      context: \"Failed to execute 'getAll' on 'FormData': parameter 1\"\n    });\n    args.push(curArg);\n  }\n  return utils.tryWrapperForImpl(this[impl].getAll(...args));\n};\nFormData.prototype.has = function has(name) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  if (arguments.length < 1) {\n    throw new TypeError(\"Failed to execute 'has' on 'FormData': 1 argument required, but only \" + arguments.length + \" present.\");\n  }\n  const args = [];\n  {\n    let curArg = arguments[0];\n    curArg = conversions[\"USVString\"](curArg, {\n      context: \"Failed to execute 'has' on 'FormData': parameter 1\"\n    });\n    args.push(curArg);\n  }\n  return this[impl].has(...args);\n};\nFormData.prototype.set = function set(name, value) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  if (arguments.length < 2) {\n    throw new TypeError(\"Failed to execute 'set' on 'FormData': 2 arguments required, but only \" + arguments.length + \" present.\");\n  }\n  const args = [];\n  switch (arguments.length) {\n    case 2:\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'set' on 'FormData': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        if (isBlob(curArg)) {\n          {\n            let curArg = arguments[1];\n            curArg = convertBlob(curArg, {\n              context: \"Failed to execute 'set' on 'FormData': parameter 2\"\n            });\n            args.push(curArg);\n          }\n        } else {\n          {\n            let curArg = arguments[1];\n            curArg = conversions[\"USVString\"](curArg, {\n              context: \"Failed to execute 'set' on 'FormData': parameter 2\"\n            });\n            args.push(curArg);\n          }\n        }\n      }\n      break;\n    default:\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to execute 'set' on 'FormData': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = convertBlob(curArg, {\n          context: \"Failed to execute 'set' on 'FormData': parameter 2\"\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[2];\n        if (curArg !== undefined) {\n          curArg = conversions[\"USVString\"](curArg, {\n            context: \"Failed to execute 'set' on 'FormData': parameter 3\"\n          });\n        }\n        args.push(curArg);\n      }\n  }\n  return this[impl].set(...args);\n};\nFormData.prototype.entries = FormData.prototype[Symbol.iterator];\nFormData.prototype.keys = function keys() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  return module.exports.createDefaultIterator(this, \"key\");\n};\nFormData.prototype.values = function values() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  return module.exports.createDefaultIterator(this, \"value\");\n};\nObject.defineProperty(FormData.prototype, Symbol.toStringTag, {\n  value: \"FormData\",\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj) {\n    let {\n      context = \"The provided value\"\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'FormData'.`);\n  },\n  createDefaultIterator(target, kind) {\n    const iterator = Object.create(IteratorPrototype);\n    Object.defineProperty(iterator, utils.iterInternalSymbol, {\n      value: {\n        target,\n        kind,\n        index: 0\n      },\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n    return iterator;\n  },\n  create(constructorArgs, privateData) {\n    let obj = Object.create(FormData.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(FormData.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {},\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: FormData,\n  expose: {\n    Window: {\n      FormData\n    },\n    Worker: {\n      FormData\n    }\n  }\n}; // iface\nmodule.exports = iface;\nconst Impl = require(\"../xhr/FormData-impl.js\");","map":{"version":3,"names":["conversions","require","utils","convertHTMLFormElement","convert","isBlob","is","convertBlob","impl","implSymbol","IteratorPrototype","Object","create","next","value","internal","iterInternalSymbol","target","kind","index","values","Array","from","len","length","undefined","done","pair","key","map","tryWrapperForImpl","result","writable","enumerable","configurable","Symbol","toStringTag","FormData","new","TypeError","args","curArg","arguments","context","push","iface","setup","defineProperty","prototype","iterator","entries","module","exports","createDefaultIterator","forEach","callback","thisArg","pairs","i","call","append","name","delete","_delete","get","getAll","has","set","keys","_mixedIntoPredicates","obj","hasOwn","Impl","implementation","isMixedInto","isImpl","wrapper","wrapperForImpl","implForWrapper","constructorArgs","privateData","createImpl","_internalSetup","wrapperSymbol","init","interface","expose","Window","Worker"],"sources":["G:/scientificKeyboard/keyboard/node_modules/mathjax-node/node_modules/jsdom/lib/jsdom/living/generated/FormData.js"],"sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst convertHTMLFormElement = require(\"./HTMLFormElement.js\").convert;\nconst isBlob = require(\"./Blob.js\").is;\nconst convertBlob = require(\"./Blob.js\").convert;\nconst impl = utils.implSymbol;\n\nconst IteratorPrototype = Object.create(utils.IteratorPrototype, {\n  next: {\n    value: function next() {\n      const internal = this[utils.iterInternalSymbol];\n      const { target, kind, index } = internal;\n      const values = Array.from(target[impl]);\n      const len = values.length;\n      if (index >= len) {\n        return { value: undefined, done: true };\n      }\n\n      const pair = values[index];\n      internal.index = index + 1;\n      const [key, value] = pair.map(utils.tryWrapperForImpl);\n\n      let result;\n      switch (kind) {\n        case \"key\":\n          result = key;\n          break;\n        case \"value\":\n          result = value;\n          break;\n        case \"key+value\":\n          result = [key, value];\n          break;\n      }\n      return { value: result, done: false };\n    },\n    writable: true,\n    enumerable: true,\n    configurable: true\n  },\n  [Symbol.toStringTag]: {\n    value: \"FormDataIterator\",\n    writable: false,\n    enumerable: false,\n    configurable: true\n  }\n});\n\nfunction FormData() {\n  if (new.target === undefined) {\n    throw new TypeError(\n      \"Failed to construct 'FormData'. Please use the 'new' operator; this constructor \" +\n        \"cannot be called as a function.\"\n    );\n  }\n  const args = [];\n  {\n    let curArg = arguments[0];\n    if (curArg !== undefined) {\n      curArg = convertHTMLFormElement(curArg, { context: \"Failed to construct 'FormData': parameter 1\" });\n    }\n    args.push(curArg);\n  }\n\n  iface.setup(this, args);\n}\n\nObject.defineProperty(FormData, \"prototype\", {\n  value: FormData.prototype,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\n\nObject.defineProperty(FormData.prototype, Symbol.iterator, {\n  writable: true,\n  enumerable: false,\n  configurable: true,\n  value: function entries() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n    return module.exports.createDefaultIterator(this, \"key+value\");\n  }\n});\nFormData.prototype.forEach = function forEach(callback) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  if (arguments.length < 1) {\n    throw new TypeError(\"Failed to execute 'forEach' on 'FormData': 1 argument required, \" + \"but only 0 present.\");\n  }\n  if (typeof callback !== \"function\") {\n    throw new TypeError(\n      \"Failed to execute 'forEach' on 'FormData': The callback provided \" + \"as parameter 1 is not a function.\"\n    );\n  }\n  const thisArg = arguments[1];\n  let pairs = Array.from(this[impl]);\n  let i = 0;\n  while (i < pairs.length) {\n    const [key, value] = pairs[i].map(utils.tryWrapperForImpl);\n    callback.call(thisArg, value, key, this);\n    pairs = Array.from(this[impl]);\n    i++;\n  }\n};\nFormData.prototype.append = function append(name, value) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  if (arguments.length < 2) {\n    throw new TypeError(\n      \"Failed to execute 'append' on 'FormData': 2 arguments required, but only \" + arguments.length + \" present.\"\n    );\n  }\n  const args = [];\n  switch (arguments.length) {\n    case 2:\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, { context: \"Failed to execute 'append' on 'FormData': parameter 1\" });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        if (isBlob(curArg)) {\n          {\n            let curArg = arguments[1];\n            curArg = convertBlob(curArg, { context: \"Failed to execute 'append' on 'FormData': parameter 2\" });\n            args.push(curArg);\n          }\n        } else {\n          {\n            let curArg = arguments[1];\n            curArg = conversions[\"USVString\"](curArg, {\n              context: \"Failed to execute 'append' on 'FormData': parameter 2\"\n            });\n            args.push(curArg);\n          }\n        }\n      }\n      break;\n    default:\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, { context: \"Failed to execute 'append' on 'FormData': parameter 1\" });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = convertBlob(curArg, { context: \"Failed to execute 'append' on 'FormData': parameter 2\" });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[2];\n        if (curArg !== undefined) {\n          curArg = conversions[\"USVString\"](curArg, {\n            context: \"Failed to execute 'append' on 'FormData': parameter 3\"\n          });\n        }\n        args.push(curArg);\n      }\n  }\n  return this[impl].append(...args);\n};\n\nFormData.prototype.delete = function _delete(name) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  if (arguments.length < 1) {\n    throw new TypeError(\n      \"Failed to execute 'delete' on 'FormData': 1 argument required, but only \" + arguments.length + \" present.\"\n    );\n  }\n  const args = [];\n  {\n    let curArg = arguments[0];\n    curArg = conversions[\"USVString\"](curArg, { context: \"Failed to execute 'delete' on 'FormData': parameter 1\" });\n    args.push(curArg);\n  }\n  return this[impl].delete(...args);\n};\n\nFormData.prototype.get = function get(name) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  if (arguments.length < 1) {\n    throw new TypeError(\n      \"Failed to execute 'get' on 'FormData': 1 argument required, but only \" + arguments.length + \" present.\"\n    );\n  }\n  const args = [];\n  {\n    let curArg = arguments[0];\n    curArg = conversions[\"USVString\"](curArg, { context: \"Failed to execute 'get' on 'FormData': parameter 1\" });\n    args.push(curArg);\n  }\n  return utils.tryWrapperForImpl(this[impl].get(...args));\n};\n\nFormData.prototype.getAll = function getAll(name) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  if (arguments.length < 1) {\n    throw new TypeError(\n      \"Failed to execute 'getAll' on 'FormData': 1 argument required, but only \" + arguments.length + \" present.\"\n    );\n  }\n  const args = [];\n  {\n    let curArg = arguments[0];\n    curArg = conversions[\"USVString\"](curArg, { context: \"Failed to execute 'getAll' on 'FormData': parameter 1\" });\n    args.push(curArg);\n  }\n  return utils.tryWrapperForImpl(this[impl].getAll(...args));\n};\n\nFormData.prototype.has = function has(name) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  if (arguments.length < 1) {\n    throw new TypeError(\n      \"Failed to execute 'has' on 'FormData': 1 argument required, but only \" + arguments.length + \" present.\"\n    );\n  }\n  const args = [];\n  {\n    let curArg = arguments[0];\n    curArg = conversions[\"USVString\"](curArg, { context: \"Failed to execute 'has' on 'FormData': parameter 1\" });\n    args.push(curArg);\n  }\n  return this[impl].has(...args);\n};\n\nFormData.prototype.set = function set(name, value) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  if (arguments.length < 2) {\n    throw new TypeError(\n      \"Failed to execute 'set' on 'FormData': 2 arguments required, but only \" + arguments.length + \" present.\"\n    );\n  }\n  const args = [];\n  switch (arguments.length) {\n    case 2:\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, { context: \"Failed to execute 'set' on 'FormData': parameter 1\" });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        if (isBlob(curArg)) {\n          {\n            let curArg = arguments[1];\n            curArg = convertBlob(curArg, { context: \"Failed to execute 'set' on 'FormData': parameter 2\" });\n            args.push(curArg);\n          }\n        } else {\n          {\n            let curArg = arguments[1];\n            curArg = conversions[\"USVString\"](curArg, {\n              context: \"Failed to execute 'set' on 'FormData': parameter 2\"\n            });\n            args.push(curArg);\n          }\n        }\n      }\n      break;\n    default:\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, { context: \"Failed to execute 'set' on 'FormData': parameter 1\" });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = convertBlob(curArg, { context: \"Failed to execute 'set' on 'FormData': parameter 2\" });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[2];\n        if (curArg !== undefined) {\n          curArg = conversions[\"USVString\"](curArg, { context: \"Failed to execute 'set' on 'FormData': parameter 3\" });\n        }\n        args.push(curArg);\n      }\n  }\n  return this[impl].set(...args);\n};\n\nFormData.prototype.entries = FormData.prototype[Symbol.iterator];\n\nFormData.prototype.keys = function keys() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  return module.exports.createDefaultIterator(this, \"key\");\n};\n\nFormData.prototype.values = function values() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  return module.exports.createDefaultIterator(this, \"value\");\n};\n\nObject.defineProperty(FormData.prototype, Symbol.toStringTag, {\n  value: \"FormData\",\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\n\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj, { context = \"The provided value\" } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'FormData'.`);\n  },\n\n  createDefaultIterator(target, kind) {\n    const iterator = Object.create(IteratorPrototype);\n    Object.defineProperty(iterator, utils.iterInternalSymbol, {\n      value: { target, kind, index: 0 },\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n    return iterator;\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(FormData.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(FormData.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {},\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: FormData,\n  expose: {\n    Window: { FormData },\n    Worker: { FormData }\n  }\n}; // iface\nmodule.exports = iface;\n\nconst Impl = require(\"../xhr/FormData-impl.js\");\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}