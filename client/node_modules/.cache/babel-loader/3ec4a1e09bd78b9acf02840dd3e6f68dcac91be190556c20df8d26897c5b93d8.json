{"ast":null,"code":"\"use strict\";\n\nconst xnv = require(\"xml-name-validator\");\nconst DOMException = require(\"domexception\");\nconst {\n  XML_NS,\n  XMLNS_NS\n} = require(\"../helpers/namespaces\");\n\n// https://dom.spec.whatwg.org/#validate\n\nexports.name = function (name) {\n  const result = xnv.name(name);\n  if (!result.success) {\n    throw new DOMException(\"\\\"\" + name + \"\\\" did not match the Name production: \" + result.error, \"InvalidCharacterError\");\n  }\n};\nexports.qname = function (qname) {\n  exports.name(qname);\n  const result = xnv.qname(qname);\n  if (!result.success) {\n    throw new DOMException(\"\\\"\" + qname + \"\\\" did not match the QName production: \" + result.error, \"InvalidCharacterError\");\n  }\n};\nexports.validateAndExtract = function (namespace, qualifiedName) {\n  if (namespace === \"\") {\n    namespace = null;\n  }\n  exports.qname(qualifiedName);\n  let prefix = null;\n  let localName = qualifiedName;\n  const colonIndex = qualifiedName.indexOf(\":\");\n  if (colonIndex !== -1) {\n    prefix = qualifiedName.substring(0, colonIndex);\n    localName = qualifiedName.substring(colonIndex + 1);\n  }\n  if (prefix !== null && namespace === null) {\n    throw new DOMException(\"A namespace was given but a prefix was also extracted from the qualifiedName\", \"NamespaceError\");\n  }\n  if (prefix === \"xml\" && namespace !== XML_NS) {\n    throw new DOMException(\"A prefix of \\\"xml\\\" was given but the namespace was not the XML namespace\", \"NamespaceError\");\n  }\n  if ((qualifiedName === \"xmlns\" || prefix === \"xmlns\") && namespace !== XMLNS_NS) {\n    throw new DOMException(\"A prefix or qualifiedName of \\\"xmlns\\\" was given but the namespace was not the XMLNS \" + \"namespace\", \"NamespaceError\");\n  }\n  if (namespace === XMLNS_NS && qualifiedName !== \"xmlns\" && prefix !== \"xmlns\") {\n    throw new DOMException(\"The XMLNS namespace was given but neither the prefix nor qualifiedName was \\\"xmlns\\\"\", \"NamespaceError\");\n  }\n  return {\n    namespace,\n    prefix,\n    localName\n  };\n};","map":{"version":3,"names":["xnv","require","DOMException","XML_NS","XMLNS_NS","exports","name","result","success","error","qname","validateAndExtract","namespace","qualifiedName","prefix","localName","colonIndex","indexOf","substring"],"sources":["G:/scientificKeyboard/keyboard/node_modules/mathjax-node/node_modules/jsdom/lib/jsdom/living/helpers/validate-names.js"],"sourcesContent":["\"use strict\";\nconst xnv = require(\"xml-name-validator\");\nconst DOMException = require(\"domexception\");\nconst { XML_NS, XMLNS_NS } = require(\"../helpers/namespaces\");\n\n// https://dom.spec.whatwg.org/#validate\n\nexports.name = function (name) {\n  const result = xnv.name(name);\n  if (!result.success) {\n    throw new DOMException(\n      \"\\\"\" + name + \"\\\" did not match the Name production: \" + result.error,\n      \"InvalidCharacterError\"\n    );\n  }\n};\n\nexports.qname = function (qname) {\n  exports.name(qname);\n\n  const result = xnv.qname(qname);\n  if (!result.success) {\n    throw new DOMException(\n      \"\\\"\" + qname + \"\\\" did not match the QName production: \" + result.error,\n      \"InvalidCharacterError\"\n    );\n  }\n};\n\nexports.validateAndExtract = function (namespace, qualifiedName) {\n  if (namespace === \"\") {\n    namespace = null;\n  }\n\n  exports.qname(qualifiedName);\n\n  let prefix = null;\n  let localName = qualifiedName;\n\n  const colonIndex = qualifiedName.indexOf(\":\");\n  if (colonIndex !== -1) {\n    prefix = qualifiedName.substring(0, colonIndex);\n    localName = qualifiedName.substring(colonIndex + 1);\n  }\n\n  if (prefix !== null && namespace === null) {\n    throw new DOMException(\n      \"A namespace was given but a prefix was also extracted from the qualifiedName\",\n      \"NamespaceError\"\n    );\n  }\n\n  if (prefix === \"xml\" && namespace !== XML_NS) {\n    throw new DOMException(\n      \"A prefix of \\\"xml\\\" was given but the namespace was not the XML namespace\",\n      \"NamespaceError\"\n    );\n  }\n\n  if ((qualifiedName === \"xmlns\" || prefix === \"xmlns\") && namespace !== XMLNS_NS) {\n    throw new DOMException(\"A prefix or qualifiedName of \\\"xmlns\\\" was given but the namespace was not the XMLNS \" +\n      \"namespace\", \"NamespaceError\");\n  }\n\n  if (namespace === XMLNS_NS && qualifiedName !== \"xmlns\" && prefix !== \"xmlns\") {\n    throw new DOMException(\n      \"The XMLNS namespace was given but neither the prefix nor qualifiedName was \\\"xmlns\\\"\",\n      \"NamespaceError\"\n    );\n  }\n\n  return { namespace, prefix, localName };\n};\n"],"mappings":"AAAA,YAAY;;AACZ,MAAMA,GAAG,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AACzC,MAAMC,YAAY,GAAGD,OAAO,CAAC,cAAc,CAAC;AAC5C,MAAM;EAAEE,MAAM;EAAEC;AAAS,CAAC,GAAGH,OAAO,CAAC,uBAAuB,CAAC;;AAE7D;;AAEAI,OAAO,CAACC,IAAI,GAAG,UAAUA,IAAI,EAAE;EAC7B,MAAMC,MAAM,GAAGP,GAAG,CAACM,IAAI,CAACA,IAAI,CAAC;EAC7B,IAAI,CAACC,MAAM,CAACC,OAAO,EAAE;IACnB,MAAM,IAAIN,YAAY,CACpB,IAAI,GAAGI,IAAI,GAAG,wCAAwC,GAAGC,MAAM,CAACE,KAAK,EACrE,uBACF,CAAC;EACH;AACF,CAAC;AAEDJ,OAAO,CAACK,KAAK,GAAG,UAAUA,KAAK,EAAE;EAC/BL,OAAO,CAACC,IAAI,CAACI,KAAK,CAAC;EAEnB,MAAMH,MAAM,GAAGP,GAAG,CAACU,KAAK,CAACA,KAAK,CAAC;EAC/B,IAAI,CAACH,MAAM,CAACC,OAAO,EAAE;IACnB,MAAM,IAAIN,YAAY,CACpB,IAAI,GAAGQ,KAAK,GAAG,yCAAyC,GAAGH,MAAM,CAACE,KAAK,EACvE,uBACF,CAAC;EACH;AACF,CAAC;AAEDJ,OAAO,CAACM,kBAAkB,GAAG,UAAUC,SAAS,EAAEC,aAAa,EAAE;EAC/D,IAAID,SAAS,KAAK,EAAE,EAAE;IACpBA,SAAS,GAAG,IAAI;EAClB;EAEAP,OAAO,CAACK,KAAK,CAACG,aAAa,CAAC;EAE5B,IAAIC,MAAM,GAAG,IAAI;EACjB,IAAIC,SAAS,GAAGF,aAAa;EAE7B,MAAMG,UAAU,GAAGH,aAAa,CAACI,OAAO,CAAC,GAAG,CAAC;EAC7C,IAAID,UAAU,KAAK,CAAC,CAAC,EAAE;IACrBF,MAAM,GAAGD,aAAa,CAACK,SAAS,CAAC,CAAC,EAAEF,UAAU,CAAC;IAC/CD,SAAS,GAAGF,aAAa,CAACK,SAAS,CAACF,UAAU,GAAG,CAAC,CAAC;EACrD;EAEA,IAAIF,MAAM,KAAK,IAAI,IAAIF,SAAS,KAAK,IAAI,EAAE;IACzC,MAAM,IAAIV,YAAY,CACpB,8EAA8E,EAC9E,gBACF,CAAC;EACH;EAEA,IAAIY,MAAM,KAAK,KAAK,IAAIF,SAAS,KAAKT,MAAM,EAAE;IAC5C,MAAM,IAAID,YAAY,CACpB,2EAA2E,EAC3E,gBACF,CAAC;EACH;EAEA,IAAI,CAACW,aAAa,KAAK,OAAO,IAAIC,MAAM,KAAK,OAAO,KAAKF,SAAS,KAAKR,QAAQ,EAAE;IAC/E,MAAM,IAAIF,YAAY,CAAC,uFAAuF,GAC5G,WAAW,EAAE,gBAAgB,CAAC;EAClC;EAEA,IAAIU,SAAS,KAAKR,QAAQ,IAAIS,aAAa,KAAK,OAAO,IAAIC,MAAM,KAAK,OAAO,EAAE;IAC7E,MAAM,IAAIZ,YAAY,CACpB,sFAAsF,EACtF,gBACF,CAAC;EACH;EAEA,OAAO;IAAEU,SAAS;IAAEE,MAAM;IAAEC;EAAU,CAAC;AACzC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}