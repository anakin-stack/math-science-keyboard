{"ast":null,"code":"\"use strict\";\n\nconst MIMEType = require(\"whatwg-mimetype\");\nconst parseDataURL = require(\"data-urls\");\nconst sniffHTMLEncoding = require(\"html-encoding-sniffer\");\nconst whatwgEncoding = require(\"whatwg-encoding\");\nconst fs = require(\"fs\");\nconst request = require(\"request\");\nconst {\n  documentBaseURLSerialized\n} = require(\"../living/helpers/document-base-url\");\nconst NODE_TYPE = require(\"../living/node-type\");\n\n/* eslint-disable no-restricted-modules */\n// TODO: stop using the built-in URL in favor of the spec-compliant whatwg-url package\n// This legacy usage is in the process of being purged.\nconst URL = require(\"url\");\n/* eslint-enable no-restricted-modules */\n\nconst IS_BROWSER = Object.prototype.toString.call(process) !== \"[object process]\";\nfunction createResourceLoadHandler(element, resourceUrl, document, loadCallback) {\n  if (loadCallback === undefined) {\n    loadCallback = () => {\n      // do nothing\n    };\n  }\n  return (err, data, response) => {\n    const ev = document.createEvent(\"HTMLEvents\");\n    if (!err) {\n      try {\n        loadCallback.call(element, data, resourceUrl, response);\n        ev.initEvent(\"load\", false, false);\n      } catch (e) {\n        err = e;\n      }\n    }\n    if (err) {\n      if (!err.isAbortError) {\n        ev.initEvent(\"error\", false, false);\n        ev.error = err;\n        element.dispatchEvent(ev);\n        const error = new Error(`Could not load ${element.localName}: \"${resourceUrl}\"`);\n        error.detail = err;\n        error.type = \"resource loading\";\n        document._defaultView._virtualConsole.emit(\"jsdomError\", error);\n      }\n    } else {\n      element.dispatchEvent(ev);\n    }\n  };\n}\nexports.readFile = function (filePath, _ref, callback) {\n  let {\n    defaultEncoding,\n    detectMetaCharset\n  } = _ref;\n  const readableStream = fs.createReadStream(filePath);\n  let data = Buffer.alloc(0);\n  readableStream.on(\"error\", callback);\n  readableStream.on(\"data\", chunk => {\n    data = Buffer.concat([data, chunk]);\n  });\n  readableStream.on(\"end\", () => {\n    // Not passing default encoding means binary\n    if (defaultEncoding) {\n      const encoding = detectMetaCharset ? sniffHTMLEncoding(data, {\n        defaultEncoding\n      }) : whatwgEncoding.getBOMEncoding(data) || defaultEncoding;\n      const decoded = whatwgEncoding.decode(data, encoding);\n      callback(null, decoded, {\n        headers: {\n          \"content-type\": \"text/plain;charset=\" + encoding\n        }\n      });\n    } else {\n      callback(null, data);\n    }\n  });\n  return {\n    abort() {\n      readableStream.destroy();\n      const error = new Error(\"request canceled by user\");\n      error.isAbortError = true;\n      callback(error);\n    }\n  };\n};\nfunction readDataURL(dataURL, _ref2, callback) {\n  let {\n    defaultEncoding,\n    detectMetaCharset\n  } = _ref2;\n  try {\n    const parsed = parseDataURL(dataURL);\n    // If default encoding does not exist, pass on binary data.\n    if (defaultEncoding) {\n      const sniffOptions = {\n        transportLayerEncodingLabel: parsed.mimeType.parameters.get(\"charset\"),\n        defaultEncoding\n      };\n      const encoding = detectMetaCharset ? sniffHTMLEncoding(parsed.body, sniffOptions) : whatwgEncoding.getBOMEncoding(parsed.body) || whatwgEncoding.labelToName(parsed.mimeType.parameters.get(\"charset\")) || defaultEncoding;\n      const decoded = whatwgEncoding.decode(parsed.body, encoding);\n      parsed.mimeType.parameters.set(\"charset\", encoding);\n      callback(null, decoded, {\n        headers: {\n          \"content-type\": parsed.mimeType.toString()\n        }\n      });\n    } else {\n      callback(null, parsed.body, {\n        headers: {\n          \"content-type\": parsed.mimeType.toString()\n        }\n      });\n    }\n  } catch (err) {\n    callback(err, null);\n  }\n  return null;\n}\n\n// NOTE: request wraps tough-cookie cookie jar\n// (see: https://github.com/request/request/blob/master/lib/cookies.js).\n// Therefore, to pass our cookie jar to the request, we need to create\n// request's wrapper and monkey patch it with our jar.\nexports.wrapCookieJarForRequest = cookieJar => {\n  const jarWrapper = request.jar();\n  jarWrapper._jar = cookieJar;\n  return jarWrapper;\n};\nfunction fetch(urlObj, options, callback) {\n  if (urlObj.protocol === \"data:\") {\n    return readDataURL(urlObj.href, options, callback);\n  } else if (urlObj.hostname) {\n    return exports.download(urlObj, options, callback);\n  }\n  const filePath = urlObj.pathname.replace(/^file:\\/\\//, \"\").replace(/^\\/([a-z]):\\//i, \"$1:/\").replace(/%20/g, \" \");\n  return exports.readFile(filePath, options, callback);\n}\nexports.enqueue = function (element, resourceUrl, callback) {\n  const document = element.nodeType === NODE_TYPE.DOCUMENT_NODE ? element : element._ownerDocument;\n  if (document._queue) {\n    const loadHandler = createResourceLoadHandler(element, resourceUrl || document.URL, document, callback);\n    return document._queue.push(loadHandler);\n  }\n  return () => {\n    // do nothing in queue-less documents\n  };\n};\nexports.download = function (url, options, callback) {\n  const requestOptions = {\n    pool: options.pool,\n    agent: options.agent,\n    agentOptions: options.agentOptions,\n    agentClass: options.agentClass,\n    strictSSL: options.strictSSL,\n    gzip: true,\n    jar: exports.wrapCookieJarForRequest(options.cookieJar),\n    encoding: null,\n    headers: {\n      \"User-Agent\": options.userAgent,\n      \"Accept-Language\": \"en\",\n      Accept: options.accept || \"*/*\"\n    }\n  };\n  if (options.referrer && !IS_BROWSER) {\n    requestOptions.headers.referer = options.referrer;\n  }\n  if (options.proxy) {\n    requestOptions.proxy = options.proxy;\n  }\n  Object.assign(requestOptions.headers, options.headers);\n  const {\n    defaultEncoding,\n    detectMetaCharset\n  } = options;\n  const req = request(url, requestOptions, (error, response, bufferData) => {\n    if (!error) {\n      // If default encoding does not exist, pass on binary data.\n      if (defaultEncoding) {\n        const contentType = MIMEType.parse(response.headers[\"content-type\"]) || new MIMEType(\"text/plain\");\n        const sniffOptions = {\n          transportLayerEncodingLabel: contentType.parameters.get(\"charset\"),\n          defaultEncoding\n        };\n        const encoding = detectMetaCharset ? sniffHTMLEncoding(bufferData, sniffOptions) : whatwgEncoding.getBOMEncoding(bufferData) || whatwgEncoding.labelToName(contentType.parameters.get(\"charset\")) || defaultEncoding;\n        const decoded = whatwgEncoding.decode(bufferData, encoding);\n        contentType.parameters.set(\"charset\", encoding);\n        response.headers[\"content-type\"] = contentType.toString();\n        callback(null, decoded, response);\n      } else {\n        callback(null, bufferData, response);\n      }\n    } else {\n      callback(error, null, response);\n    }\n  });\n  return {\n    abort() {\n      req.abort();\n      const error = new Error(\"request canceled by user\");\n      error.isAbortError = true;\n      callback(error);\n    }\n  };\n};\nexports.load = function (element, urlString, options, callback) {\n  const document = element._ownerDocument;\n  const documentImpl = document.implementation;\n  if (!documentImpl._hasFeature(\"FetchExternalResources\", element.tagName.toLowerCase())) {\n    return;\n  }\n  if (documentImpl._hasFeature(\"SkipExternalResources\", urlString)) {\n    return;\n  }\n  const urlObj = URL.parse(urlString);\n  const enqueued = exports.enqueue(element, urlString, callback);\n  const customLoader = document._customResourceLoader;\n  const requestManager = document._requestManager;\n  const cookieJar = document._cookieJar;\n  options.accept = element._accept;\n  options.cookieJar = cookieJar;\n  options.referrer = document.URL;\n  options.pool = document._pool;\n  options.agentOptions = document._agentOptions;\n  options.strictSSL = document._strictSSL;\n  options.proxy = document._proxy;\n  options.userAgent = document._defaultView.navigator.userAgent;\n  let req = null;\n  function wrappedEnqueued() {\n    if (req && requestManager) {\n      requestManager.remove(req);\n    }\n    // do not trigger if the window is closed\n    if (element._ownerDocument && element._ownerDocument.defaultView.document) {\n      enqueued.apply(this, arguments);\n    }\n  }\n  if (typeof customLoader === \"function\") {\n    req = customLoader({\n      element,\n      url: urlObj,\n      cookie: cookieJar.getCookieStringSync(urlObj, {\n        http: true\n      }),\n      baseUrl: documentBaseURLSerialized(document),\n      defaultFetch(fetchCallback) {\n        return fetch(urlObj, options, fetchCallback);\n      }\n    }, wrappedEnqueued);\n  } else {\n    req = fetch(urlObj, options, wrappedEnqueued);\n  }\n  if (req && requestManager) {\n    requestManager.add(req);\n  }\n};","map":{"version":3,"names":["MIMEType","require","parseDataURL","sniffHTMLEncoding","whatwgEncoding","fs","request","documentBaseURLSerialized","NODE_TYPE","URL","IS_BROWSER","Object","prototype","toString","call","process","createResourceLoadHandler","element","resourceUrl","document","loadCallback","undefined","err","data","response","ev","createEvent","initEvent","e","isAbortError","error","dispatchEvent","Error","localName","detail","type","_defaultView","_virtualConsole","emit","exports","readFile","filePath","_ref","callback","defaultEncoding","detectMetaCharset","readableStream","createReadStream","Buffer","alloc","on","chunk","concat","encoding","getBOMEncoding","decoded","decode","headers","abort","destroy","readDataURL","dataURL","_ref2","parsed","sniffOptions","transportLayerEncodingLabel","mimeType","parameters","get","body","labelToName","set","wrapCookieJarForRequest","cookieJar","jarWrapper","jar","_jar","fetch","urlObj","options","protocol","href","hostname","download","pathname","replace","enqueue","nodeType","DOCUMENT_NODE","_ownerDocument","_queue","loadHandler","push","url","requestOptions","pool","agent","agentOptions","agentClass","strictSSL","gzip","userAgent","Accept","accept","referrer","referer","proxy","assign","req","bufferData","contentType","parse","load","urlString","documentImpl","implementation","_hasFeature","tagName","toLowerCase","enqueued","customLoader","_customResourceLoader","requestManager","_requestManager","_cookieJar","_accept","_pool","_agentOptions","_strictSSL","_proxy","navigator","wrappedEnqueued","remove","defaultView","apply","arguments","cookie","getCookieStringSync","http","baseUrl","defaultFetch","fetchCallback","add"],"sources":["G:/scientificKeyboard/keyboard/node_modules/mathjax-node/node_modules/jsdom/lib/jsdom/browser/resource-loader.js"],"sourcesContent":["\"use strict\";\n\nconst MIMEType = require(\"whatwg-mimetype\");\nconst parseDataURL = require(\"data-urls\");\nconst sniffHTMLEncoding = require(\"html-encoding-sniffer\");\nconst whatwgEncoding = require(\"whatwg-encoding\");\nconst fs = require(\"fs\");\nconst request = require(\"request\");\nconst { documentBaseURLSerialized } = require(\"../living/helpers/document-base-url\");\nconst NODE_TYPE = require(\"../living/node-type\");\n\n/* eslint-disable no-restricted-modules */\n// TODO: stop using the built-in URL in favor of the spec-compliant whatwg-url package\n// This legacy usage is in the process of being purged.\nconst URL = require(\"url\");\n/* eslint-enable no-restricted-modules */\n\nconst IS_BROWSER = Object.prototype.toString.call(process) !== \"[object process]\";\n\nfunction createResourceLoadHandler(element, resourceUrl, document, loadCallback) {\n  if (loadCallback === undefined) {\n    loadCallback = () => {\n      // do nothing\n    };\n  }\n  return (err, data, response) => {\n    const ev = document.createEvent(\"HTMLEvents\");\n\n    if (!err) {\n      try {\n        loadCallback.call(element, data, resourceUrl, response);\n        ev.initEvent(\"load\", false, false);\n      } catch (e) {\n        err = e;\n      }\n    }\n\n    if (err) {\n      if (!err.isAbortError) {\n        ev.initEvent(\"error\", false, false);\n        ev.error = err;\n        element.dispatchEvent(ev);\n\n        const error = new Error(`Could not load ${element.localName}: \"${resourceUrl}\"`);\n        error.detail = err;\n        error.type = \"resource loading\";\n\n        document._defaultView._virtualConsole.emit(\"jsdomError\", error);\n      }\n    } else {\n      element.dispatchEvent(ev);\n    }\n  };\n}\n\nexports.readFile = function (filePath, { defaultEncoding, detectMetaCharset }, callback) {\n  const readableStream = fs.createReadStream(filePath);\n\n  let data = Buffer.alloc(0);\n\n  readableStream.on(\"error\", callback);\n\n  readableStream.on(\"data\", chunk => {\n    data = Buffer.concat([data, chunk]);\n  });\n\n  readableStream.on(\"end\", () => {\n    // Not passing default encoding means binary\n    if (defaultEncoding) {\n      const encoding = detectMetaCharset ?\n                       sniffHTMLEncoding(data, { defaultEncoding }) :\n                       whatwgEncoding.getBOMEncoding(data) || defaultEncoding;\n      const decoded = whatwgEncoding.decode(data, encoding);\n      callback(null, decoded, { headers: { \"content-type\": \"text/plain;charset=\" + encoding } });\n    } else {\n      callback(null, data);\n    }\n  });\n\n  return {\n    abort() {\n      readableStream.destroy();\n      const error = new Error(\"request canceled by user\");\n      error.isAbortError = true;\n      callback(error);\n    }\n  };\n};\n\nfunction readDataURL(dataURL, { defaultEncoding, detectMetaCharset }, callback) {\n  try {\n    const parsed = parseDataURL(dataURL);\n    // If default encoding does not exist, pass on binary data.\n    if (defaultEncoding) {\n      const sniffOptions = {\n        transportLayerEncodingLabel: parsed.mimeType.parameters.get(\"charset\"),\n        defaultEncoding\n      };\n\n      const encoding = detectMetaCharset ?\n                       sniffHTMLEncoding(parsed.body, sniffOptions) :\n                       whatwgEncoding.getBOMEncoding(parsed.body) ||\n                        whatwgEncoding.labelToName(parsed.mimeType.parameters.get(\"charset\")) ||\n                        defaultEncoding;\n      const decoded = whatwgEncoding.decode(parsed.body, encoding);\n\n      parsed.mimeType.parameters.set(\"charset\", encoding);\n\n      callback(null, decoded, { headers: { \"content-type\": parsed.mimeType.toString() } });\n    } else {\n      callback(null, parsed.body, { headers: { \"content-type\": parsed.mimeType.toString() } });\n    }\n  } catch (err) {\n    callback(err, null);\n  }\n  return null;\n}\n\n// NOTE: request wraps tough-cookie cookie jar\n// (see: https://github.com/request/request/blob/master/lib/cookies.js).\n// Therefore, to pass our cookie jar to the request, we need to create\n// request's wrapper and monkey patch it with our jar.\nexports.wrapCookieJarForRequest = cookieJar => {\n  const jarWrapper = request.jar();\n  jarWrapper._jar = cookieJar;\n  return jarWrapper;\n};\n\nfunction fetch(urlObj, options, callback) {\n  if (urlObj.protocol === \"data:\") {\n    return readDataURL(urlObj.href, options, callback);\n  } else if (urlObj.hostname) {\n    return exports.download(urlObj, options, callback);\n  }\n  const filePath = urlObj.pathname\n    .replace(/^file:\\/\\//, \"\")\n    .replace(/^\\/([a-z]):\\//i, \"$1:/\")\n    .replace(/%20/g, \" \");\n  return exports.readFile(filePath, options, callback);\n}\n\nexports.enqueue = function (element, resourceUrl, callback) {\n  const document = element.nodeType === NODE_TYPE.DOCUMENT_NODE ? element : element._ownerDocument;\n\n  if (document._queue) {\n    const loadHandler = createResourceLoadHandler(element, resourceUrl || document.URL, document, callback);\n    return document._queue.push(loadHandler);\n  }\n\n  return () => {\n    // do nothing in queue-less documents\n  };\n};\n\nexports.download = function (url, options, callback) {\n  const requestOptions = {\n    pool: options.pool,\n    agent: options.agent,\n    agentOptions: options.agentOptions,\n    agentClass: options.agentClass,\n    strictSSL: options.strictSSL,\n    gzip: true,\n    jar: exports.wrapCookieJarForRequest(options.cookieJar),\n    encoding: null,\n    headers: {\n      \"User-Agent\": options.userAgent,\n      \"Accept-Language\": \"en\",\n      Accept: options.accept || \"*/*\"\n    }\n  };\n  if (options.referrer && !IS_BROWSER) {\n    requestOptions.headers.referer = options.referrer;\n  }\n  if (options.proxy) {\n    requestOptions.proxy = options.proxy;\n  }\n  Object.assign(requestOptions.headers, options.headers);\n\n  const { defaultEncoding, detectMetaCharset } = options;\n\n  const req = request(url, requestOptions, (error, response, bufferData) => {\n    if (!error) {\n      // If default encoding does not exist, pass on binary data.\n      if (defaultEncoding) {\n        const contentType = MIMEType.parse(response.headers[\"content-type\"]) || new MIMEType(\"text/plain\");\n        const sniffOptions = {\n          transportLayerEncodingLabel: contentType.parameters.get(\"charset\"),\n          defaultEncoding\n        };\n\n        const encoding = detectMetaCharset ?\n                         sniffHTMLEncoding(bufferData, sniffOptions) :\n                         whatwgEncoding.getBOMEncoding(bufferData) ||\n                           whatwgEncoding.labelToName(contentType.parameters.get(\"charset\")) ||\n                           defaultEncoding;\n        const decoded = whatwgEncoding.decode(bufferData, encoding);\n\n        contentType.parameters.set(\"charset\", encoding);\n        response.headers[\"content-type\"] = contentType.toString();\n\n        callback(null, decoded, response);\n      } else {\n        callback(null, bufferData, response);\n      }\n    } else {\n      callback(error, null, response);\n    }\n  });\n  return {\n    abort() {\n      req.abort();\n      const error = new Error(\"request canceled by user\");\n      error.isAbortError = true;\n      callback(error);\n    }\n  };\n};\n\nexports.load = function (element, urlString, options, callback) {\n  const document = element._ownerDocument;\n  const documentImpl = document.implementation;\n\n  if (!documentImpl._hasFeature(\"FetchExternalResources\", element.tagName.toLowerCase())) {\n    return;\n  }\n\n  if (documentImpl._hasFeature(\"SkipExternalResources\", urlString)) {\n    return;\n  }\n\n  const urlObj = URL.parse(urlString);\n  const enqueued = exports.enqueue(element, urlString, callback);\n  const customLoader = document._customResourceLoader;\n  const requestManager = document._requestManager;\n  const cookieJar = document._cookieJar;\n\n  options.accept = element._accept;\n  options.cookieJar = cookieJar;\n  options.referrer = document.URL;\n  options.pool = document._pool;\n  options.agentOptions = document._agentOptions;\n  options.strictSSL = document._strictSSL;\n  options.proxy = document._proxy;\n  options.userAgent = document._defaultView.navigator.userAgent;\n\n  let req = null;\n  function wrappedEnqueued() {\n    if (req && requestManager) {\n      requestManager.remove(req);\n    }\n    // do not trigger if the window is closed\n    if (element._ownerDocument && element._ownerDocument.defaultView.document) {\n      enqueued.apply(this, arguments);\n    }\n  }\n  if (typeof customLoader === \"function\") {\n    req = customLoader(\n      {\n        element,\n        url: urlObj,\n        cookie: cookieJar.getCookieStringSync(urlObj, { http: true }),\n        baseUrl: documentBaseURLSerialized(document),\n        defaultFetch(fetchCallback) {\n          return fetch(urlObj, options, fetchCallback);\n        }\n      },\n      wrappedEnqueued\n    );\n  } else {\n    req = fetch(urlObj, options, wrappedEnqueued);\n  }\n  if (req && requestManager) {\n    requestManager.add(req);\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}