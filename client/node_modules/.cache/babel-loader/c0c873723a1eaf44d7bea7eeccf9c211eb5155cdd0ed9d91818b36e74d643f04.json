{"ast":null,"code":"\"use strict\";\n\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\nconst {\n  childrenByHTMLLocalName\n} = require(\"../helpers/traversal\");\nconst HTMLCollection = require(\"../generated/HTMLCollection\");\nconst DOMException = require(\"domexception\");\nclass HTMLTableSectionElementImpl extends HTMLElementImpl {\n  get rows() {\n    if (!this._rows) {\n      this._rows = HTMLCollection.createImpl([], {\n        element: this,\n        query: () => childrenByHTMLLocalName(this, \"tr\")\n      });\n    }\n    return this._rows;\n  }\n  insertRow(index) {\n    if (index < -1 || index > this.rows.length) {\n      throw new DOMException(\"Cannot insert a row at an index that is less than -1 or greater than the number of \" + \"existing rows\", \"IndexSizeError\");\n    }\n    const tr = this._ownerDocument.createElement(\"tr\");\n    if (index === -1 || index === this.rows.length) {\n      this.appendChild(tr);\n    } else {\n      const beforeTR = this.rows.item(index);\n      this.insertBefore(tr, beforeTR);\n    }\n    return tr;\n  }\n  deleteRow(index) {\n    if (index < -1 || index >= this.rows.length) {\n      throw new DOMException(`Cannot delete a row at index ${index}, where no row exists`, \"IndexSizeError\");\n    }\n    if (index === -1) {\n      if (this.rows.length > 0) {\n        const tr = this.rows.item(this.rows.length - 1);\n        this.removeChild(tr);\n      }\n    } else {\n      const tr = this.rows.item(index);\n      this.removeChild(tr);\n    }\n  }\n}\nmodule.exports = {\n  implementation: HTMLTableSectionElementImpl\n};","map":{"version":3,"names":["HTMLElementImpl","require","implementation","childrenByHTMLLocalName","HTMLCollection","DOMException","HTMLTableSectionElementImpl","rows","_rows","createImpl","element","query","insertRow","index","length","tr","_ownerDocument","createElement","appendChild","beforeTR","item","insertBefore","deleteRow","removeChild","module","exports"],"sources":["G:/scientificKeyboard/keyboard/node_modules/mathjax-node/node_modules/jsdom/lib/jsdom/living/nodes/HTMLTableSectionElement-impl.js"],"sourcesContent":["\"use strict\";\n\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\nconst { childrenByHTMLLocalName } = require(\"../helpers/traversal\");\nconst HTMLCollection = require(\"../generated/HTMLCollection\");\nconst DOMException = require(\"domexception\");\n\nclass HTMLTableSectionElementImpl extends HTMLElementImpl {\n  get rows() {\n    if (!this._rows) {\n      this._rows = HTMLCollection.createImpl([], {\n        element: this,\n        query: () => childrenByHTMLLocalName(this, \"tr\")\n      });\n    }\n    return this._rows;\n  }\n\n  insertRow(index) {\n    if (index < -1 || index > this.rows.length) {\n      throw new DOMException(\"Cannot insert a row at an index that is less than -1 or greater than the number of \" +\n        \"existing rows\", \"IndexSizeError\");\n    }\n\n    const tr = this._ownerDocument.createElement(\"tr\");\n\n    if (index === -1 || index === this.rows.length) {\n      this.appendChild(tr);\n    } else {\n      const beforeTR = this.rows.item(index);\n      this.insertBefore(tr, beforeTR);\n    }\n\n    return tr;\n  }\n\n  deleteRow(index) {\n    if (index < -1 || index >= this.rows.length) {\n      throw new DOMException(`Cannot delete a row at index ${index}, where no row exists`, \"IndexSizeError\");\n    }\n\n    if (index === -1) {\n      if (this.rows.length > 0) {\n        const tr = this.rows.item(this.rows.length - 1);\n        this.removeChild(tr);\n      }\n    } else {\n      const tr = this.rows.item(index);\n      this.removeChild(tr);\n    }\n  }\n}\n\nmodule.exports = {\n  implementation: HTMLTableSectionElementImpl\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,eAAe,GAAGC,OAAO,CAAC,oBAAoB,CAAC,CAACC,cAAc;AACpE,MAAM;EAAEC;AAAwB,CAAC,GAAGF,OAAO,CAAC,sBAAsB,CAAC;AACnE,MAAMG,cAAc,GAAGH,OAAO,CAAC,6BAA6B,CAAC;AAC7D,MAAMI,YAAY,GAAGJ,OAAO,CAAC,cAAc,CAAC;AAE5C,MAAMK,2BAA2B,SAASN,eAAe,CAAC;EACxD,IAAIO,IAAIA,CAAA,EAAG;IACT,IAAI,CAAC,IAAI,CAACC,KAAK,EAAE;MACf,IAAI,CAACA,KAAK,GAAGJ,cAAc,CAACK,UAAU,CAAC,EAAE,EAAE;QACzCC,OAAO,EAAE,IAAI;QACbC,KAAK,EAAEA,CAAA,KAAMR,uBAAuB,CAAC,IAAI,EAAE,IAAI;MACjD,CAAC,CAAC;IACJ;IACA,OAAO,IAAI,CAACK,KAAK;EACnB;EAEAI,SAASA,CAACC,KAAK,EAAE;IACf,IAAIA,KAAK,GAAG,CAAC,CAAC,IAAIA,KAAK,GAAG,IAAI,CAACN,IAAI,CAACO,MAAM,EAAE;MAC1C,MAAM,IAAIT,YAAY,CAAC,qFAAqF,GAC1G,eAAe,EAAE,gBAAgB,CAAC;IACtC;IAEA,MAAMU,EAAE,GAAG,IAAI,CAACC,cAAc,CAACC,aAAa,CAAC,IAAI,CAAC;IAElD,IAAIJ,KAAK,KAAK,CAAC,CAAC,IAAIA,KAAK,KAAK,IAAI,CAACN,IAAI,CAACO,MAAM,EAAE;MAC9C,IAAI,CAACI,WAAW,CAACH,EAAE,CAAC;IACtB,CAAC,MAAM;MACL,MAAMI,QAAQ,GAAG,IAAI,CAACZ,IAAI,CAACa,IAAI,CAACP,KAAK,CAAC;MACtC,IAAI,CAACQ,YAAY,CAACN,EAAE,EAAEI,QAAQ,CAAC;IACjC;IAEA,OAAOJ,EAAE;EACX;EAEAO,SAASA,CAACT,KAAK,EAAE;IACf,IAAIA,KAAK,GAAG,CAAC,CAAC,IAAIA,KAAK,IAAI,IAAI,CAACN,IAAI,CAACO,MAAM,EAAE;MAC3C,MAAM,IAAIT,YAAY,CAAE,gCAA+BQ,KAAM,uBAAsB,EAAE,gBAAgB,CAAC;IACxG;IAEA,IAAIA,KAAK,KAAK,CAAC,CAAC,EAAE;MAChB,IAAI,IAAI,CAACN,IAAI,CAACO,MAAM,GAAG,CAAC,EAAE;QACxB,MAAMC,EAAE,GAAG,IAAI,CAACR,IAAI,CAACa,IAAI,CAAC,IAAI,CAACb,IAAI,CAACO,MAAM,GAAG,CAAC,CAAC;QAC/C,IAAI,CAACS,WAAW,CAACR,EAAE,CAAC;MACtB;IACF,CAAC,MAAM;MACL,MAAMA,EAAE,GAAG,IAAI,CAACR,IAAI,CAACa,IAAI,CAACP,KAAK,CAAC;MAChC,IAAI,CAACU,WAAW,CAACR,EAAE,CAAC;IACtB;EACF;AACF;AAEAS,MAAM,CAACC,OAAO,GAAG;EACfvB,cAAc,EAAEI;AAClB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}