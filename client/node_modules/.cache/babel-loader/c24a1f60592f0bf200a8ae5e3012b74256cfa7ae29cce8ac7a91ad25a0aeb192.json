{"ast":null,"code":"\"use strict\";\n\nconst {\n  mixin\n} = require(\"../../utils\");\nconst SVGNumber = require(\"../generated/SVGNumber\");\nconst SVGGraphicsElementImpl = require(\"./SVGGraphicsElement-impl\").implementation;\nconst WindowEventHandlersImpl = require(\"./WindowEventHandlers-impl\").implementation;\nconst {\n  domSymbolTree\n} = require(\"../helpers/internal-constants\");\nconst {\n  ELEMENT_NODE\n} = require(\"../node-type\");\nclass SVGSVGElementImpl extends SVGGraphicsElementImpl {\n  constructor(args, privateData) {\n    super(args, privateData);\n    this._proxyWindowEventsToWindow();\n  }\n  createSVGNumber() {\n    return SVGNumber.createImpl([], {});\n  }\n  getElementById(elementId) {\n    // TODO: optimize with _ids caching trick; see Document class.\n    for (const node of domSymbolTree.treeIterator(this)) {\n      if (node.nodeType === ELEMENT_NODE && node.getAttribute(\"id\") === elementId) {\n        return node;\n      }\n    }\n    return null;\n  }\n  suspendRedraw() {\n    return 1;\n  }\n  unsuspendRedraw() {}\n  unsuspendRedrawAll() {}\n  forceRedraw() {}\n}\nmixin(SVGSVGElementImpl.prototype, WindowEventHandlersImpl.prototype);\nmodule.exports = {\n  implementation: SVGSVGElementImpl\n};","map":{"version":3,"names":["mixin","require","SVGNumber","SVGGraphicsElementImpl","implementation","WindowEventHandlersImpl","domSymbolTree","ELEMENT_NODE","SVGSVGElementImpl","constructor","args","privateData","_proxyWindowEventsToWindow","createSVGNumber","createImpl","getElementById","elementId","node","treeIterator","nodeType","getAttribute","suspendRedraw","unsuspendRedraw","unsuspendRedrawAll","forceRedraw","prototype","module","exports"],"sources":["G:/scientificKeyboard/keyboard/node_modules/mathjax-node/node_modules/jsdom/lib/jsdom/living/nodes/SVGSVGElement-impl.js"],"sourcesContent":["\"use strict\";\n\nconst { mixin } = require(\"../../utils\");\nconst SVGNumber = require(\"../generated/SVGNumber\");\nconst SVGGraphicsElementImpl = require(\"./SVGGraphicsElement-impl\").implementation;\nconst WindowEventHandlersImpl = require(\"./WindowEventHandlers-impl\").implementation;\nconst { domSymbolTree } = require(\"../helpers/internal-constants\");\nconst { ELEMENT_NODE } = require(\"../node-type\");\n\nclass SVGSVGElementImpl extends SVGGraphicsElementImpl {\n  constructor(args, privateData) {\n    super(args, privateData);\n    this._proxyWindowEventsToWindow();\n  }\n\n  createSVGNumber() {\n    return SVGNumber.createImpl([], {});\n  }\n\n  getElementById(elementId) {\n    // TODO: optimize with _ids caching trick; see Document class.\n    for (const node of domSymbolTree.treeIterator(this)) {\n      if (node.nodeType === ELEMENT_NODE && node.getAttribute(\"id\") === elementId) {\n        return node;\n      }\n    }\n    return null;\n  }\n\n  suspendRedraw() {\n    return 1;\n  }\n  unsuspendRedraw() {}\n  unsuspendRedrawAll() {}\n  forceRedraw() {}\n}\n\nmixin(SVGSVGElementImpl.prototype, WindowEventHandlersImpl.prototype);\n\nmodule.exports = {\n  implementation: SVGSVGElementImpl\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAM;EAAEA;AAAM,CAAC,GAAGC,OAAO,CAAC,aAAa,CAAC;AACxC,MAAMC,SAAS,GAAGD,OAAO,CAAC,wBAAwB,CAAC;AACnD,MAAME,sBAAsB,GAAGF,OAAO,CAAC,2BAA2B,CAAC,CAACG,cAAc;AAClF,MAAMC,uBAAuB,GAAGJ,OAAO,CAAC,4BAA4B,CAAC,CAACG,cAAc;AACpF,MAAM;EAAEE;AAAc,CAAC,GAAGL,OAAO,CAAC,+BAA+B,CAAC;AAClE,MAAM;EAAEM;AAAa,CAAC,GAAGN,OAAO,CAAC,cAAc,CAAC;AAEhD,MAAMO,iBAAiB,SAASL,sBAAsB,CAAC;EACrDM,WAAWA,CAACC,IAAI,EAAEC,WAAW,EAAE;IAC7B,KAAK,CAACD,IAAI,EAAEC,WAAW,CAAC;IACxB,IAAI,CAACC,0BAA0B,CAAC,CAAC;EACnC;EAEAC,eAAeA,CAAA,EAAG;IAChB,OAAOX,SAAS,CAACY,UAAU,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;EACrC;EAEAC,cAAcA,CAACC,SAAS,EAAE;IACxB;IACA,KAAK,MAAMC,IAAI,IAAIX,aAAa,CAACY,YAAY,CAAC,IAAI,CAAC,EAAE;MACnD,IAAID,IAAI,CAACE,QAAQ,KAAKZ,YAAY,IAAIU,IAAI,CAACG,YAAY,CAAC,IAAI,CAAC,KAAKJ,SAAS,EAAE;QAC3E,OAAOC,IAAI;MACb;IACF;IACA,OAAO,IAAI;EACb;EAEAI,aAAaA,CAAA,EAAG;IACd,OAAO,CAAC;EACV;EACAC,eAAeA,CAAA,EAAG,CAAC;EACnBC,kBAAkBA,CAAA,EAAG,CAAC;EACtBC,WAAWA,CAAA,EAAG,CAAC;AACjB;AAEAxB,KAAK,CAACQ,iBAAiB,CAACiB,SAAS,EAAEpB,uBAAuB,CAACoB,SAAS,CAAC;AAErEC,MAAM,CAACC,OAAO,GAAG;EACfvB,cAAc,EAAEI;AAClB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}