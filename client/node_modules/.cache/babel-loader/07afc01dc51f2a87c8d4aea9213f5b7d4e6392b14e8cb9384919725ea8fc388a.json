{"ast":null,"code":"\"use strict\";\n\nconst path = require(\"path\");\nconst whatwgURL = require(\"whatwg-url\");\nconst {\n  domSymbolTree\n} = require(\"./living/helpers/internal-constants\");\nconst SYMBOL_TREE_POSITION = require(\"symbol-tree\").TreePosition;\nconst {\n  parseURLToResultingURLRecord\n} = require(\"./living/helpers/document-base-url\");\nexports.toFileUrl = function (fileName) {\n  // Beyond just the `path.resolve`, this is mostly for the benefit of Windows,\n  // where we need to convert \"\\\" to \"/\" and add an extra \"/\" prefix before the\n  // drive letter.\n  let pathname = path.resolve(process.cwd(), fileName).replace(/\\\\/g, \"/\");\n  if (pathname[0] !== \"/\") {\n    pathname = \"/\" + pathname;\n  }\n\n  // path might contain spaces, so convert those to %20\n  return \"file://\" + encodeURI(pathname);\n};\n\n/**\n * Define a getter on an object\n *\n * This method replaces any existing getter but leaves setters in place.\n *\n * - `object` {Object} the object to define the getter on\n * - `property` {String} the name of the getter\n * - `getterFn` {Function} the getter\n */\nexports.defineGetter = function defineGetter(object, property, getterFn) {\n  const descriptor = Object.getOwnPropertyDescriptor(object, property) || {\n    configurable: true,\n    enumerable: true\n  };\n  descriptor.get = getterFn;\n  Object.defineProperty(object, property, descriptor);\n};\n\n/**\n * Define a set of properties on an object, by copying the property descriptors\n * from the original object.\n *\n * - `object` {Object} the target object\n * - `properties` {Object} the source from which to copy property descriptors\n */\nexports.define = function define(object, properties) {\n  for (const name of Object.getOwnPropertyNames(properties)) {\n    const propDesc = Object.getOwnPropertyDescriptor(properties, name);\n    Object.defineProperty(object, name, propDesc);\n  }\n};\n\n/**\n * Define a list of constants on a constructor and its .prototype\n *\n * - `Constructor` {Function} the constructor to define the constants on\n * - `propertyMap` {Object}  key/value map of properties to define\n */\nexports.addConstants = function addConstants(Constructor, propertyMap) {\n  for (const property in propertyMap) {\n    const value = propertyMap[property];\n    addConstant(Constructor, property, value);\n    addConstant(Constructor.prototype, property, value);\n  }\n};\nfunction addConstant(object, property, value) {\n  Object.defineProperty(object, property, {\n    configurable: false,\n    enumerable: true,\n    writable: false,\n    value\n  });\n}\nexports.mixin = (target, source) => {\n  const keys = Reflect.ownKeys(source);\n  for (let i = 0; i < keys.length; ++i) {\n    if (keys[i] in target) {\n      continue;\n    }\n    Object.defineProperty(target, keys[i], Object.getOwnPropertyDescriptor(source, keys[i]));\n  }\n};\nlet memoizeQueryTypeCounter = 0;\n\n/**\n * Returns a version of a method that memoizes specific types of calls on the object\n *\n * - `fn` {Function} the method to be memozied\n */\nexports.memoizeQuery = function memoizeQuery(fn) {\n  // Only memoize query functions with arity <= 2\n  if (fn.length > 2) {\n    return fn;\n  }\n  const type = memoizeQueryTypeCounter++;\n  return function () {\n    if (!this._memoizedQueries) {\n      return fn.apply(this, arguments);\n    }\n    if (!this._memoizedQueries[type]) {\n      this._memoizedQueries[type] = Object.create(null);\n    }\n    let key;\n    if (arguments.length === 1 && typeof arguments[0] === \"string\") {\n      key = arguments[0];\n    } else if (arguments.length === 2 && typeof arguments[0] === \"string\" && typeof arguments[1] === \"string\") {\n      key = arguments[0] + \"::\" + arguments[1];\n    } else {\n      return fn.apply(this, arguments);\n    }\n    if (!(key in this._memoizedQueries[type])) {\n      this._memoizedQueries[type][key] = fn.apply(this, arguments);\n    }\n    return this._memoizedQueries[type][key];\n  };\n};\nexports.reflectURLAttribute = (elementImpl, contentAttributeName) => {\n  const attributeValue = elementImpl.getAttribute(contentAttributeName);\n  if (attributeValue === null || attributeValue === \"\") {\n    return \"\";\n  }\n  const urlRecord = parseURLToResultingURLRecord(attributeValue, elementImpl._ownerDocument);\n  if (urlRecord === null) {\n    return attributeValue;\n  }\n  return whatwgURL.serializeURL(urlRecord);\n};\nfunction isValidAbsoluteURL(str) {\n  return whatwgURL.parseURL(str) !== null;\n}\nexports.isValidTargetOrigin = function (str) {\n  return str === \"*\" || str === \"/\" || isValidAbsoluteURL(str);\n};\nexports.simultaneousIterators = function* (first, second) {\n  for (;;) {\n    const firstResult = first.next();\n    const secondResult = second.next();\n    if (firstResult.done && secondResult.done) {\n      return;\n    }\n    yield [firstResult.done ? null : firstResult.value, secondResult.done ? null : secondResult.value];\n  }\n};\nexports.treeOrderSorter = function (a, b) {\n  const compare = domSymbolTree.compareTreePosition(a, b);\n  if (compare & SYMBOL_TREE_POSITION.PRECEDING) {\n    // b is preceding a\n    return 1;\n  }\n  if (compare & SYMBOL_TREE_POSITION.FOLLOWING) {\n    return -1;\n  }\n\n  // disconnected or equal:\n  return 0;\n};\n\n/* eslint-disable global-require */\n\nexports.Canvas = null;\n[\"canvas\", \"canvas-prebuilt\"].some(moduleName => {\n  try {\n    exports.Canvas = require(moduleName);\n    if (typeof exports.Canvas !== \"function\") {\n      // In browserify, the require will succeed but return an empty object\n      exports.Canvas = null;\n    }\n  } catch (e) {\n    exports.Canvas = null;\n  }\n  return exports.Canvas !== null;\n});","map":{"version":3,"names":["path","require","whatwgURL","domSymbolTree","SYMBOL_TREE_POSITION","TreePosition","parseURLToResultingURLRecord","exports","toFileUrl","fileName","pathname","resolve","process","cwd","replace","encodeURI","defineGetter","object","property","getterFn","descriptor","Object","getOwnPropertyDescriptor","configurable","enumerable","get","defineProperty","define","properties","name","getOwnPropertyNames","propDesc","addConstants","Constructor","propertyMap","value","addConstant","prototype","writable","mixin","target","source","keys","Reflect","ownKeys","i","length","memoizeQueryTypeCounter","memoizeQuery","fn","type","_memoizedQueries","apply","arguments","create","key","reflectURLAttribute","elementImpl","contentAttributeName","attributeValue","getAttribute","urlRecord","_ownerDocument","serializeURL","isValidAbsoluteURL","str","parseURL","isValidTargetOrigin","simultaneousIterators","first","second","firstResult","next","secondResult","done","treeOrderSorter","a","b","compare","compareTreePosition","PRECEDING","FOLLOWING","Canvas","some","moduleName","e"],"sources":["G:/scientificKeyboard/keyboard/node_modules/mathjax-node/node_modules/jsdom/lib/jsdom/utils.js"],"sourcesContent":["\"use strict\";\nconst path = require(\"path\");\nconst whatwgURL = require(\"whatwg-url\");\nconst { domSymbolTree } = require(\"./living/helpers/internal-constants\");\nconst SYMBOL_TREE_POSITION = require(\"symbol-tree\").TreePosition;\nconst { parseURLToResultingURLRecord } = require(\"./living/helpers/document-base-url\");\n\nexports.toFileUrl = function (fileName) {\n  // Beyond just the `path.resolve`, this is mostly for the benefit of Windows,\n  // where we need to convert \"\\\" to \"/\" and add an extra \"/\" prefix before the\n  // drive letter.\n  let pathname = path.resolve(process.cwd(), fileName).replace(/\\\\/g, \"/\");\n  if (pathname[0] !== \"/\") {\n    pathname = \"/\" + pathname;\n  }\n\n  // path might contain spaces, so convert those to %20\n  return \"file://\" + encodeURI(pathname);\n};\n\n/**\n * Define a getter on an object\n *\n * This method replaces any existing getter but leaves setters in place.\n *\n * - `object` {Object} the object to define the getter on\n * - `property` {String} the name of the getter\n * - `getterFn` {Function} the getter\n */\nexports.defineGetter = function defineGetter(object, property, getterFn) {\n  const descriptor = Object.getOwnPropertyDescriptor(object, property) || {\n    configurable: true,\n    enumerable: true\n  };\n\n  descriptor.get = getterFn;\n\n  Object.defineProperty(object, property, descriptor);\n};\n\n/**\n * Define a set of properties on an object, by copying the property descriptors\n * from the original object.\n *\n * - `object` {Object} the target object\n * - `properties` {Object} the source from which to copy property descriptors\n */\nexports.define = function define(object, properties) {\n  for (const name of Object.getOwnPropertyNames(properties)) {\n    const propDesc = Object.getOwnPropertyDescriptor(properties, name);\n    Object.defineProperty(object, name, propDesc);\n  }\n};\n\n/**\n * Define a list of constants on a constructor and its .prototype\n *\n * - `Constructor` {Function} the constructor to define the constants on\n * - `propertyMap` {Object}  key/value map of properties to define\n */\nexports.addConstants = function addConstants(Constructor, propertyMap) {\n  for (const property in propertyMap) {\n    const value = propertyMap[property];\n    addConstant(Constructor, property, value);\n    addConstant(Constructor.prototype, property, value);\n  }\n};\n\nfunction addConstant(object, property, value) {\n  Object.defineProperty(object, property, {\n    configurable: false,\n    enumerable: true,\n    writable: false,\n    value\n  });\n}\n\nexports.mixin = (target, source) => {\n  const keys = Reflect.ownKeys(source);\n  for (let i = 0; i < keys.length; ++i) {\n    if (keys[i] in target) {\n      continue;\n    }\n\n    Object.defineProperty(target, keys[i], Object.getOwnPropertyDescriptor(source, keys[i]));\n  }\n};\n\nlet memoizeQueryTypeCounter = 0;\n\n/**\n * Returns a version of a method that memoizes specific types of calls on the object\n *\n * - `fn` {Function} the method to be memozied\n */\nexports.memoizeQuery = function memoizeQuery(fn) {\n  // Only memoize query functions with arity <= 2\n  if (fn.length > 2) {\n    return fn;\n  }\n\n  const type = memoizeQueryTypeCounter++;\n\n  return function () {\n    if (!this._memoizedQueries) {\n      return fn.apply(this, arguments);\n    }\n\n    if (!this._memoizedQueries[type]) {\n      this._memoizedQueries[type] = Object.create(null);\n    }\n\n    let key;\n    if (arguments.length === 1 && typeof arguments[0] === \"string\") {\n      key = arguments[0];\n    } else if (arguments.length === 2 && typeof arguments[0] === \"string\" && typeof arguments[1] === \"string\") {\n      key = arguments[0] + \"::\" + arguments[1];\n    } else {\n      return fn.apply(this, arguments);\n    }\n\n    if (!(key in this._memoizedQueries[type])) {\n      this._memoizedQueries[type][key] = fn.apply(this, arguments);\n    }\n    return this._memoizedQueries[type][key];\n  };\n};\n\nexports.reflectURLAttribute = (elementImpl, contentAttributeName) => {\n  const attributeValue = elementImpl.getAttribute(contentAttributeName);\n  if (attributeValue === null || attributeValue === \"\") {\n    return \"\";\n  }\n\n  const urlRecord = parseURLToResultingURLRecord(attributeValue, elementImpl._ownerDocument);\n  if (urlRecord === null) {\n    return attributeValue;\n  }\n  return whatwgURL.serializeURL(urlRecord);\n};\n\nfunction isValidAbsoluteURL(str) {\n  return whatwgURL.parseURL(str) !== null;\n}\n\nexports.isValidTargetOrigin = function (str) {\n  return str === \"*\" || str === \"/\" || isValidAbsoluteURL(str);\n};\n\nexports.simultaneousIterators = function* (first, second) {\n  for (;;) {\n    const firstResult = first.next();\n    const secondResult = second.next();\n\n    if (firstResult.done && secondResult.done) {\n      return;\n    }\n\n    yield [\n      firstResult.done ? null : firstResult.value,\n      secondResult.done ? null : secondResult.value\n    ];\n  }\n};\n\nexports.treeOrderSorter = function (a, b) {\n  const compare = domSymbolTree.compareTreePosition(a, b);\n\n  if (compare & SYMBOL_TREE_POSITION.PRECEDING) { // b is preceding a\n    return 1;\n  }\n\n  if (compare & SYMBOL_TREE_POSITION.FOLLOWING) {\n    return -1;\n  }\n\n  // disconnected or equal:\n  return 0;\n};\n\n/* eslint-disable global-require */\n\nexports.Canvas = null;\n[\"canvas\", \"canvas-prebuilt\"].some(moduleName => {\n  try {\n    exports.Canvas = require(moduleName);\n    if (typeof exports.Canvas !== \"function\") {\n      // In browserify, the require will succeed but return an empty object\n      exports.Canvas = null;\n    }\n  } catch (e) {\n    exports.Canvas = null;\n  }\n  return exports.Canvas !== null;\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}