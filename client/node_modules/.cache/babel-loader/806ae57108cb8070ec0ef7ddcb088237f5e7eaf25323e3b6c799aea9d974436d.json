{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\nconst convertNode = require(\"./Node.js\").convert;\nconst impl = utils.implSymbol;\nfunction TreeWalker() {\n  throw new TypeError(\"Illegal constructor\");\n}\nObject.defineProperty(TreeWalker, \"prototype\", {\n  value: TreeWalker.prototype,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\nTreeWalker.prototype.parentNode = function parentNode() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  return utils.tryWrapperForImpl(this[impl].parentNode());\n};\nTreeWalker.prototype.firstChild = function firstChild() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  return utils.tryWrapperForImpl(this[impl].firstChild());\n};\nTreeWalker.prototype.lastChild = function lastChild() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  return utils.tryWrapperForImpl(this[impl].lastChild());\n};\nTreeWalker.prototype.previousSibling = function previousSibling() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  return utils.tryWrapperForImpl(this[impl].previousSibling());\n};\nTreeWalker.prototype.nextSibling = function nextSibling() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  return utils.tryWrapperForImpl(this[impl].nextSibling());\n};\nTreeWalker.prototype.previousNode = function previousNode() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  return utils.tryWrapperForImpl(this[impl].previousNode());\n};\nTreeWalker.prototype.nextNode = function nextNode() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  return utils.tryWrapperForImpl(this[impl].nextNode());\n};\nObject.defineProperty(TreeWalker.prototype, \"root\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n    return utils.getSameObject(this, \"root\", () => {\n      return utils.tryWrapperForImpl(this[impl][\"root\"]);\n    });\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(TreeWalker.prototype, \"whatToShow\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n    return this[impl][\"whatToShow\"];\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(TreeWalker.prototype, \"filter\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n    return utils.tryWrapperForImpl(this[impl][\"filter\"]);\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(TreeWalker.prototype, \"currentNode\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n    return utils.tryWrapperForImpl(this[impl][\"currentNode\"]);\n  },\n  set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n    V = convertNode(V, {\n      context: \"Failed to set the 'currentNode' property on 'TreeWalker': The provided value\"\n    });\n    this[impl][\"currentNode\"] = V;\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(TreeWalker.prototype, Symbol.toStringTag, {\n  value: \"TreeWalker\",\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj) {\n    let {\n      context = \"The provided value\"\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'TreeWalker'.`);\n  },\n  create(constructorArgs, privateData) {\n    let obj = Object.create(TreeWalker.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(TreeWalker.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {},\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: TreeWalker,\n  expose: {\n    Window: {\n      TreeWalker\n    }\n  }\n}; // iface\nmodule.exports = iface;\nconst Impl = require(\"../traversal/TreeWalker-impl.js\");","map":{"version":3,"names":["conversions","require","utils","convertNode","convert","impl","implSymbol","TreeWalker","TypeError","Object","defineProperty","value","prototype","writable","enumerable","configurable","parentNode","module","exports","is","tryWrapperForImpl","firstChild","lastChild","previousSibling","nextSibling","previousNode","nextNode","get","getSameObject","set","V","context","Symbol","toStringTag","iface","_mixedIntoPredicates","obj","hasOwn","Impl","implementation","isMixedInto","isImpl","wrapper","wrapperForImpl","arguments","length","undefined","implForWrapper","create","constructorArgs","privateData","setup","createImpl","_internalSetup","wrapperSymbol","init","interface","expose","Window"],"sources":["G:/scientificKeyboard/keyboard/node_modules/mathjax-node/node_modules/jsdom/lib/jsdom/living/generated/TreeWalker.js"],"sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst convertNode = require(\"./Node.js\").convert;\nconst impl = utils.implSymbol;\n\nfunction TreeWalker() {\n  throw new TypeError(\"Illegal constructor\");\n}\n\nObject.defineProperty(TreeWalker, \"prototype\", {\n  value: TreeWalker.prototype,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\n\nTreeWalker.prototype.parentNode = function parentNode() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  return utils.tryWrapperForImpl(this[impl].parentNode());\n};\n\nTreeWalker.prototype.firstChild = function firstChild() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  return utils.tryWrapperForImpl(this[impl].firstChild());\n};\n\nTreeWalker.prototype.lastChild = function lastChild() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  return utils.tryWrapperForImpl(this[impl].lastChild());\n};\n\nTreeWalker.prototype.previousSibling = function previousSibling() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  return utils.tryWrapperForImpl(this[impl].previousSibling());\n};\n\nTreeWalker.prototype.nextSibling = function nextSibling() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  return utils.tryWrapperForImpl(this[impl].nextSibling());\n};\n\nTreeWalker.prototype.previousNode = function previousNode() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  return utils.tryWrapperForImpl(this[impl].previousNode());\n};\n\nTreeWalker.prototype.nextNode = function nextNode() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  return utils.tryWrapperForImpl(this[impl].nextNode());\n};\n\nObject.defineProperty(TreeWalker.prototype, \"root\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.getSameObject(this, \"root\", () => {\n      return utils.tryWrapperForImpl(this[impl][\"root\"]);\n    });\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(TreeWalker.prototype, \"whatToShow\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"whatToShow\"];\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(TreeWalker.prototype, \"filter\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"filter\"]);\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(TreeWalker.prototype, \"currentNode\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return utils.tryWrapperForImpl(this[impl][\"currentNode\"]);\n  },\n\n  set(V) {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    V = convertNode(V, { context: \"Failed to set the 'currentNode' property on 'TreeWalker': The provided value\" });\n\n    this[impl][\"currentNode\"] = V;\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(TreeWalker.prototype, Symbol.toStringTag, {\n  value: \"TreeWalker\",\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\n\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj, { context = \"The provided value\" } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'TreeWalker'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(TreeWalker.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(TreeWalker.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {},\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: TreeWalker,\n  expose: {\n    Window: { TreeWalker }\n  }\n}; // iface\nmodule.exports = iface;\n\nconst Impl = require(\"../traversal/TreeWalker-impl.js\");\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}