{"ast":null,"code":"var _jsxFileName = \"G:\\\\scientificKeyboard\\\\keyboard\\\\src\\\\components\\\\scientificKeyboard .js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button, Grid, colors } from '@mui/material';\nimport \"../App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScientificKeyboard = _ref => {\n  _s();\n  let {\n    handleInput\n  } = _ref;\n  const [keys, setKeys] = useState([\"\\\\sin\", \"\\\\cos\", \"\\\\tan\", \"\\\\cot\", \"\\\\sec\", \"\\\\csc\", \"\\\\arcsin\", \"\\\\arccos\", \"\\\\arctan\", \"\\\\text{acot}\", \"\\\\text{asec}\", \"\\\\text{acsc}\", \"\\\\log\", \"\\\\ln\", \"\\\\exp\", \"\\\\sqrt{}\", \"x^n\", \"x^2\", \"x^3\", \"\\\\int\", \"\\\\iint\", \"\\\\iiint\", \"\\\\oint\", \"\\\\oiint\", \"\\\\oiiint\", \"\\\\nabla\", \"(\", \")\", \"[\", \"]\", \"{{}\", \"}\", \"\\\\pi\", \"\\\\text{e}\", \"\\\\varphi\", \"\\\\gamma\", \"\\\\phi\", \"\\\\theta\", \"\\\\lambda\", \"\\\\mu\", \"\\\\nu\", \"\\\\rho\", \"\\\\sigma\", \"\\\\tau\", \"\\\\omega\", \"<\", \">\", \"=\", \"\\\\neq\", \"\\\\approx\", \"\\\\cong\", \"\\\\equiv\", \"\\\\not\\\\equiv\", \"\\\\prec\", \"\\\\succ\", \"\\\\preceq\", \"\\\\succeq\", \"\\\\in\", \"\\\\notin\", \"\\\\ni\", \"\\\\not\\\\ni\", \"\\\\cup\", \"\\\\cap\", \"\\\\subseteq\", \"\\\\supseteq\", \"\\\\subset\", \"\\\\supset\", \"\\\\varnothing\", \"\\\\forall\", \"\\\\exists\", \"\\\\nexists\", \"\\\\Delta\", \"\\\\partial\", \"\\\\infty\", \"\\\\sum\", \"\\\\prod\", \"\\\\coprod\", \"!\", \"%\", \"\\\\pm\", \"/\", \"*\", \"-\", \"+\", \".\", \"\\\\wedge\", \"\\\\ldots\", \"\\\\vdots\", \"\\\\therefore\", \"\\\\leftrightarrow\", \"\\\\rightarrow\", \"\\\\leftarrow\", \"\\\\uparrow\", \"\\\\downarrow\", \"\\\\oplus\", \"\\\\otimes\", \"\\\\ominus\", \"\\\\oslash\", \"\\\\dotplus\", \"\\\\odot\", \"\\\\circledcirc\", \"\\\\circledast\", \"\\\\circledot\", \"\\\\boxplus\", \"\\\\boxminus\", \"\\\\boxtimes\", \"\\\\boxdot\", \"\\\\sqrt[3]{}\", \"\\\\sqrt[4]{}\", \"\\\\propto\", \"^\\\\circ\", \"\\\\rightangle\", \"\\\\angle\", \"\\\\measuredangle\", \"\\\\sphericalangle\", \"\\\\mid\", \"\\\\parallel\", \"\\\\nparallel\", \"\\\\land\", \"\\\\lor\", \"\\\\hbar\", \"\\\\sim\", \"\\\\backsim\", \"\\\\wr\", \"\\\\asymp\", \"\\\\nsim\", \"\\\\eqsim\", \"\\\\lesssim\", \"\\\\gtrsim\", \"\\\\lessapprox\", \"\\\\gtrapprox\", \"\\\\precapprox\", \"\\\\succapprox\", \"\\\\subsetneq\", \"\\\\supsetneq\", \"\\\\leq\", \"\\\\geq\", \"\\\\leqq\", \"\\\\geqq\", \"\\\\nleq\", \"\\\\ngeq\", \"\\\\ll\", \"\\\\gg\", \"\\\\between\", \"\\\\nasymp\", \"\\\\pitchfork\", \"\\\\because\"]);\n  const [input, setInput] = useState('');\n  const handleClick = value => {\n    handleInput(value);\n    console.log(\"clicked\", value);\n  };\n  const [numb, setNumb] = useState(\" \");\n  const handleChange = event => {\n    setNumb(event.target.value);\n    console.log(\"changed the value when pressed the numbers \");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"scientific-keyboard\",\n    children: keys.map((symbol, index) => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 0.6,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        className: \"button\",\n        id: \"my-btn\",\n        style: {\n          width: '50px',\n          height: '50px',\n          color: 'black',\n          padding: '1px',\n          border: '2px solid black',\n          backgroundColor: 'grey',\n          borderRadius: '10px',\n          boxShadow: '10px 10px 15px rgba(10, 50, 50, 250)'\n        },\n        variant: \"contained\",\n        onClick: () => handleClick(symbol),\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: symbol\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)\n      }, symbol, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)\n    }, symbol, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(ScientificKeyboard, \"rHyEHAiZwSlsZiGJbTj65Djwqts=\");\n_c = ScientificKeyboard;\nexport default ScientificKeyboard;\nvar _c;\n$RefreshReg$(_c, \"ScientificKeyboard\");","map":{"version":3,"names":["React","useState","Button","Grid","colors","jsxDEV","_jsxDEV","ScientificKeyboard","_ref","_s","handleInput","keys","setKeys","input","setInput","handleClick","value","console","log","numb","setNumb","handleChange","event","target","className","children","map","symbol","index","item","xs","id","style","width","height","color","padding","border","backgroundColor","borderRadius","boxShadow","variant","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["G:/scientificKeyboard/keyboard/src/components/scientificKeyboard .js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, Grid, colors } from '@mui/material';\r\nimport \"../App.css\"\r\n\r\n\r\n\r\n\r\n\r\nconst ScientificKeyboard = ({ handleInput }) => {\r\n  const [keys, setKeys] = useState([\"\\\\sin\", \"\\\\cos\", \"\\\\tan\", \"\\\\cot\", \"\\\\sec\", \"\\\\csc\", \"\\\\arcsin\", \"\\\\arccos\", \"\\\\arctan\", \"\\\\text{acot}\", \"\\\\text{asec}\", \"\\\\text{acsc}\", \"\\\\log\", \"\\\\ln\", \"\\\\exp\", \"\\\\sqrt{}\", \"x^n\", \"x^2\", \"x^3\", \"\\\\int\", \"\\\\iint\", \"\\\\iiint\", \"\\\\oint\", \"\\\\oiint\", \"\\\\oiiint\", \"\\\\nabla\", \"(\", \")\", \"[\", \"]\", \"{{}\", \"}\", \"\\\\pi\", \"\\\\text{e}\", \"\\\\varphi\", \"\\\\gamma\", \"\\\\phi\", \"\\\\theta\", \"\\\\lambda\", \"\\\\mu\", \"\\\\nu\", \"\\\\rho\", \"\\\\sigma\", \"\\\\tau\", \"\\\\omega\", \"<\", \">\", \"=\", \"\\\\neq\", \"\\\\approx\", \"\\\\cong\", \"\\\\equiv\", \"\\\\not\\\\equiv\", \"\\\\prec\", \"\\\\succ\", \"\\\\preceq\", \"\\\\succeq\", \"\\\\in\", \"\\\\notin\", \"\\\\ni\", \"\\\\not\\\\ni\", \"\\\\cup\", \"\\\\cap\", \"\\\\subseteq\", \"\\\\supseteq\", \"\\\\subset\", \"\\\\supset\", \"\\\\varnothing\", \"\\\\forall\", \"\\\\exists\", \"\\\\nexists\", \"\\\\Delta\", \"\\\\partial\", \"\\\\infty\", \"\\\\sum\", \"\\\\prod\", \"\\\\coprod\", \"!\", \"%\", \"\\\\pm\", \"/\", \"*\", \"-\", \"+\", \".\", \"\\\\wedge\", \"\\\\ldots\", \"\\\\vdots\", \"\\\\therefore\", \"\\\\leftrightarrow\", \"\\\\rightarrow\", \"\\\\leftarrow\", \"\\\\uparrow\", \"\\\\downarrow\", \"\\\\oplus\", \"\\\\otimes\", \"\\\\ominus\", \"\\\\oslash\", \"\\\\dotplus\", \"\\\\odot\", \"\\\\circledcirc\", \"\\\\circledast\", \"\\\\circledot\", \"\\\\boxplus\", \"\\\\boxminus\", \"\\\\boxtimes\", \"\\\\boxdot\", \"\\\\sqrt[3]{}\", \"\\\\sqrt[4]{}\", \"\\\\propto\", \"^\\\\circ\", \"\\\\rightangle\", \"\\\\angle\", \"\\\\measuredangle\", \"\\\\sphericalangle\", \"\\\\mid\", \"\\\\parallel\", \"\\\\nparallel\", \"\\\\land\", \"\\\\lor\", \"\\\\hbar\", \"\\\\sim\", \"\\\\backsim\", \"\\\\wr\", \"\\\\asymp\", \"\\\\nsim\", \"\\\\eqsim\", \"\\\\lesssim\", \"\\\\gtrsim\", \"\\\\lessapprox\", \"\\\\gtrapprox\", \"\\\\precapprox\", \"\\\\succapprox\", \"\\\\subsetneq\", \"\\\\supsetneq\", \"\\\\leq\", \"\\\\geq\", \"\\\\leqq\", \"\\\\geqq\", \"\\\\nleq\", \"\\\\ngeq\", \"\\\\ll\", \"\\\\gg\", \"\\\\between\", \"\\\\nasymp\", \"\\\\pitchfork\", \"\\\\because\"]);\r\n\r\n\r\n\r\n  const [input, setInput] = useState('');\r\n\r\n  const handleClick = (value) => {\r\n\r\n    handleInput(value);\r\n    console.log(\"clicked\", value);\r\n\r\n\r\n\r\n  };\r\n\r\n\r\n\r\n  const [numb, setNumb] = useState(\" \")\r\n  const handleChange = (event) => {\r\n    setNumb(event.target.value);\r\n    console.log(\"changed the value when pressed the numbers \");\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"scientific-keyboard\">\r\n      {/* <Grid container spacing={0.6}>\r\n        {keys.map((symbol, index) => (\r\n          <Grid item xs={0.6} key={symbol}>\r\n            <Button className=\"button\" key={symbol} id=\"my-btn\" style={{\r\n              width: '50px',\r\n              height: '50px',\r\n              color: 'black',\r\n              padding: '1px',\r\n              border: '2px solid black',\r\n              backgroundColor: 'grey',\r\n              borderRadius: '10px', // Add a border radius of 10px\r\n              boxShadow: '10px 10px 15px rgba(10, 50, 50, 250)'   // Add a box shadow\r\n            }} variant=\"contained\" onClick={() => handleClick(symbol)}>\r\n              {index}\r\n            </Button>\r\n\r\n          </Grid>\r\n        ))}\r\n      </Grid> */}\r\n      {keys.map((symbol, index) => (\r\n        <Grid item xs={0.6} key={symbol}>\r\n          <Button\r\n            className=\"button\"\r\n            key={symbol}\r\n            id=\"my-btn\"\r\n            style={{\r\n              width: '50px',\r\n              height: '50px',\r\n              color: 'black',\r\n              padding: '1px',\r\n              border: '2px solid black',\r\n              backgroundColor: 'grey',\r\n              borderRadius: '10px',\r\n              boxShadow: '10px 10px 15px rgba(10, 50, 50, 250)'\r\n            }}\r\n            variant=\"contained\"\r\n            onClick={() => handleClick(symbol)}\r\n          >\r\n            <span>{symbol}</span>\r\n          </Button>\r\n        </Grid>\r\n      ))}\r\n\r\n\r\n\r\n\r\n\r\n\r\n    </div >\r\n  );\r\n\r\n};\r\n\r\n\r\n\r\n\r\nexport default ScientificKeyboard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}