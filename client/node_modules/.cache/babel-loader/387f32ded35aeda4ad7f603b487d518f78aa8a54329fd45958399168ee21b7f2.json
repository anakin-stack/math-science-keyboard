{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst focusing = require(\"../helpers/focusing\");\nconst DOMStringMap = require(\"../generated/DOMStringMap\");\nclass HTMLAndSVGElementSharedImpl {\n  _initHTMLAndSVGElement() {\n    this._tabIndex = 0;\n    this._dataset = DOMStringMap.createImpl([], {\n      element: this\n    });\n  }\n  get dataset() {\n    return this._dataset;\n  }\n\n  // TODO this should be [Reflect]able if we added default value support to webidl2js's [Reflect]\n  get tabIndex() {\n    if (!this.hasAttribute(\"tabindex\")) {\n      return focusing.isFocusableAreaElement(this) ? 0 : -1;\n    }\n    return conversions.long(this.getAttribute(\"tabindex\"));\n  }\n  set tabIndex(value) {\n    this.setAttribute(\"tabindex\", String(value));\n  }\n  focus() {\n    if (!focusing.isFocusableAreaElement(this)) {\n      return;\n    }\n    const previous = this._ownerDocument._lastFocusedElement;\n    focusing.fireFocusEventWithTargetAdjustment(\"blur\", previous, this);\n    this._ownerDocument._lastFocusedElement = this;\n    focusing.fireFocusEventWithTargetAdjustment(\"focus\", this, previous);\n    if (this._ownerDocument._defaultView._frameElement) {\n      this._ownerDocument._defaultView._frameElement.focus();\n    }\n  }\n  blur() {\n    if (this._ownerDocument._lastFocusedElement !== this || !focusing.isFocusableAreaElement(this)) {\n      return;\n    }\n    focusing.fireFocusEventWithTargetAdjustment(\"blur\", this, this._ownerDocument);\n    this._ownerDocument._lastFocusedElement = null;\n    focusing.fireFocusEventWithTargetAdjustment(\"focus\", this._ownerDocument, this);\n  }\n}\nexports.implementation = HTMLAndSVGElementSharedImpl;","map":{"version":3,"names":["conversions","require","focusing","DOMStringMap","HTMLAndSVGElementSharedImpl","_initHTMLAndSVGElement","_tabIndex","_dataset","createImpl","element","dataset","tabIndex","hasAttribute","isFocusableAreaElement","long","getAttribute","value","setAttribute","String","focus","previous","_ownerDocument","_lastFocusedElement","fireFocusEventWithTargetAdjustment","_defaultView","_frameElement","blur","exports","implementation"],"sources":["G:/scientificKeyboard/keyboard/node_modules/mathjax-node/node_modules/jsdom/lib/jsdom/living/nodes/HTMLAndSVGElementShared-impl.js"],"sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst focusing = require(\"../helpers/focusing\");\nconst DOMStringMap = require(\"../generated/DOMStringMap\");\n\nclass HTMLAndSVGElementSharedImpl {\n  _initHTMLAndSVGElement() {\n    this._tabIndex = 0;\n    this._dataset = DOMStringMap.createImpl([], { element: this });\n  }\n\n  get dataset() {\n    return this._dataset;\n  }\n\n  // TODO this should be [Reflect]able if we added default value support to webidl2js's [Reflect]\n  get tabIndex() {\n    if (!this.hasAttribute(\"tabindex\")) {\n      return focusing.isFocusableAreaElement(this) ? 0 : -1;\n    }\n    return conversions.long(this.getAttribute(\"tabindex\"));\n  }\n\n  set tabIndex(value) {\n    this.setAttribute(\"tabindex\", String(value));\n  }\n\n  focus() {\n    if (!focusing.isFocusableAreaElement(this)) {\n      return;\n    }\n\n    const previous = this._ownerDocument._lastFocusedElement;\n\n    focusing.fireFocusEventWithTargetAdjustment(\"blur\", previous, this);\n    this._ownerDocument._lastFocusedElement = this;\n    focusing.fireFocusEventWithTargetAdjustment(\"focus\", this, previous);\n\n    if (this._ownerDocument._defaultView._frameElement) {\n      this._ownerDocument._defaultView._frameElement.focus();\n    }\n  }\n\n  blur() {\n    if (this._ownerDocument._lastFocusedElement !== this || !focusing.isFocusableAreaElement(this)) {\n      return;\n    }\n\n    focusing.fireFocusEventWithTargetAdjustment(\"blur\", this, this._ownerDocument);\n    this._ownerDocument._lastFocusedElement = null;\n    focusing.fireFocusEventWithTargetAdjustment(\"focus\", this._ownerDocument, this);\n  }\n}\n\nexports.implementation = HTMLAndSVGElementSharedImpl;\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,WAAW,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AACjD,MAAMC,QAAQ,GAAGD,OAAO,CAAC,qBAAqB,CAAC;AAC/C,MAAME,YAAY,GAAGF,OAAO,CAAC,2BAA2B,CAAC;AAEzD,MAAMG,2BAA2B,CAAC;EAChCC,sBAAsBA,CAAA,EAAG;IACvB,IAAI,CAACC,SAAS,GAAG,CAAC;IAClB,IAAI,CAACC,QAAQ,GAAGJ,YAAY,CAACK,UAAU,CAAC,EAAE,EAAE;MAAEC,OAAO,EAAE;IAAK,CAAC,CAAC;EAChE;EAEA,IAAIC,OAAOA,CAAA,EAAG;IACZ,OAAO,IAAI,CAACH,QAAQ;EACtB;;EAEA;EACA,IAAII,QAAQA,CAAA,EAAG;IACb,IAAI,CAAC,IAAI,CAACC,YAAY,CAAC,UAAU,CAAC,EAAE;MAClC,OAAOV,QAAQ,CAACW,sBAAsB,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACvD;IACA,OAAOb,WAAW,CAACc,IAAI,CAAC,IAAI,CAACC,YAAY,CAAC,UAAU,CAAC,CAAC;EACxD;EAEA,IAAIJ,QAAQA,CAACK,KAAK,EAAE;IAClB,IAAI,CAACC,YAAY,CAAC,UAAU,EAAEC,MAAM,CAACF,KAAK,CAAC,CAAC;EAC9C;EAEAG,KAAKA,CAAA,EAAG;IACN,IAAI,CAACjB,QAAQ,CAACW,sBAAsB,CAAC,IAAI,CAAC,EAAE;MAC1C;IACF;IAEA,MAAMO,QAAQ,GAAG,IAAI,CAACC,cAAc,CAACC,mBAAmB;IAExDpB,QAAQ,CAACqB,kCAAkC,CAAC,MAAM,EAAEH,QAAQ,EAAE,IAAI,CAAC;IACnE,IAAI,CAACC,cAAc,CAACC,mBAAmB,GAAG,IAAI;IAC9CpB,QAAQ,CAACqB,kCAAkC,CAAC,OAAO,EAAE,IAAI,EAAEH,QAAQ,CAAC;IAEpE,IAAI,IAAI,CAACC,cAAc,CAACG,YAAY,CAACC,aAAa,EAAE;MAClD,IAAI,CAACJ,cAAc,CAACG,YAAY,CAACC,aAAa,CAACN,KAAK,CAAC,CAAC;IACxD;EACF;EAEAO,IAAIA,CAAA,EAAG;IACL,IAAI,IAAI,CAACL,cAAc,CAACC,mBAAmB,KAAK,IAAI,IAAI,CAACpB,QAAQ,CAACW,sBAAsB,CAAC,IAAI,CAAC,EAAE;MAC9F;IACF;IAEAX,QAAQ,CAACqB,kCAAkC,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAACF,cAAc,CAAC;IAC9E,IAAI,CAACA,cAAc,CAACC,mBAAmB,GAAG,IAAI;IAC9CpB,QAAQ,CAACqB,kCAAkC,CAAC,OAAO,EAAE,IAAI,CAACF,cAAc,EAAE,IAAI,CAAC;EACjF;AACF;AAEAM,OAAO,CAACC,cAAc,GAAGxB,2BAA2B"},"metadata":{},"sourceType":"script","externalDependencies":[]}